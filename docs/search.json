[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sequence-dependent activity and compartmentalization of foreign DNA in a eukaryotic nucleus",
    "section": "",
    "text": "Instructions for use\nAll the source code used to analyse and visualize data during this project is included here. However, local paths for processed data (e.g. genomic tracks, peak sets, bam files, etc.) are hard-coded. To replicate exactly the provided notebooks, processed data can be downloaded from GEO and the corresponding paths should be replaced.\nAll sequencing data and processed files are available from GEO: GSE217022",
    "crumbs": [
      "Instructions for use"
    ]
  },
  {
    "objectID": "index.html#instructions-for-use",
    "href": "index.html#instructions-for-use",
    "title": "Sequence-dependent activity and compartmentalization of foreign DNA in a eukaryotic nucleus",
    "section": "Instructions for use",
    "text": "Instructions for use\nAll the source code used to analyse and visualize data during this project is included here. However, local paths for processed data (e.g. genomic tracks, peak sets, bam files, etc.) are hard-coded. To replicate exactly the provided notebooks, processed data can be downloaded from GEO and the corresponding paths should be replaced.\nAll sequencing data and processed files are available from GEO: GSE217022",
    "crumbs": [
      "Instructions for use"
    ]
  },
  {
    "objectID": "index.html#source-code",
    "href": "index.html#source-code",
    "title": "Sequence-dependent activity and compartmentalization of foreign DNA in a eukaryotic nucleus",
    "section": "Source code",
    "text": "Source code\n\nSource code for sequencing data processing is provided in Processing section;\nSource code for every panel of each main Figure (along with the corresponding Extended Data Figures) is provided in a separate .qmd file:\n\nFigure 1, Extended Data Figure 1, 2\nFigure 2, Extended Data Figure 3\nFigure 3, Extended Data Figure 4\nFigure 4, Extended Data Figure 5\nFigure 5, Extended Data Figure 6",
    "crumbs": [
      "Instructions for use"
    ]
  },
  {
    "objectID": "00.System-requirements.html",
    "href": "00.System-requirements.html",
    "title": "1  System requirements",
    "section": "",
    "text": "1.1 Main system requirements",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "00.System-requirements.html#main-system-requirements",
    "href": "00.System-requirements.html#main-system-requirements",
    "title": "1  System requirements",
    "section": "",
    "text": "Ubuntu 18.04\nR 4.3.0, Bioconducctor 3.17\nPython 3.7",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "00.System-requirements.html#non-standard-hardware-requirements",
    "href": "00.System-requirements.html#non-standard-hardware-requirements",
    "title": "1  System requirements",
    "section": "1.2 Non-standard hardware requirements",
    "text": "1.2 Non-standard hardware requirements\nA RTX 2080 Ti GPU was used to improve the training speed of convolutional neural neworks.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "00.System-requirements.html#data-processing-softwares",
    "href": "00.System-requirements.html#data-processing-softwares",
    "title": "1  System requirements",
    "section": "1.3 Data processing softwares",
    "text": "1.3 Data processing softwares\n\n1.3.1 Processing tools\n\nBowtie2 2.4.5\nsamtools 1.9\ndeeptools 2.26.0\nbedtools 2.29.1\nMACS2 2.2.7.1\nseqkit 2.2.0\nKeras\nTensorflow\n\n\n\n1.3.2 Processing workflow managers\nMost sequencing data was processed with tinyMapper 0.11.3-0.12.14.\nHi-C data was processed with hicstuff 3.1.2 and Chromosight 1.4.1.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "00.System-requirements.html#relevant-r-packages",
    "href": "00.System-requirements.html#relevant-r-packages",
    "title": "1  System requirements",
    "section": "1.4 Relevant R packages",
    "text": "1.4 Relevant R packages\nMain R packages used in this study are listed below. All versions are bound to Bioconductor 3.17 unless specifically mentioned.\n\nS4Vectors\nGenomicRanges\nGenomicAlignments\nBiostrings\nrtracklayer\nplyranges\nggplot2\nRepliscope 1.1.1\nHiCExperiment\nHiContacts",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "00.System-requirements.html#relevant-python-packages",
    "href": "00.System-requirements.html#relevant-python-packages",
    "title": "1  System requirements",
    "section": "1.5 Relevant python packages",
    "text": "1.5 Relevant python packages\nMain python packages used in this study are listed below:\n\ncooler 0.8.7-0.8.11\nhicstuff 3.1.2\nChromosight 1.4.1\ncooltools 0.5.1\npysam 0.16.0.1\npyBigWig 3.8.3",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "00.System-requirements.html#installation-guide",
    "href": "00.System-requirements.html#installation-guide",
    "title": "1  System requirements",
    "section": "1.6 Installation guide",
    "text": "1.6 Installation guide\nR 4.3.0 was installed from binaries provided by Posit/RStudio as follows:\n\ncurl -O https://cdn.rstudio.com/r/ubuntu-2004/pkgs/r-4.3.0_1_amd64.deb\nsudo gdebi r-4.3.0_1_amd64.deb\n\nInstallation for all the other dependencies was managed through conda environment manager.\n\n# packages in environment at /home/rsg/miniconda3/envs/tm:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    conda-forge\n_openmp_mutex             4.5                       2_gnu    conda-forge\n_r-mutex                  1.0.1               anacondar_1    conda-forge\nalabaster                 0.7.12                     py_0    conda-forge\nasciitree                 0.3.3                      py_2    conda-forge\nbabel                     2.11.0             pyhd8ed1ab_0    conda-forge\nbedtools                  2.30.0               h468198e_3    bioconda\nbinutils_impl_linux-64    2.36.1               h193b22a_2    conda-forge\nbinutils_linux-64         2.36                hf3e587d_10    conda-forge\nbioframe                  0.3.3              pyhdfd78af_0    bioconda\nbiopython                 1.79             py37h540881e_2    conda-forge\nblas                      1.1                    openblas    conda-forge\nbokeh                     2.4.3            py37h89c1867_0    conda-forge\nbowtie2                   2.5.0            py37hb24965f_0    bioconda\nbrotli                    1.0.9                h166bdaf_8    conda-forge\nbrotli-bin                1.0.9                h166bdaf_8    conda-forge\nbrotlipy                  0.7.0           py37h540881e_1004    conda-forge\nbwa                       0.7.17               h7132678_9    bioconda\nbwidget                   1.9.14               ha770c72_1    conda-forge\nbzip2                     1.0.8                h7f98852_4    conda-forge\nc-ares                    1.18.1               h7f98852_0    conda-forge\nca-certificates           2023.05.30           h06a4308_0\ncached-property           1.5.2                hd8ed1ab_1    conda-forge\ncached_property           1.5.2              pyha770c72_1    conda-forge\ncairo                     1.16.0            h18b612c_1001    conda-forge\ncertifi                   2023.5.7           pyhd8ed1ab_0    conda-forge\ncffi                      1.15.1           py37h43b0acd_1    conda-forge\ncharset-normalizer        2.1.1              pyhd8ed1ab_0    conda-forge\nclick                     8.1.3            py37h89c1867_0    conda-forge\ncloudpickle               2.2.0              pyhd8ed1ab_0    conda-forge\ncolorama                  0.4.6              pyhd8ed1ab_0    conda-forge\ncooler                    0.8.11             pyh5e36f6f_1    bioconda\ncoreutils                 8.25                          1    bioconda\ncryptography              38.0.2           py37h38fbfac_1    conda-forge\ncurl                      7.87.0               h6312ad2_0    conda-forge\ncycler                    0.11.0             pyhd8ed1ab_0    conda-forge\ncytoolz                   0.12.0           py37h540881e_0    conda-forge\ndask                      2021.10.0          pyhd8ed1ab_0    conda-forge\ndask-core                 2021.10.0          pyhd8ed1ab_0    conda-forge\ndbus                      1.13.6               h5008d03_3    conda-forge\ndeeptools                 3.5.1                      py_0    bioconda\ndeeptoolsintervals        0.1.9            py37h8902056_4    bioconda\ndill                      0.3.6              pyhd8ed1ab_1    conda-forge\ndistributed               2021.10.0        py37h06a4308_0\ndocopt                    0.6.2                      py_1    conda-forge\ndocutils                  0.19             py37h89c1867_0    conda-forge\nexpat                     2.5.0                h27087fc_0    conda-forge\nfont-ttf-dejavu-sans-mono 2.37                 hab24e00_0    conda-forge\nfont-ttf-inconsolata      3.000                h77eed37_0    conda-forge\nfont-ttf-source-code-pro  2.038                h77eed37_0    conda-forge\nfont-ttf-ubuntu           0.83                 hab24e00_0    conda-forge\nfontconfig                2.14.1               hc2a2eb6_0    conda-forge\nfonts-conda-ecosystem     1                             0    conda-forge\nfonts-conda-forge         1                             0    conda-forge\nfonttools                 4.38.0           py37h540881e_0    conda-forge\nfreetype                  2.12.1               hca18f0e_1    conda-forge\nfribidi                   1.0.10               h516909a_0    conda-forge\nfsspec                    2022.11.0          pyhd8ed1ab_0    conda-forge\ngcc_impl_linux-64         11.2.0              h82a94d6_16    conda-forge\ngcc_linux-64              11.2.0              h39a9532_10    conda-forge\ngettext                   0.21.1               h27087fc_0    conda-forge\ngfortran_impl_linux-64    11.2.0              h7a446d4_16    conda-forge\ngfortran_linux-64         11.2.0              h777b47f_10    conda-forge\nglib                      2.74.1               h6239696_0    conda-forge\nglib-tools                2.74.1               h6239696_0    conda-forge\ngraphite2                 1.3.14               h295c915_1\ngst-plugins-base          1.14.0               h8213a91_2\ngstreamer                 1.14.0               h28cd5cc_2\ngxx_impl_linux-64         11.2.0              h82a94d6_16    conda-forge\ngxx_linux-64              11.2.0              hacbe6df_10    conda-forge\nh5py                      3.7.0           nompi_py37hf1ce037_101    conda-forge\nharfbuzz                  4.3.0                hd55b92a_0\nhdf5                      1.12.2          nompi_h2386368_101    conda-forge\nheapdict                  1.0.1                      py_0    conda-forge\nhicstuff                  3.1.5              pyhdfd78af_1    bioconda\nhtslib                    1.17                 h6bc39ce_0    bioconda\nicu                       58.2              hf484d3e_1000    conda-forge\nidna                      3.4                pyhd8ed1ab_0    conda-forge\nimagesize                 1.4.1              pyhd8ed1ab_0    conda-forge\nimportlib-metadata        4.11.4           py37h89c1867_0    conda-forge\njava-jdk                  8.0.112                       1    bioconda\njinja2                    3.1.2              pyhd8ed1ab_1    conda-forge\njoblib                    1.2.0              pyhd8ed1ab_0    conda-forge\njpeg                      9e                   h166bdaf_2    conda-forge\nk8                        0.2.5                hd03093a_2    bioconda\nkernel-headers_linux-64   2.6.32              he073ed8_15    conda-forge\nkeyutils                  1.6.1                h166bdaf_0    conda-forge\nkiwisolver                1.4.4            py37h7cecad7_0    conda-forge\nkrb5                      1.20.1               hf9c8cef_0    conda-forge\nlcms2                     2.12                 hddcbb42_0    conda-forge\nld_impl_linux-64          2.36.1               hea4e1c9_2    conda-forge\nlibaec                    1.0.6                h9c3ff4c_0    conda-forge\nlibblas                   3.9.0           16_linux64_openblas    conda-forge\nlibbrotlicommon           1.0.9                h166bdaf_8    conda-forge\nlibbrotlidec              1.0.9                h166bdaf_8    conda-forge\nlibbrotlienc              1.0.9                h166bdaf_8    conda-forge\nlibcblas                  3.9.0           16_linux64_openblas    conda-forge\nlibcurl                   7.87.0               h6312ad2_0    conda-forge\nlibdeflate                1.13                 h166bdaf_0    conda-forge\nlibedit                   3.1.20191231         he28a2e2_2    conda-forge\nlibev                     4.33                 h516909a_1    conda-forge\nlibffi                    3.4.2                h7f98852_5    conda-forge\nlibgcc                    7.2.0                h69d50b8_2    conda-forge\nlibgcc-devel_linux-64     11.2.0              h0952999_16    conda-forge\nlibgcc-ng                 12.2.0              h65d4601_19    conda-forge\nlibgfortran-ng            12.2.0              h69a702a_19    conda-forge\nlibgfortran5              12.2.0              h337968e_19    conda-forge\nlibglib                   2.74.1               h7a41b64_0    conda-forge\nlibgomp                   12.2.0              h65d4601_19    conda-forge\nlibhwloc                  2.8.0                h32351e8_1    conda-forge\nlibiconv                  1.17                 h166bdaf_0    conda-forge\nliblapack                 3.9.0           16_linux64_openblas    conda-forge\nlibnghttp2                1.51.0               hdcd2b5c_0    conda-forge\nlibnsl                    2.0.0                h7f98852_0    conda-forge\nlibopenblas               0.3.21          pthreads_h78a6416_3    conda-forge\nlibpng                    1.6.39               h753d276_0    conda-forge\nlibsanitizer              11.2.0              he4da1e4_16    conda-forge\nlibsqlite                 3.40.0               h753d276_0    conda-forge\nlibssh2                   1.10.0               haa6b8db_3    conda-forge\nlibstdcxx-devel_linux-64  11.2.0              h0952999_16    conda-forge\nlibstdcxx-ng              12.2.0              h46fd767_19    conda-forge\nlibtiff                   4.2.0                hf544144_3    conda-forge\nlibuuid                   2.32.1            h14c3975_1000    conda-forge\nlibwebp-base              1.2.4                h166bdaf_0    conda-forge\nlibxcb                    1.15                 h7f8727e_0\nlibxml2                   2.9.14               h74e7548_0\nlibzlib                   1.2.13               h166bdaf_4    conda-forge\nlocket                    1.0.0              pyhd8ed1ab_0    conda-forge\nlz4-c                     1.9.4                hcb278e6_0    conda-forge\nmacs2                     2.2.7.1          py37h8902056_5    bioconda\nmake                      4.3                  hd18ef5c_1    conda-forge\nmarkupsafe                2.1.1            py37h540881e_1    conda-forge\nmatplotlib                3.5.3            py37h89c1867_2    conda-forge\nmatplotlib-base           3.5.3            py37hf395dca_2    conda-forge\nmawk                      1.3.4                hec16e2b_5    bioconda\nminimap2                  2.24                 h7132678_1    bioconda\nmsgpack-python            1.0.4            py37h7cecad7_0    conda-forge\nmultiprocess              0.70.14          py37h540881e_0    conda-forge\nmunkres                   1.0.7                      py_1    bioconda\nmysql-connector-c         6.1.11            h6eb9d5d_1007    conda-forge\nncurses                   6.3                  h27087fc_1    conda-forge\nnumpy                     1.21.6           py37h976b520_0    conda-forge\nnumpydoc                  1.5.0              pyhd8ed1ab_0    conda-forge\nolefile                   0.46               pyh9f0ad1d_1    conda-forge\nopenblas                  0.3.21          pthreads_h320a7e8_3    conda-forge\nopenjdk                   8.0.112          zulu8.19.0.1_3    conda-forge\nopenjpeg                  2.4.0                hb52868f_1    conda-forge\nopenssl                   1.1.1u               hd590300_0    conda-forge\npackaging                 22.0               pyhd8ed1ab_0    conda-forge\npairix                    0.3.7            py37ha26db04_4    bioconda\npairtools                 1.0.2            py37h9f12aac_0    bioconda\npandas                    1.3.5            py37he8f5f7f_0    conda-forge\npango                     1.50.7               hbd2fdc8_0    conda-forge\npartd                     1.3.0              pyhd8ed1ab_0    conda-forge\npbgzip                    2016.08.04           h67092d7_3    bioconda\npcre2                     10.37                hc3806b6_1    conda-forge\nperl                      5.32.1          2_h7f98852_perl5    conda-forge\npillow                    8.2.0            py37h4600e1f_1    conda-forge\npip                       22.3.1             pyhd8ed1ab_0    conda-forge\npixman                    0.38.0            h516909a_1003    conda-forge\nplotly                    5.11.0             pyhd8ed1ab_1    conda-forge\npsutil                    5.9.3            py37h540881e_0    conda-forge\npy2bit                    0.3.0            py37h8902056_6    bioconda\npybigwig                  0.3.18           py37hdc12a6d_2    bioconda\npycparser                 2.21               pyhd8ed1ab_0    conda-forge\npyfaidx                   0.7.1              pyh5e36f6f_0    bioconda\npyfastx                   0.8.4            py37ha26db04_1    bioconda\npygments                  2.13.0             pyhd8ed1ab_0    conda-forge\npyopenssl                 22.1.0             pyhd8ed1ab_0    conda-forge\npyparsing                 3.0.9              pyhd8ed1ab_0    conda-forge\npyqt                      5.6.0           py37h13b7fb3_1008    conda-forge\npysam                     0.20.0           py37hee149a5_0    bioconda\npysocks                   1.7.1            py37h89c1867_5    conda-forge\npython                    3.7.12          hb7a2778_100_cpython    conda-forge\npython-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge\npython_abi                3.7                     3_cp37m    conda-forge\npytz                      2022.7             pyhd8ed1ab_0    conda-forge\npyvcf3                    1.0.3              pyhdfd78af_0    bioconda\npyyaml                    6.0              py37h540881e_4    conda-forge\nqt                        5.6.3                h8bf5577_3\nr-base                    4.2.0                h1ae530e_0\nreadline                  8.1.2                h0f457ee_0    conda-forge\nrequests                  2.28.1             pyhd8ed1ab_1    conda-forge\nsamtools                  1.17                 h00cdaf9_0    bioconda\nscikit-learn              1.0.2            py37hf9e9bfc_0    conda-forge\nscipy                     1.7.3            py37hf2a6cf1_0    conda-forge\nsetuptools                59.8.0           py37h89c1867_1    conda-forge\nsimplejson                3.17.6           py37h540881e_1    conda-forge\nsip                       4.18.1          py37hf484d3e_1000    conda-forge\nsix                       1.16.0             pyh6c4a22f_0    conda-forge\nsnowballstemmer           2.2.0              pyhd8ed1ab_0    conda-forge\nsortedcontainers          2.4.0              pyhd8ed1ab_0    conda-forge\nsphinx                    5.3.0              pyhd8ed1ab_0    conda-forge\nsphinxcontrib-applehelp   1.0.2                      py_0    conda-forge\nsphinxcontrib-devhelp     1.0.2                      py_0    conda-forge\nsphinxcontrib-htmlhelp    2.0.0              pyhd8ed1ab_0    conda-forge\nsphinxcontrib-jsmath      1.0.1                      py_0    conda-forge\nsphinxcontrib-qthelp      1.0.3                      py_0    conda-forge\nsphinxcontrib-serializinghtml 1.1.5              pyhd8ed1ab_2    conda-forge\nsqlite                    3.40.0               h4ff8645_0    conda-forge\nstar                      2.7.10b              h6b7c446_1    bioconda\nsysroot_linux-64          2.12                he073ed8_15    conda-forge\ntbb                       2021.7.0             h924138e_1    conda-forge\ntblib                     1.7.0              pyhd8ed1ab_0    conda-forge\ntenacity                  8.1.0              pyhd8ed1ab_0    conda-forge\nthreadpoolctl             3.1.0              pyh8a188c0_0    conda-forge\ntk                        8.6.12               h27826a3_0    conda-forge\ntktable                   2.10                 hb7b940f_3    conda-forge\ntoolz                     0.12.0             pyhd8ed1ab_0    conda-forge\ntornado                   6.2              py37h540881e_0    conda-forge\ntree                      2.0.0                h7f98852_0    conda-forge\ntyping-extensions         4.4.0                hd8ed1ab_0    conda-forge\ntyping_extensions         4.4.0              pyha770c72_0    conda-forge\nucsc-bedgraphtobigwig     357                           0    bioconda\nucsc-bigwigtowig          377                  ha8a8165_3    bioconda\nunicodedata2              14.0.0           py37h540881e_1    conda-forge\nurllib3                   1.26.13            pyhd8ed1ab_0    conda-forge\nwheel                     0.38.4             pyhd8ed1ab_0    conda-forge\nxorg-kbproto              1.0.7             h14c3975_1002    conda-forge\nxorg-libice               1.0.10               h516909a_0    conda-forge\nxorg-libsm                1.2.3             hd9c2040_1000    conda-forge\nxorg-libx11               1.7.2                h7f98852_0    conda-forge\nxorg-libxext              1.3.4                h7f98852_1    conda-forge\nxorg-libxrender           0.9.10            h7f98852_1003    conda-forge\nxorg-renderproto          0.11.1            h14c3975_1002    conda-forge\nxorg-xextproto            7.3.0             h14c3975_1002    conda-forge\nxorg-xproto               7.0.31            h14c3975_1007    conda-forge\nxz                        5.2.6                h166bdaf_0    conda-forge\nyaml                      0.2.5                h7f98852_2    conda-forge\nzict                      2.2.0              pyhd8ed1ab_0    conda-forge\nzipp                      3.11.0             pyhd8ed1ab_0    conda-forge\nzlib                      1.2.13               h166bdaf_4    conda-forge\nzstd                      1.5.2                h6239696_4    conda-forge\n\nThe installation of all these standard softwares takes less than 15 minutes on a standard laptop.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System requirements</span>"
    ]
  },
  {
    "objectID": "01.Processing.html",
    "href": "01.Processing.html",
    "title": "2  Processing of high-throughput sequencing data",
    "section": "",
    "text": "2.1 Datasets\nThe following datasets were processed:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Processing of high-throughput sequencing data</span>"
    ]
  },
  {
    "objectID": "01.Processing.html#datasets",
    "href": "01.Processing.html#datasets",
    "title": "2  Processing of high-throughput sequencing data",
    "section": "",
    "text": "WT S288c: Genome reference: ~/genomes/S288c/S288c.fa & ~/genomes/S288c/S288c.gtf (Ensembl v. 104, R64-1-1):\n\nCal. ChIP Scc1: CH224 (inp. CH225) + CH226 (inp. CH227)\n\nW303 + Mmmyco: Genome reference: ~/genomes/W303_Mmmyco/W303_Mmmyco.fa & ~/genomes/W303_Mmmyco/W303_Mmmyco.gff3\n\nHiC G1: CH02 ; HiC Wapl: CH198\nH3: CH406 (inp. CH408) + CH407 (inp. CH409)\nH2A: CH404 (inp. CH408) + CH405 (inp. CH409)\nChIP PolII: CH51 (inp. CH54) & CH102 (inp. CH105)\nChIP Sir3: CH380 (inp. CH385)\nCal. ChIP Scc1: CH35 (inp. CH38)\nRNA: AB4 + AB5 + AB6\nMNase:\n\nLM149: MNase for 5 min\nLM150: MNase for 10 min\nLM152: MNase for 20 min\nLM153: MNase for 40 min\nLM154: MNase for 60 min\n\n\nS288c + Mmpneumo: Genome reference: ~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa & ~/genomes/S288c_Mpneumo/S288c_Mpneumo.gtf\n\nHiC G1: CH210 ; HiC Wapl: CH197\nH3: CH157 (inp. CH159) + CH367 (inp. CH371)\nH2A: CH366 (inp. CH370)\nChIP PolII: CH154 (inp. CH155)\nCal. ChIP Scc1: CH219 (inp. CH220)\nRNA: CH_RNA_pneumo_1 + CH_RNA_pneumo_2 + CH_RNA_pneumo_3\nMNase:\n\nLM162: MNase for 5 min\nLM163: MNase for 10 min\nLM165: MNase for 20 min\nLM166: MNase for 40 min\nLM167: MNase for 60 min\n\n\nW303 + fused Mmmyco: Genome reference: ~/genomes/W303_chrXVI-Mmmyco/W303_chrXVI-Mmmyco.fa & ~/genomes/W303_chrXVI-Mmmyco/W303_chrXVI-Mmmyco.gtf\n\nHiC G2: LM34 ; HiC G1: LM33\nCal. ChIP Scc1: LM46 (inp. LM45)\n\nW303 + fused Mmmyco with flipped locus: Genome reference: ~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa\n\nHiC G2: LM58 ; HiC G1: LM62\nCal. ChIP Scc1: LM65 (inp. LM64)\nChIP PolII: LM80 (inp. LM81)\n\nW303 + fused Mmmyco with double flipped locus: Genome reference: ~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa\n\nHiC G2: LM59 ; HiC G1: LM63\nCal. ChIP Scc1: LM67 (inp. LM66)\nChIP PolII: LM82 (inp. LM83)\n\nW303 + fused Mmmyco with translocated locus on chr.13\n\nHiC G2: LM119 ; HiC G1: LM122",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Processing of high-throughput sequencing data</span>"
    ]
  },
  {
    "objectID": "01.Processing.html#genome-regferences",
    "href": "01.Processing.html#genome-regferences",
    "title": "2  Processing of high-throughput sequencing data",
    "section": "2.2 Genome regferences",
    "text": "2.2 Genome regferences\nGenome references (fasta files and gene models) are provided as a Zenodo archive.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Processing of high-throughput sequencing data</span>"
    ]
  },
  {
    "objectID": "01.Processing.html#processing",
    "href": "01.Processing.html#processing",
    "title": "2  Processing of high-throughput sequencing data",
    "section": "2.3 Processing",
    "text": "2.3 Processing\nFiles were processed with tinyMapper v0.11.6-0.12.1.\n\nBASEDIR=/data/SynChrs_MNase-RNAseq-ChIPseq-HiC/data/\n\n## WT\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH224 --input \"${BASEDIR}\"/ChIP/CH225 --genome ~/genomes/S288c/S288c --output data/WT/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH226 --input \"${BASEDIR}\"/ChIP/CH227 --genome ~/genomes/S288c/S288c --output data/WT/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\n\n## W303 + Mmmyco\ntinyMapper.sh --mode HiC --sample \"${BASEDIR}\"/HiC/CH02 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/HiC --threads 16\ntinyMapper.sh --mode HiC --sample \"${BASEDIR}\"/HiC/CH198 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/HiC --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH51 --input \"${BASEDIR}\"/ChIP/CH54 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH102 --input \"${BASEDIR}\"/ChIP/CH105 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH35 --input \"${BASEDIR}\"/ChIP/CH38 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH404 --input \"${BASEDIR}\"/ChIP/CH408 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH405 --input \"${BASEDIR}\"/ChIP/CH409 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH406 --input \"${BASEDIR}\"/ChIP/CH408 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH407 --input \"${BASEDIR}\"/ChIP/CH409 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH380 --input \"${BASEDIR}\"/ChIP/CH385 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/ChIP --threads 16\ntinyMapper.sh --mode RNA --sample \"${BASEDIR}\"/RNA/AB4 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/RNA --threads 16\ntinyMapper.sh --mode RNA --sample \"${BASEDIR}\"/RNA/AB5 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/RNA --threads 16\ntinyMapper.sh --mode RNA --sample \"${BASEDIR}\"/RNA/AB6 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --output data/W303_Mmmyco/RNA --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM149 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --blacklist ~/genomes/W303_Mmmyco/W303_Mmmyco.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM150 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --blacklist ~/genomes/W303_Mmmyco/W303_Mmmyco.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM152 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --blacklist ~/genomes/W303_Mmmyco/W303_Mmmyco.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM153 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --blacklist ~/genomes/W303_Mmmyco/W303_Mmmyco.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM154 --genome ~/genomes/W303_Mmmyco/W303_Mmmyco --blacklist ~/genomes/W303_Mmmyco/W303_Mmmyco.blacklist.bed --output data/MNase --threads 16\n\n## S288c + Mmpneumo\ntinyMapper.sh --mode HiC --sample \"${BASEDIR}\"/HiC/C210 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/HiC --threads 16\ntinyMapper.sh --mode HiC --sample \"${BASEDIR}\"/HiC/CH197 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/HiC --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH154 --input \"${BASEDIR}\"/ChIP/CH155 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH219 --input \"${BASEDIR}\"/ChIP/CH220 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH157 --input \"${BASEDIR}\"/ChIP/CH159 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH367 --input \"${BASEDIR}\"/ChIP/CH371 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/ChIP --threads 16\ntinyMapper.sh --mode ChIP --sample \"${BASEDIR}\"/ChIP/CH366 --input \"${BASEDIR}\"/ChIP/CH370 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/ChIP --threads 16\ntinyMapper.sh --mode RNA --sample \"${BASEDIR}\"/RNA/CHR_Pneumo1_nvq --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/RNA --threads 16\ntinyMapper.sh --mode RNA --sample \"${BASEDIR}\"/RNA/CHR_Pneumo2_nvq --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/RNA --threads 16\ntinyMapper.sh --mode RNA --sample \"${BASEDIR}\"/RNA/CHR_Pneumo3_nvq --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --output data/S288c_Mpneumo/RNA --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM162 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --blacklist ~/genomes/S288c_Mpneumo/S288c_Mpneumo.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM163 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --blacklist ~/genomes/S288c_Mpneumo/S288c_Mpneumo.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM165 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --blacklist ~/genomes/S288c_Mpneumo/S288c_Mpneumo.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM166 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --blacklist ~/genomes/S288c_Mpneumo/S288c_Mpneumo.blacklist.bed --output data/MNase --threads 16\ntinyMapper.sh --mode MNase --sample data/reads/trimmed/LM167 --genome ~/genomes/S288c_Mpneumo/S288c_Mpneumo --blacklist ~/genomes/S288c_Mpneumo/S288c_Mpneumo.blacklist.bed --output data/MNase --threads 16\n\n## W303 + fused Mmmyco\ntinyMapper.sh --mode HiC --sample data/fastq/LM34 --genome ~/genomes/W303_chrXVI-Mmmyco/W303_chrXVI-Mmmyco --output data/W303_chrXVI-Mmmyco/HiC --threads 16\ntinyMapper.sh --mode HiC --sample data/fastq/LM33 --genome ~/genomes/W303_chrXVI-Mmmyco/W303_chrXVI-Mmmyco --output data/W303_chrXVI-Mmmyco/HiC --threads 16\ntinyMapper.sh --mode ChIP --sample data/fastq/LM46 --input data/fastq/LM45 --genome ~/genomes/W303_chrXVI-Mmmyco/W303_chrXVI-Mmmyco --output data/W303_chrXVI-Mmmyco/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\n\n## W303 + fused Mmmyco with flipped locus\ntinyMapper.sh --mode HiC --sample data/fastq/LM58 --genome ~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb --output data/W303_chrXVI-Mmmyco_inv870kb/HiC --threads 16\ntinyMapper.sh --mode HiC --sample data/fastq/LM62 --genome ~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb --output data/W303_chrXVI-Mmmyco_inv870kb/HiC --threads 16\ntinyMapper.sh --mode ChIP --sample data/fastq/LM65 --input data/fastq/LM64 --genome ~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb --output data/W303_chrXVI-Mmmyco_inv870kb/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\ntinyMapper.sh --mode ChIP --sample data/fastq/LM80 --input data/fastq/LM81 --genome ~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb --output data/W303_chrXVI-Mmmyco_inv870kb/ChIP --threads 16\n\n## W303 + fused Mmmyco with double flipped locus\ntinyMapper.sh --mode HiC --sample data/fastq/LM59 --genome ~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv --output data/W303_chrXVI-Mmmyco_dbl-inv/HiC --threads 16\ntinyMapper.sh --mode HiC --sample data/fastq/LM63 --genome ~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv --output data/W303_chrXVI-Mmmyco_dbl-inv/HiC --threads 16\ntinyMapper.sh --mode ChIP --sample data/fastq/LM67 --input data/fastq/LM66 --genome ~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv --output data/W303_chrXVI-Mmmyco_dbl-inv/ChIP --calibration ~/genomes/CBS138/CBS138 --threads 16\ntinyMapper.sh --mode ChIP --sample data/fastq/LM82 --input data/fastq/LM83 --genome ~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv --output data/W303_chrXVI-Mmmyco_dbl-inv/ChIP --threads 16\n\n## W303 + fused Mmmyco with translocated locus on chr13\ntinyMapper.sh --mode HiC --sample data/LM119 --genome ~/genomes/W303_chrXVI-Mmmyco-XIII/W303_chrXVI-Mmmyco-XIII_flipped --output data/LM119 --threads 16\ntinyMapper.sh --mode HiC --sample data/LM122 --genome ~/genomes/W303_chrXVI-Mmmyco-XIII/W303_chrXVI-Mmmyco-XIII_flipped --output data/LM122 --threads 16",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Processing of high-throughput sequencing data</span>"
    ]
  },
  {
    "objectID": "01.Processing.html#mnase-nucleosome-tracks",
    "href": "01.Processing.html#mnase-nucleosome-tracks",
    "title": "2  Processing of high-throughput sequencing data",
    "section": "2.4 MNase nucleosome tracks",
    "text": "2.4 MNase nucleosome tracks\n\n2.4.1 Import fragments\n\nlibrary(tidyverse)\nlibrary(rtracklayer)\nlibrary(Rsamtools)\nlibrary(plyranges)\n\n## -- Import and filter all fragments\nbams &lt;- BamFileList(c(\n    myco_t05 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM149/LM149^mapped_W303_Mmmyco^filtered^K0DVZV.bam'), \n    myco_t10 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM150/LM150^mapped_W303_Mmmyco^filtered^HSD10W.bam'), \n    myco_t20 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM152/LM152^mapped_W303_Mmmyco^filtered^LYVCPG.bam'), \n    myco_t40 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM153/LM153^mapped_W303_Mmmyco^filtered^XUIZ7U.bam'), \n    myco_t60 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM154/LM154^mapped_W303_Mmmyco^filtered^N6MQ7Y.bam'),\n\n    pneumo_t05 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM162/LM162^mapped_S288c_Mpneumo^filtered^PHLPTK.bam'),\n    pneumo_t10 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM163/LM163^mapped_S288c_Mpneumo^filtered^71OU62.bam'),\n    pneumo_t20 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM165/LM165^mapped_S288c_Mpneumo^filtered^7BDFMM.bam'),\n    pneumo_t40 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM166/LM166^mapped_S288c_Mpneumo^filtered^UEVKWW.bam'),\n    pneumo_t60 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM167/LM167^mapped_S288c_Mpneumo^filtered^LXMW7J.bam')\n), asMates = FALSE)\nparam &lt;- ScanBamParam(\n    flag=scanBamFlag(\n        isPaired = TRUE,\n        isProperPair = TRUE,\n        isDuplicate = FALSE,\n        isSecondaryAlignment = FALSE\n    ), \n    mapqFilter = 1, \n    what = c(\"mapq\", \"isize\")\n)\nfrags &lt;- imap(bams, ~ {\n    print(.y)\n    x &lt;- GenomicAlignments::readGAlignmentPairs(.x, param = param) |&gt; \n        as('GRanges') |&gt; \n        filter_by_non_overlaps(GRanges(c('chrXII:481905-499631', 'XII:458999-461000')))\n    return(x)\n})\n\n\n\n2.4.2 Generating nucleosome tracks\n\n## -- Myco \nnuc_frags_myco &lt;- frags[1:5] |&gt; GRangesList() |&gt; unlist()\nnuc_frags_myco &lt;- filter(nuc_frags_myco, width &lt; 165, width &gt;= 130)\nexport(nuc_frags_myco, 'nuc_frags_Myco-time-course.bed')\nnuc_cov_myco0 &lt;- resize(nuc_frags_myco, width = 40, fix = 'center')\nnuc_cov_myco0 &lt;- coverage(nuc_cov_myco0)\nnuc_cov_myco &lt;- nuc_cov_myco0 / length(nuc_frags_myco) * 1e6\nexport(nuc_cov_myco, 'nuc_cov_Myco-time-course.bw')\n\n## -- Pneumo \nnuc_frags_pneumo &lt;- frags[6:10] |&gt; GRangesList() |&gt; unlist()\nnuc_frags_pneumo &lt;- filter(nuc_frags_pneumo, width &lt; 165, width &gt;= 130)\nexport(nuc_frags_pneumo, 'nuc_frags_Pneumo-time-course.bed')\nnuc_cov_pneumo0 &lt;- resize(nuc_frags_pneumo, width = 40, fix = 'center')\nnuc_cov_pneumo0 &lt;- coverage(nuc_cov_pneumo0)\nnuc_cov_pneumo &lt;- nuc_cov_pneumo0 / length(nuc_frags_pneumo) * 1e6\nexport(nuc_cov_pneumo, 'nuc_cov_Pneumo-time-course.bw')",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Processing of high-throughput sequencing data</span>"
    ]
  },
  {
    "objectID": "02.Analysis-Figure-01.html",
    "href": "02.Analysis-Figure-01.html",
    "title": "3  Code for generating Figure 1 & Extended Data figures",
    "section": "",
    "text": "3.1 Importing libraries\nlibrary(purrr)\nlibrary(GenomicRanges)\nlibrary(GenomeInfoDb)\nlibrary(Biostrings)\nlibrary(plyranges)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Code for generating Figure 1 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "02.Analysis-Figure-01.html#figure-1",
    "href": "02.Analysis-Figure-01.html#figure-1",
    "title": "3  Code for generating Figure 1 & Extended Data figures",
    "section": "3.2 Figure 1",
    "text": "3.2 Figure 1\n\n3.2.1 Panel 1a\n\nseqs &lt;- list(\n    Mmmyco = '~/genomes/W303_Mmmyco/W303_Mmmyco.fa',\n    Mpneumo = '~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa'\n)|&gt; map(Biostrings::readDNAStringSet)\nbins &lt;- imap(seqs, ~ {\n    gr &lt;- seqinfo(.x)\n    tiles &lt;- tileGenome(gr, tilewidth = 1000, cut.last.tile.in.chrom = TRUE)\n    tiles$gc &lt;- Biostrings::letterFrequency(.x[tiles], 'GC', as.prob = TRUE)\n    as.data.frame(tiles) |&gt; as_tibble() |&gt; mutate(genome = .y)\n}) |&gt; list_rbind() |&gt; filter(G.C &gt; 0)\np1 &lt;- ggplot(bins |&gt; filter(seqnames %in% c('chrXVI', 'Mmmyco', 'Mpneumo')), aes(x = G.C, fill = seqnames)) + \n    geom_density() + \n    theme_bw() + \n    labs(x = \"GC%\", y = \"# of 1kb bins\") \n\n\n\n3.2.2 Panel 1b\n\n## --- Import tracks\nseq_pneumo &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\ngenome_pneumo &lt;- GRanges(paste0(names(seq_pneumo) |&gt; str_replace(' .*', ''), ':1-', lengths(seq_pneumo)))\nseqlengths(genome_pneumo) &lt;- lengths(seq_pneumo)\ngenes_pneumo &lt;- import('~/genomes/S288c_Mpneumo/S288c_Mpneumo.gtf') |&gt; \n    filter(type == 'gene') |&gt; \n    filter(!seqnames %in% c('Mmmyco', 'Mpneumo'))\nmnase_pneumo &lt;- import('~/Projects/20230517_Lea_MNase-timecourse/nuc_cov_Pneumo-time-course.bw', as = \"Rle\")\nh3_pneumo &lt;- {{import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH157/CH157^mapped_S288c_Mpneumo^MGHI86.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH159/CH159^mapped_S288c_Mpneumo^MGHI86.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH367/CH367^mapped_S288c_Mpneumo^PCPOLZ.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH371/CH371^mapped_S288c_Mpneumo^PCPOLZ.CPM.bw', as = 'Rle')}} / \n    2\nh3_pneumo &lt;- log2(h3_pneumo)\nh2a_pneumo &lt;- import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH366/CH366^mapped_S288c_Mpneumo^S0ZHT4.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH370/CH370^mapped_S288c_Mpneumo^S0ZHT4.CPM.bw', as = 'Rle')\nh2a_pneumo &lt;- log2(h2a_pneumo)\n\n## --- Create plots\ngr_XVI &lt;- GRanges(\"XVI:250486-260630\")\ngr_bact &lt;- GRanges(\"Mpneumo:710000-720000\")\n\np_pneumo &lt;- cowplot::plot_grid(\n    # XVI\n    tibble(\n        coord = seq(start(gr_XVI), end(gr_XVI), 1), \n        score = as.vector(mnase_pneumo[gr_XVI][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#575757') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('mnase @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 10)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_XVI), end(gr_XVI), 1), \n        score = as.vector(h2a_pneumo[gr_XVI][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#0ba7af') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h2a @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1.5)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_XVI), end(gr_XVI), 1), \n        score = as.vector(h3_pneumo[gr_XVI][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2587a4') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h3 @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1.5)) + \n        labs(x = NULL), \n\n    # Pneumo\n    tibble(\n        coord = seq(start(gr_bact), end(gr_bact), 1), \n        score = as.vector(mnase_pneumo[gr_bact][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#575757') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('mnase @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 10)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_bact), end(gr_bact), 1), \n        score = as.vector(h2a_pneumo[gr_bact][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#0ba7af') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h2a @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1.5)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_bact), end(gr_bact), 1), \n        score = as.vector(h3_pneumo[gr_bact][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2587a4') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h3 @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1.5)) + \n        labs(x = NULL), \n\n    ncol = 2, byrow = FALSE\n)\n\n\n\n3.2.3 Panel 1c\n\n## --- Import tracks\nseq_myco &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\ngenome_myco &lt;- GRanges(paste0(names(seq_myco), ':1-', lengths(seq_myco)))\nseqlengths(genome_myco) &lt;- lengths(seq_myco)\ngenes_myco &lt;- import('~/genomes/W303_Mmmyco/W303_Mmmyco.gff3') |&gt; \n    filter(type == 'gene') |&gt; \n    filter(!seqnames %in% c('Mmmyco', 'Mpneumo'))\nmnase_myco &lt;- import('~/Projects/20230517_Lea_MNase-timecourse/nuc_cov_Myco-time-course.bw', as = \"Rle\")\nh3_myco &lt;- {{import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH406/CH406^mapped_W303_Mmmyco^KDTEGO.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH408/CH408^mapped_W303_Mmmyco^KDTEGO.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH407/CH407^mapped_W303_Mmmyco^8S1VTX.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH409/CH409^mapped_W303_Mmmyco^8S1VTX.CPM.bw', as = 'Rle')}} / \n    2\nh3_myco &lt;- log2(h3_myco)\nh2a_myco &lt;- {{import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH404/CH404^mapped_W303_Mmmyco^XOL0HV.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH408/CH408^mapped_W303_Mmmyco^XOL0HV.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH405/CH405^mapped_W303_Mmmyco^CXNJIS.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH409/CH409^mapped_W303_Mmmyco^CXNJIS.CPM.bw', as = 'Rle')}} / \n    2\nh2a_myco &lt;- log2(h2a_myco)\n\n## --- Create plots\ngr_XVI &lt;- GRanges(\"chrXVI:250486-260630\")\ngr_bact &lt;- GRanges(\"Mmmyco:988904-998877\")\n\np_myco &lt;- cowplot::plot_grid(\n    # XVI\n    tibble(\n        coord = seq(start(gr_XVI), end(gr_XVI), 1), \n        score = as.vector(mnase_myco[gr_XVI][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#575757') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('mnase @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 10)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_XVI), end(gr_XVI), 1), \n        score = as.vector(h2a_myco[gr_XVI][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#0ba7af') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h2a @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_XVI), end(gr_XVI), 1), \n        score = as.vector(h3_myco[gr_XVI][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2587a4') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h3 @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1)) + \n        labs(x = NULL), \n\n    # Myco\n    tibble(\n        coord = seq(start(gr_bact), end(gr_bact), 1), \n        score = as.vector(mnase_myco[gr_bact][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#575757') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('mnase @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 10)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_bact), end(gr_bact), 1), \n        score = as.vector(h2a_myco[gr_bact][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#0ba7af') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h2a @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1)) + \n        labs(x = NULL), \n    tibble(\n        coord = seq(start(gr_bact), end(gr_bact), 1), \n        score = as.vector(h3_myco[gr_bact][[1]])\n    ) |&gt;\n        mutate(score = slider::slide_dbl(score, .before = 10, .after = 10, mean)) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2587a4') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('h3 @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-0.3, 1)) + \n        labs(x = NULL), \n\n    ncol = 2, byrow = FALSE\n)\n\n\n\n3.2.4 Panel 1d & 1e\n\n3.2.4.1 Mmyco\n\nseq &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\ngenome &lt;- GRanges(paste0(names(seq), ':1-', lengths(seq)))\nseqlengths(genome) &lt;- lengths(seq)\nannots &lt;- import('~/genomes/W303_Mmmyco/W303_Mmmyco.gff3')\nseqinfo(annots) &lt;- seqinfo(genome)\ncols &lt;- rev(RColorBrewer::brewer.pal(n = 9, name = 'YlOrRd'))\nnuc_cov_myco &lt;- import('nuc_cov_Myco-time-course.bw', as = 'Rle')\ngbins_myco &lt;- slidingWindows(genome, width = 147, step = 50) |&gt; unlist()\nn_nucs &lt;- length(gbins_myco)\nn_nucs_post &lt;- n_nucs - 1\ni = 0\nwhile (n_nucs_post != n_nucs) {\n    print(i)\n    i = i + 1\n    n_nucs &lt;- length(gbins_myco)\n    gbins_myco &lt;- gbins_myco[gbins_myco %within% genome]\n    gbins_myco &lt;- unique(shift(gbins_myco, which.max(nuc_cov_myco[gbins_myco]) - 73))\n    n_nucs_post &lt;- length(gbins_myco)\n}\ngbins_myco$distance_to_next &lt;- {lead(start(gbins_myco)) - end(gbins_myco)}\ngbins_myco &lt;- gbins_myco[gbins_myco$distance_to_next &gt; -1e3 & !is.na(gbins_myco$distance_to_next) & gbins_myco$distance_to_next &lt; 1e3]\ngbins_myco$peak_signal &lt;- mean(nuc_cov_myco[resize(gbins_myco, fix = 'center', width = 10)], na.rm = TRUE)\ngbins_myco$flanking_signal_left &lt;- nuc_cov_myco[trim(flank_left(gbins_myco, 10))] |&gt; mean(na.rm = TRUE)\ngbins_myco$flanking_signal_right &lt;- nuc_cov_myco[trim(flank_right(gbins_myco, 10))] |&gt; mean(na.rm = TRUE)\ngbins_myco$flanking_signal &lt;- rowMeans(as.data.frame(mcols(gbins_myco)[, c(\"flanking_signal_left\", \"flanking_signal_right\")]))\ngbins_myco$nuc_score &lt;- gbins_myco$peak_signal / gbins_myco$flanking_signal\ngbins_myco$nuc_score[is.infinite(gbins_myco$nuc_score)] &lt;- NA\ngbins_myco$group &lt;- fct_rev(cut(gbins_myco$nuc_score, breaks = c(0, 5, 10, sort(gbins_myco$nuc_score, decreasing = TRUE)[6200], Inf)))\ngbins_myco$color &lt;- rev(c(\"#BEBEBE\", \"#9ad0f4\", \"#ffae00\", \"#8B0000\"))[gbins_myco$group]\ndf &lt;- as_tibble(gbins_myco) |&gt; \n    group_by(seqnames)\ndf |&gt; group_by(seqnames) |&gt; summarize(mean = getmode(distance_to_next))\np1 &lt;- ggplot(df, aes(x = distance_to_next, group = seqnames, col = {seqnames == 'Mmmyco'})) + \n    geom_density() + \n    xlim(c(0, 100)) + \n    geom_vline(xintercept = 15) + \n    labs(col = \"Bact. chr.\")\ndf &lt;- imap_dfr(nuc_cov_myco, ~ {\n    print(.y)\n    .acf &lt;- acf(as.vector(.x), lag.max = 1000, plot = FALSE) \n    tibble(seqnames = .y, lag = .acf$lag[, , 1], acf = .acf$acf[, , 1])\n})\np4 &lt;- ggplot(df, aes(x = lag, y = acf, group = seqnames, col = {seqnames == 'Mmmyco'})) + \n    geom_line() + \n    labs(col = \"Bact. chr.\") +\n    ylim(c(-0.28, 0.65)) + \n    xlim(c(0, 1000)) + \n    geom_vline(xintercept = 169 + (159 * 0:10), linetype = 'solid') + \n    geom_vline(xintercept = 169 + (176 * 0:10), linetype = 'dashed')\np &lt;- cowplot::plot_grid(p1, p4, nrow = 1)\n\n\n\n3.2.4.2 Mpneumo\n\nseq &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\ngenome &lt;- GRanges(paste0(names(seq) |&gt; str_replace(' .*', ''), ':1-', lengths(seq)))\nseqlengths(genome) &lt;- lengths(seq)\nannots &lt;- import('~/genomes/S288c_Mpneumo/S288c_Mpneumo.gtf')\nseqinfo(annots) &lt;- seqinfo(genome)\ncols &lt;- rev(RColorBrewer::brewer.pal(n = 9, name = 'YlOrRd'))\nnuc_cov_pneumo &lt;- import('nuc_cov_Pneumo-time-course.bw', as = 'Rle')\ngbins_pneumo &lt;- slidingWindows(genome, width = 147, step = 50) |&gt; unlist()\nn_nucs &lt;- length(gbins_pneumo)\nn_nucs_post &lt;- n_nucs - 1\ni = 0\nwhile (n_nucs_post != n_nucs) {\n    print(n_nucs - n_nucs_post)\n    i = i + 1\n    n_nucs &lt;- length(gbins_pneumo)\n    gbins_pneumo &lt;- gbins_pneumo[gbins_pneumo %within% genome]\n    gbins_pneumo &lt;- unique(shift(gbins_pneumo, which.max(nuc_cov_pneumo[gbins_pneumo]) - 73))\n    n_nucs_post &lt;- length(gbins_pneumo)\n}\ngbins_pneumo$distance_to_next &lt;- {lead(start(gbins_pneumo)) - end(gbins_pneumo)}\ngbins_pneumo &lt;- gbins_pneumo[gbins_pneumo$distance_to_next &gt; -1e3 & !is.na(gbins_pneumo$distance_to_next) & gbins_pneumo$distance_to_next &lt; 1e3]\ngbins_pneumo$peak_signal &lt;- mean(nuc_cov_pneumo[resize(gbins_pneumo, fix = 'center', width = 10)], na.rm = TRUE)\ngbins_pneumo$flanking_signal_left &lt;- nuc_cov_pneumo[trim(flank_left(gbins_pneumo, 10)) |&gt; mutate(start = ifelse( start &lt; 1, 1, start))] |&gt; mean(na.rm = TRUE)\ngbins_pneumo$flanking_signal_right &lt;- nuc_cov_pneumo[trim(flank_right(gbins_pneumo, 10))] |&gt; mean(na.rm = TRUE)\ngbins_pneumo$flanking_signal &lt;- rowMeans(as.data.frame(mcols(gbins_pneumo)[, c(\"flanking_signal_left\", \"flanking_signal_right\")]))\ngbins_pneumo$nuc_score &lt;- gbins_pneumo$peak_signal / gbins_pneumo$flanking_signal\ngbins_pneumo$nuc_score[is.infinite(gbins_pneumo$nuc_score)] &lt;- NA\ngbins_pneumo$group &lt;- fct_rev(cut(gbins_pneumo$nuc_score, breaks = c(0, 5, 10, sort(gbins_pneumo$nuc_score, decreasing = TRUE)[6200], Inf)))\ngbins_pneumo$color &lt;- rev(c(\"#BEBEBE\", \"#9ad0f4\", \"#ffae00\", \"#8B0000\"))[gbins_pneumo$group]\ndf &lt;- as_tibble(gbins_pneumo) |&gt; \n    group_by(seqnames)\ndf |&gt; group_by(seqnames) |&gt; summarize(mean = getmode(distance_to_next))\np1 &lt;- ggplot(df, aes(x = distance_to_next, group = seqnames, col = {seqnames == 'Mpneumo'})) + \n    geom_density() + \n    xlim(c(0, 100)) + \n    geom_vline(xintercept = 14, color = 'red') + \n    labs(col = \"Bact. chr.\")\ndf &lt;- imap_dfr(nuc_cov_pneumo, ~ {\n    .acf &lt;- acf(as.vector(.x), lag.max = 1000, plot = FALSE) \n    tibble(seqnames = .y, lag = .acf$lag[, , 1], acf = .acf$acf[, , 1])\n}) \np4 &lt;- ggplot(df, aes(x = lag, y = acf, group = seqnames, col = {seqnames == 'Mpneumo'})) + \n    geom_line() + \n    labs(col = \"Bact. chr.\")+\n    ylim(c(-0.28, 0.65)) + \n    xlim(c(0, 1000)) + \n    geom_vline(xintercept = 166 + (160 * 0:10), linetype = 'solid') \n    # geom_vline(xintercept = 172 * 1:10, linetype = 'dashed')\n\np &lt;- cowplot::plot_grid(p1, p4, nrow = 1)\n\n\n\n\n3.2.5 Panel 1f\n\n3.2.5.1 Mpneumo\n\n## --- Import tracks\nseq_pneumo &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\ngenome_pneumo &lt;- GRanges(paste0(names(seq_pneumo) |&gt; str_replace(' .*', ''), ':1-', lengths(seq_pneumo)))\nseqlengths(genome_pneumo) &lt;- lengths(seq_pneumo)\n\nscc1_pneumo &lt;- import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH219/CH219^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH220/CH220^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.CPM.bw', as = 'Rle')\n# scc1_pneumo &lt;- log2(scc1_pneumo)\npol2_pneumo &lt;- import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH154/CH154^mapped_S288c_Mpneumo^598366.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH155/CH155^mapped_S288c_Mpneumo^598366.CPM.bw', as = 'Rle')\n# pol2_pneumo &lt;- log2(pol2_pneumo)\nGC_pneumo &lt;- lengths(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')) %&gt;%   \n    purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa'))) %&gt;% \n    tileGenome(tilewidth = 1) %&gt;% \n    unlist() %&gt;% \n    mutate(seq = Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')[.]) %&gt;% \n    mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n    group_by(seqnames) %&gt;% \n    mutate(GC_ave = slider::slide_mean(GC.G.C, before = 100/2, after = 100/2)) %&gt;% \n    coverage(weight = 'GC_ave') %&gt;% \n    setNames(str_replace(names(.), ' .*', ''))\n\n## --- Create plots\n\nBINWIDTH &lt;- 200\nSTEP &lt;- 10\ngr_XVI &lt;- GRanges(\"XVI:85000-145000\")\nseqlevels(gr_XVI) &lt;- seqlevels(scc1_pneumo)\nseqinfo(gr_XVI) &lt;- seqinfo(scc1_pneumo)\ngr_bact &lt;- GRanges(\"Mpneumo:351000-411000\")\nseqlevels(gr_bact) &lt;- seqlevels(scc1_pneumo)\nseqinfo(gr_bact) &lt;- seqinfo(scc1_pneumo)\n\np_pneumo &lt;- cowplot::plot_grid(\n    # XVI\n    plyranges::slide_ranges(gr_XVI, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = scc1_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#EC2027') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('scc1 @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_XVI, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = pol2_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#34B55B') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('pol2 @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_XVI, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = GC_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line(linewidth = 0.5, col = '#5c5c5c') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0.10, 0.55)) + \n        labs(x = NULL), \n\n    # Pneumo\n    plyranges::slide_ranges(gr_bact, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = scc1_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#EC2027') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('scc1 @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_bact, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = pol2_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#34B55B') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('pol2 @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_bact, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = GC_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line(linewidth = 0.5, col = '#5c5c5c') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0.10, 0.55)) + \n        labs(x = NULL), \n\n    ncol = 2, byrow = FALSE\n)\n\n\n\n3.2.5.2 Mmyco\n\nseq_myco &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\ngenome_myco &lt;- GRanges(paste0(names(seq_myco), ':1-', lengths(seq_myco)))\nseqlengths(genome_myco) &lt;- lengths(seq_myco)\n\nscc1_myco &lt;- import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH35/CH35^unmapped_CBS138^mapped_W303_Mmmyco^DTAKMF.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH38/CH38^unmapped_CBS138^mapped_W303_Mmmyco^DTAKMF.CPM.bw', as = 'Rle')\npol2_myco &lt;- {{import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH51/CH51^mapped_W303_Mmmyco^Y9CC89.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH54/CH54^mapped_W303_Mmmyco^Y9CC89.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH102/CH102^mapped_W303_Mmmyco^2FVQO3.CPM.bw', as = 'Rle') / import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH105/CH105^mapped_W303_Mmmyco^2FVQO3.CPM.bw', as = 'Rle')}} / \n    2\nGC_myco &lt;- lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n    purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa'))) %&gt;% \n    tileGenome(tilewidth = 1) %&gt;% \n    unlist() %&gt;% \n    mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')[.]) %&gt;% \n    mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n    group_by(seqnames) %&gt;% \n    mutate(GC_ave = slider::slide_mean(GC.G.C, before = 100/2, after = 100/2)) %&gt;% \n    coverage(weight = 'GC_ave') %&gt;% \n    setNames(str_replace(names(.), ' .*', ''))\n\n## --- Create plots\n\nBINWIDTH &lt;- 200\nSTEP &lt;- 10\ngr_XVI &lt;- GRanges(\"chrXVI:85000-145000\")\nseqlevels(gr_XVI) &lt;- seqlevels(scc1_myco)\nseqinfo(gr_XVI) &lt;- seqinfo(scc1_myco)\ngr_bact &lt;- GRanges(\"Mmmyco:575000-635000\")\nseqlevels(gr_bact) &lt;- seqlevels(scc1_myco)\nseqinfo(gr_bact) &lt;- seqinfo(scc1_myco)\n\np_myco &lt;- cowplot::plot_grid(\n    # XVI\n    plyranges::slide_ranges(gr_XVI, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = scc1_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#EC2027') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('scc1 @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_XVI, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = pol2_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#34B55B') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('pol2 @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_XVI, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = GC_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line(linewidth = 0.5, col = '#5c5c5c') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0.10, 0.55)) + \n        labs(x = NULL), \n\n    # Myco\n    plyranges::slide_ranges(gr_bact, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = scc1_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#EC2027') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('scc1 @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_bact, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = pol2_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#34B55B') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('pol2 @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 8)) + \n        labs(x = NULL), \n    plyranges::slide_ranges(gr_bact, width = BINWIDTH, step = STEP) |&gt; \n        binnedAverage(bins = _, numvar = GC_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line(linewidth = 0.5, col = '#5c5c5c') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0.10, 0.55)) + \n        labs(x = NULL), \n\n    ncol = 2, byrow = FALSE\n)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Code for generating Figure 1 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "02.Analysis-Figure-01.html#extended-data-figure-1",
    "href": "02.Analysis-Figure-01.html#extended-data-figure-1",
    "title": "3  Code for generating Figure 1 & Extended Data figures",
    "section": "3.3 Extended Data Figure 1",
    "text": "3.3 Extended Data Figure 1\n\n3.3.1 Panel S1a\n\n3.3.1.1 Mmyco\n\nseq &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\nobs_nuc &lt;- seq |&gt; Biostrings::oligonucleotideFrequency(width = 1)\nobs_dinuc &lt;- seq |&gt; Biostrings::oligonucleotideFrequency(width = 2)\nrownames(obs_nuc) &lt;- names(seq)\nrownames(obs_dinuc) &lt;- names(seq)\nF_obs_nuc &lt;- obs_nuc / rowSums(obs_nuc) \nrownames(F_obs_nuc) &lt;- names(seq)\nF_obs_dinuc &lt;- obs_dinuc / rowSums(obs_dinuc) \nrownames(F_obs_dinuc) &lt;- names(seq)\npstars_myco &lt;- map_dfr(colnames(F_obs_dinuc), function(dinuc) {\n    map_dfr(names(seq), function(chr) {\n        dinuc_revcomp &lt;- as.character(reverseComplement(DNAString(dinuc)))\n        nuc1 &lt;- substr(dinuc, 1, 1)\n        nuc2 &lt;- substr(dinuc, 2, 2)\n        nuc1_revcomp &lt;- as.character(reverseComplement(DNAString(nuc1)))\n        nuc2_revcomp &lt;- as.character(reverseComplement(DNAString(nuc2)))\n        s = 2 * ( F_obs_dinuc[chr, dinuc] + F_obs_dinuc[chr, dinuc_revcomp] ) / ( (F_obs_nuc[chr, nuc1] + F_obs_nuc[chr, nuc1_revcomp]) * (F_obs_nuc[chr, nuc2] + F_obs_nuc[chr, nuc2_revcomp]) )\n        tibble(\n            chr = chr, \n            dinuc = dinuc, \n            pstar = s\n        )\n    })\n})\np &lt;- pstars_myco |&gt; \n    separate(dinuc, into = c('x', 'y'), sep = c(1, 2)) |&gt; \n    ggplot(aes(x, y, fill = log2(pstar))) + \n    geom_tile() + \n    scale_fill_distiller(palette = 'RdBu', direction = -1, limits = c(log2(1 / 1.25), log2(1 * 1.25)), oob = scales::oob_squish) + \n    facet_wrap(~ chr) + \n    coord_fixed()\n\n\n\n3.3.1.2 Mpneumo\n\nseq &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\nnames(seq) &lt;- str_replace(names(seq), ' .*', '')\nseq &lt;- seq[names(seq) != 'Mito']\nobs_nuc &lt;- seq |&gt; Biostrings::oligonucleotideFrequency(width = 1)\nobs_dinuc &lt;- seq |&gt; Biostrings::oligonucleotideFrequency(width = 2)\nrownames(obs_nuc) &lt;- names(seq)\nrownames(obs_dinuc) &lt;- names(seq)\nF_obs_nuc &lt;- obs_nuc / rowSums(obs_nuc) \nrownames(F_obs_nuc) &lt;- names(seq)\nF_obs_dinuc &lt;- obs_dinuc / rowSums(obs_dinuc) \nrownames(F_obs_dinuc) &lt;- names(seq)\npstars_pneumo &lt;- map_dfr(colnames(F_obs_dinuc), function(dinuc) {\n    map_dfr(names(seq), function(chr) {\n        dinuc_revcomp &lt;- as.character(reverseComplement(DNAString(dinuc)))\n        nuc1 &lt;- substr(dinuc, 1, 1)\n        nuc2 &lt;- substr(dinuc, 2, 2)\n        nuc1_revcomp &lt;- as.character(reverseComplement(DNAString(nuc1)))\n        nuc2_revcomp &lt;- as.character(reverseComplement(DNAString(nuc2)))\n        s = 2 * ( F_obs_dinuc[chr, dinuc] + F_obs_dinuc[chr, dinuc_revcomp] ) / ( (F_obs_nuc[chr, nuc1] + F_obs_nuc[chr, nuc1_revcomp]) * (F_obs_nuc[chr, nuc2] + F_obs_nuc[chr, nuc2_revcomp]) )\n        tibble(\n            chr = chr, \n            dinuc = dinuc, \n            pstar = s\n        )\n    })\n})\np &lt;- pstars_pneumo |&gt; \n    separate(dinuc, into = c('x', 'y'), sep = c(1, 2)) |&gt; \n    ggplot(aes(x, y, fill = log2(pstar))) + \n    geom_tile() + \n    scale_fill_distiller(palette = 'RdBu', direction = -1, limits = c(log2(1 / 1.25), log2(1 * 1.25)), oob = scales::oob_squish) + \n    facet_wrap(~ chr) + \n    coord_fixed()",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Code for generating Figure 1 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "02.Analysis-Figure-01.html#extended-data-figure-2",
    "href": "02.Analysis-Figure-01.html#extended-data-figure-2",
    "title": "3  Code for generating Figure 1 & Extended Data figures",
    "section": "3.4 Extended Data Figure 2",
    "text": "3.4 Extended Data Figure 2\n\n3.4.1 Panel S2a\n\nbin &lt;- 100\ngr &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/MNase/tracks/SRR3193263/SRR3193263^mapped_S288c^filtered^130-200^BADI46.130-200.CPM.bw') %&gt;% as_tibble() %&gt;% group_by(seqnames) %&gt;% slice_max(end) %&gt;% ungroup() %&gt;% slice_head(n = 16) %&gt;% mutate(start = 1, end = end - 50000) %&gt;% makeGRangesFromDataFrame() %&gt;% \n    tile(., width = bin) %&gt;% \n    unlist()\n\nbinned_tracks &lt;- list(\n\n    # ----------- W303 + Mmmyco (mapped over S288c)\n    'PolII - Mmmyco (rep1)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH51/CH51^mapped_S288c^CLKQDY.vs-CH54.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    'PolII - Mmmyco (rep2)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH102/CH102^mapped_S288c^M75ZQA.vs-CH105.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    'Scc1 - Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH35/CH35^unmapped_CBS138^mapped_S288c^F1KQ9J.vs-CH38.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    'H3 - Mmmyco (rep1)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH406/CH406^mapped_S288c^EXWZ5C.vs-CH408.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    'H3 - Mmmyco (rep2)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH407/CH407^mapped_S288c^SU9T4N.vs-CH409.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    'H2A - Mmmyco (rep1)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH404/CH404^mapped_S288c^YGJ7BT.vs-CH408.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    'H2A - Mmmyco (rep2)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH405/CH405^mapped_S288c^PYQZ9J.vs-CH409.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mmmyco (5')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM149/LM149^mapped_S288c^filtered^130-200^USS9N2.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mmmyco (10')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM150/LM150^mapped_S288c^filtered^130-200^XA3HI0.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mmmyco (20')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM152/LM152^mapped_S288c^filtered^130-200^A5S96Q.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mmmyco (40')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM153/LM153^mapped_S288c^filtered^130-200^CHJ3MZ.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mmmyco (60')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM154/LM154^mapped_S288c^filtered^130-200^J802Q0.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n\n    # ----------- S288c + Mmpneumo  \n    'PolII - Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH154/CH154^mapped_S288c_Mpneumo^598366.vs-CH155.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE),\n    'Scc1 - Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH219/CH219^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.vs-CH220.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE),\n    'H3 - Mpneumo (rep1)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH157/CH157^mapped_S288c^1DXHH9.vs-CH159.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE),\n    'H3 - Mpneumo (rep2)' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH367/CH367^mapped_S288c^08OVI9.vs-CH371.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE),\n    'H2A - Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH366/CH366^mapped_S288c^676QHT.vs-CH370.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mpneumo (5')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM162/LM162^mapped_S288c_Mpneumo^filtered^130-200^PHLPTK.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mpneumo (10')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM163/LM163^mapped_S288c_Mpneumo^filtered^130-200^71OU62.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mpneumo (20')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM165/LM165^mapped_S288c_Mpneumo^filtered^130-200^7BDFMM.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mpneumo (40')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM166/LM166^mapped_S288c_Mpneumo^filtered^130-200^UEVKWW.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE), \n    \"MNase - Mpneumo (60')\" = rtracklayer::import('~/Projects/20230517_Lea_MNase-timecourse/data/MNase/tracks/LM167/LM167^mapped_S288c_Mpneumo^filtered^130-200^LXMW7J.130-200.CPM.bw', as = 'Rle') %&gt;% \n        '['(gr) %&gt;% \n        mean(na.rm = TRUE)\n\n)\ndf &lt;- bind_cols(binned_tracks)\nd &lt;- df %&gt;% \n    cor(method = 'pearson') %&gt;% \n    as_tibble(rownames = 'metric1') %&gt;%\n    pivot_longer(-metric1, names_to = 'metric2', values_to = 'cor') \nd[d$metric1 == d$metric2, ]$cor = NA\np &lt;- ggplot(d, aes(x = metric1, y = metric2, fill = cor, size = abs(cor))) + \n    geom_point(pch = 22) + \n    scale_fill_distiller(palette = 'RdBu', type = 'seq', limits = c(-1, 1), oob = scales::oob_squish) + \n    theme(aspect.ratio = 1, panel.background = element_blank()) + \n    guides(x = guide_axis(angle = 90))\n\n\n\n3.4.2 Panel S2d\n\nbams &lt;- BamFileList(c(\n    myco_t05 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM149/LM149^mapped_W303_Mmmyco^filtered^K0DVZV.bam'), \n    myco_t10 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM150/LM150^mapped_W303_Mmmyco^filtered^HSD10W.bam'), \n    myco_t20 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM152/LM152^mapped_W303_Mmmyco^filtered^LYVCPG.bam'), \n    myco_t40 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM153/LM153^mapped_W303_Mmmyco^filtered^XUIZ7U.bam'), \n    myco_t60 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM154/LM154^mapped_W303_Mmmyco^filtered^N6MQ7Y.bam'),\n\n    pneumo_t05 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM162/LM162^mapped_S288c_Mpneumo^filtered^PHLPTK.bam'),\n    pneumo_t10 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM163/LM163^mapped_S288c_Mpneumo^filtered^71OU62.bam'),\n    pneumo_t20 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM165/LM165^mapped_S288c_Mpneumo^filtered^7BDFMM.bam'),\n    pneumo_t40 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM166/LM166^mapped_S288c_Mpneumo^filtered^UEVKWW.bam'),\n    pneumo_t60 = BamFile('/home/rsg/Projects/20230517_Lea_MNase-timecourse/data/MNase/bam/genome/LM167/LM167^mapped_S288c_Mpneumo^filtered^LXMW7J.bam')\n), asMates = FALSE)\nparam &lt;- ScanBamParam(\n    flag=scanBamFlag(\n        isPaired = TRUE,\n        isProperPair = TRUE,\n        isDuplicate = FALSE,\n        isSecondaryAlignment = FALSE\n    ), \n    mapqFilter = 1, \n    what = c(\"mapq\", \"isize\")\n)\nfrags &lt;- imap(bams, ~ {\n    print(.y)\n    x &lt;- GenomicAlignments::readGAlignmentPairs(.x, param = param) |&gt; \n        as('GRanges') |&gt; \n        filter_by_non_overlaps(GRanges(c('chrXII:481905-499631', 'XII:458999-461000')))\n    return(x)\n})\nfrags_lengths &lt;- imap_dfr(frags, ~ tibble(\n    sample = .y, \n    strain = str_replace(.y, '_.*', ''), \n    timepoint = str_replace(.y, '.*_', ''), \n    chr = as.vector(seqnames(.x)), \n    isize = width(.x)  \n)) |&gt; group_by(sample, chr)\np &lt;- frags_lengths |&gt; \n    group_by(strain, timepoint, chr) |&gt;\n    ggplot(aes(x = isize, after_stat(density), col = timepoint)) + \n    geom_freqpoly(binwidth = 1) + \n    xlim(c(30, 250)) + \n    scale_y_continuous(labels = scales::percent) +\n    theme_bw() + \n    facet_wrap(~ strain) + \n    labs(x = 'Fragment length', y = \"% of fragments\")\n\n\n\n3.4.3 Panel S2c\n\nmyco_seq &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\nmyco_genome &lt;- GRanges(paste0(names(myco_seq), ':1-', lengths(myco_seq)))\nseqlengths(myco_genome) &lt;- lengths(myco_seq)\npneumo_seq &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\npneumo_genome &lt;- GRanges(paste0(str_replace(names(pneumo_seq), ' .*', ''), ':1-', lengths(pneumo_seq)))\nseqlengths(pneumo_genome) &lt;- lengths(pneumo_seq)\ngenomes &lt;- rbind(as_tibble(myco_genome), as_tibble(pneumo_genome))\ndf &lt;- frags_lengths |&gt; \n    filter(isize &lt;= 165, chr != 'Mito', timepoint != 't15') |&gt; \n    group_by(strain, timepoint, chr) |&gt;\n    summarize(\n        chr_frags = dplyr::n(), \n        nuc_frags = sum(isize &gt;= 130 & isize &lt;= 165)\n    ) |&gt; \n    ungroup() %&gt;%\n    mutate(chr_size = left_join(x = ., y = genomes, by = c(chr = 'seqnames'))$width) |&gt;\n    group_by(strain, timepoint) |&gt; \n    mutate(total_frags = sum(chr_frags), pct = {nuc_frags / total_frags} / chr_size * 1e6) |&gt; \n    group_by(strain, chr) |&gt;\n    group_modify( ~ {\n        mutate(.x, pct_normalized = pct / .x$pct[.x$timepoint == 't05'])\n    })\np &lt;- ggplot(df, aes(x = timepoint, pct_normalized, group = chr, col = chr %in% c(\"Mmmyco\", \"Mpneumo\"))) + \n    geom_line() + \n    scale_colour_manual(values = c('black', '#4B93BF')) +\n    theme_bw() + \n    facet_grid(~ strain, scales = 'free') + \n    theme(legend.position = 'none') + \n    labs(\n        x = \"Timepoint\", \n        y = \"Proportion of nucleosomal reads (compared to t = 05')\"\n    )\n\n\n\n3.4.4 Panel S2e\n\nBIN = 147\nlibrary(periodicDNA)\nlibrary(BSgenome.Scerevisiae.UCSC.sacCer3)\nlibrary(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)\nlibrary(GenomicFeatures)\ngenes &lt;- genes(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)\nsacCer3_TSSs &lt;- genes %&gt;%\n    resize(fix = 'start', 1) %&gt;% \n    resize(fix = 'end', BIN) %&gt;% \n    '['(. %within% GRanges(seqinfo(genes)))\nset.seed(10)\nseqs_sc &lt;- getSeq(BSgenome.Scerevisiae.UCSC.sacCer3)[sacCer3_TSSs]\nseqs &lt;- Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')\nseqs_sc &lt;- seqs[GRanges(names(seqs), IRanges(1, end = width(seqs))) %&gt;% tile(width = BIN) %&gt;% unlist() %&gt;% filter(width == BIN)]\nseqs &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\nseqs_mpneumo &lt;- seqs[GRanges('Mpneumo', IRanges::IRanges(start = seq(1, length(seqs[['Mpneumo']]), by = BIN), width = BIN)) %&gt;% head(-1)]\nseqs &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\nseqs_mmyco &lt;- seqs[GRanges('Mmmyco', IRanges::IRanges(start = seq(1, length(seqs[['Mmmyco']]), by = BIN), width = BIN)) %&gt;% head(-1)]\nlist_seqs &lt;- list(\n    'yeast' = seqs_sc, \n    'seqs_mmyco' = seqs_mmyco,\n    'seqs_mpneumo' = seqs_mpneumo\n)\nnuc_seqs &lt;- lapply(seq_along(list_seqs), function(K) {\n    n &lt;- names(list_seqs)[K]\n    seqs &lt;- list_seqs[[K]]\n    lapply(c('A', 'T', 'C', 'G'), function(N) {\n        lapply(seqs, function(seq) {\n            x &lt;- as.character(seq) %&gt;% strsplit(\"\") %&gt;% unlist() %&gt;% grepl(N, .) %&gt;% Rle()\n            x@lengths[x@values]\n        }) %&gt;% unlist() %&gt;% \n            tibble(\n                type = n,\n                tot_length = sum(width(seqs)),\n                nuc = N,\n                stretch = .\n            )\n    }) %&gt;% bind_rows()\n}) %&gt;% bind_rows() %&gt;% \n    group_by(type, tot_length, nuc, stretch) \nnuc_seqs &lt;- bind_rows(nuc_seqs, lapply(seq_along(list_seqs), function(K) {\n    n &lt;- names(list_seqs)[K]\n    seqs &lt;- list_seqs[[K]]\n    lapply(seqs, function(seq) {\n        x &lt;- as.character(seq) %&gt;% strsplit(\"\") %&gt;% unlist() %&gt;% {grepl('A', .) | grepl('T', .)} %&gt;% Rle()\n        x@lengths[x@values]\n    }) %&gt;% unlist() %&gt;% \n        tibble(\n            type = n,\n            tot_length = sum(width(seqs)),\n            nuc = 'W',\n            stretch = .\n        )\n}) %&gt;% bind_rows()) %&gt;% \n    group_by(type, tot_length, nuc, stretch) \nnuc_seqs_tally &lt;- nuc_seqs %&gt;% \n    mutate(stretch = ifelse(stretch &gt;= 10, 10, stretch)) %&gt;%\n    tally() %&gt;% \n    filter(stretch &gt;= 3) %&gt;% \n    mutate(scaled_n = n/sum(n), stretch_per_147bp = n/tot_length*147) %&gt;% \n    mutate(type = factor(type, c('yeast', 'seqs_mpneumo', 'seqs_mmyco'))) %&gt;%\n    mutate(nuc = factor(nuc, c('A', 'T', 'C', 'G', 'W')))\np &lt;- ggplot(nuc_seqs_tally, aes(x = stretch, y = stretch_per_147bp, group = type, fill = type)) + \n    geom_col(position = position_dodge2()) + \n    facet_wrap(~nuc) + \n    ylab('# of stretches / 147bp') + \n    periodicDNA::theme_ggplot2() \n\n\n\n3.4.5 Panel S2f\n\nBIN = 300\nlibrary(periodicDNA)\nlibrary(BSgenome.Scerevisiae.UCSC.sacCer3)\nlibrary(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)\nlibrary(GenomicFeatures)\nushuffle &lt;- reticulate::import(\"ushuffle\")\ngenes &lt;- genes(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)\nsacCer3_TSSs &lt;- genes %&gt;%\n    resize(fix = 'start', BIN) %&gt;% \n    '['(. %within% GRanges(seqinfo(genes)))\nset.seed(10)\nseqs &lt;- getSeq(BSgenome.Scerevisiae.UCSC.sacCer3)[sacCer3_TSSs]\nseqs_shuffled &lt;- Biostrings::DNAStringSet(lapply(seqs, \\(seq) {\n        seq &lt;- ushuffle$shuffle(charToRaw(as.character(seq)), 2)\n        Biostrings::DNAString( as.character(seq) )\n}))\nPSDs_yeast &lt;- getPeriodicity(\n    x = seqs,\n    range_spectrum = seq(3, 160),\n    motif = 'WW', \n    BPPARAM = MulticoreParam(18), \n    sample = 20000000,\n    n_shuffling = 0\n)\nPSDs_yeast_shuffle &lt;- getPeriodicity(\n    x = seqs_shuffled,\n    range_spectrum = seq(3, 160),\n    motif = 'WW', \n    BPPARAM = MulticoreParam(18), \n    sample = 20000000,\n    n_shuffling = 0\n)\nseqs &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\nseqs &lt;- seqs[GRanges('Mpneumo', IRanges::IRanges(start = seq(1, length(seqs[['Mpneumo']]), by = BIN), width = BIN)) %&gt;% head(-1)]\nseqs_shuffled &lt;- Biostrings::DNAStringSet(lapply(seqs, \\(seq) {\n        seq &lt;- ushuffle$shuffle(charToRaw(as.character(seq)), 2)\n        Biostrings::DNAString( as.character(seq) )\n}))\nPSDs_Mpneumo &lt;- getPeriodicity(\n    x = seqs,\n    range_spectrum = seq(3, 160),\n    motif = 'WW', \n    BPPARAM = MulticoreParam(18), \n    sample = 20000000,\n    n_shuffling = 0\n)\nPSDs_Mpneumo_shuffle &lt;- getPeriodicity(\n    x = seqs_shuffled,\n    range_spectrum = seq(3, 160),\n    motif = 'WW', \n    BPPARAM = MulticoreParam(18), \n    sample = 20000000,\n    n_shuffling = 0\n)\nseqs &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\nseqs &lt;- seqs[GRanges('Mmmyco', IRanges::IRanges(start = seq(1, length(seqs[['Mmmyco']]), by = BIN), width = BIN)) %&gt;% head(-1)]\nseqs_shuffled &lt;- Biostrings::DNAStringSet(lapply(seqs, \\(seq) {\n        seq &lt;- ushuffle$shuffle(charToRaw(as.character(seq)), 2)\n        Biostrings::DNAString( as.character(seq) )\n}))\nPSDs_Mmmyco &lt;- getPeriodicity(\n    x = seqs,\n    range_spectrum = seq(3, 160),\n    motif = 'WW', \n    BPPARAM = MulticoreParam(18), \n    sample = 20000000,\n    n_shuffling = 0\n)\nPSDs_Mmmyco_shuffle &lt;- getPeriodicity(\n    x = seqs_shuffled,\n    range_spectrum = seq(3, 160),\n    motif = 'WW', \n    BPPARAM = MulticoreParam(18), \n    sample = 20000000,\n    n_shuffling = 0\n)\ndf &lt;- rbind(\n    PSDs_yeast$hist %&gt;% mutate(sample = 'yeast'), \n    PSDs_yeast_shuffle$hist %&gt;% mutate(sample = 'yeast_shuffle'), \n    PSDs_Mpneumo$hist %&gt;% mutate(sample = 'Mpneumo'), \n    PSDs_Mpneumo_shuffle$hist %&gt;% mutate(sample = 'Mpneumo_shuffle'), \n    PSDs_Mmmyco$hist %&gt;% mutate(sample = 'Mmmyco'),\n    PSDs_Mmmyco_shuffle$hist %&gt;% mutate(sample = 'Mmmyco_shuffle')\n) %&gt;% \n    group_by(sample) %&gt;%\n    filter(distance &gt;= 3, distance &lt;= 120) %&gt;% \n    split(.$sample) %&gt;% \n    map(~loess(counts ~ distance, data = .x) %&gt;% broom::augment()) %&gt;% \n    bind_rows(.id = 'sample') %&gt;% \n    mutate(group = str_replace(sample, '_.*', '')) %&gt;% \n    mutate(class = ifelse(grepl('_shuffle', sample), 'shuffled', 'obs')) %&gt;% \n    mutate(group = factor(group, c('yeast', 'Mpneumo', 'Mmmyco')))\nPSD &lt;- split(df, df$sample) %&gt;% \n    map(~stats::spectrum(.x$counts, plot = FALSE) %&gt;% \n        '['(c('spec', 'freq')) %&gt;% \n        as_tibble() %&gt;% \n        mutate(sample = unique(.x$sample), period = round(1/freq, 3))\n) %&gt;% \n    bind_rows() %&gt;% \n    mutate(round_period = round(period, 4), digits = period - round_period) %&gt;% \n    group_by(sample, round_period) %&gt;% \n    slice_min(digits, n = 1) %&gt;% \n    mutate(facet_ = factor(period), x = 1) %&gt;% \n    mutate(group = str_replace(sample, '_.*', '')) %&gt;% \n    mutate(class = ifelse(grepl('_shuffle', sample), 'shuffled', 'obs')) %&gt;% \n    mutate(group = factor(group, c('yeast', 'Mpneumo', 'Mmmyco')))\nggplot(filter(PSD, period &gt;= 10, period &lt;= 11), aes(x = group, y = spec, fill = group, alpha = class)) + \n    geom_col(position = 'dodge') + \n    labs(y = 'Power spectral density') + \n    scale_alpha_manual(values = c(1, 0.3)) + \n    scale_y_log10() + \n    annotation_logticks(sides = 'l') +\n    facet_wrap(~period, nrow = 1) + \n    periodicDNA::theme_ggplot2()\n\n\n\n3.4.6 Panel S2g\n\n## --- Genes\ngenes &lt;- list(\n    'genes_S288c' = rtracklayer::import('~/genomes/S288c/S288c.gtf') %&gt;% filter(type == 'gene', gene_biotype == 'protein_coding') %&gt;% sort() %&gt;% mutate(class = 'genebody'),\n    'genes_W303_Mmmyco' = rtracklayer::import('~/genomes/W303_Mmmyco/W303_Mmmyco.gff3') %&gt;% filter(type == 'gene') %&gt;% sort() %&gt;% mutate(class = 'genebody'),\n    'genes_S288c_Mpneumo' = rtracklayer::import('~/genomes/S288c_Mpneumo/S288c_Mpneumo.gtf') %&gt;% filter(type == 'gene', gene_biotype == 'protein_coding') %&gt;% sort() %&gt;% mutate(class = 'genebody')\n)\n\n## --- Tracks\ntracks &lt;- list(\n    # ----------- WT \n    'MNase_WT' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/MNase/tracks/SRR3193263/SRR3193263^mapped_S288c^filtered^130-200^BADI46.130-200.CPM.bw', as = 'Rle'), \n    'PolII_WT' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH244/CH244^mapped_S288c^CIJXLY.vs-CH246.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH245/CH245^mapped_S288c^3RQ3EM.vs-CH247.bw', as = 'Rle') ) / 2,\n    'Scc1_WT' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH224/CH224^unmapped_CBS138^mapped_S288c^YMT7BP.vs-CH225.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH226/CH226^unmapped_CBS138^mapped_S288c^MTY44Z.vs-CH227.bw', as = 'Rle') ) / 2, \n    'H3_WT' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/SRR1517820/SRR1517820^mapped_S288c^VG9IL4.CPM.bw', as = 'Rle'),\n    'H2A_WT' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/SRR1517818/SRR1517818^mapped_S288c^FFF5YV.CPM.bw', as = 'Rle'),\n    'RNA_WT' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045244/SRR2045244^mapped_S288c^KEYTQL.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045245/SRR2045245^mapped_S288c^AF9M8B.unstranded.CPM.bw', as = 'Rle')\n    ) / 2, \n    'fwdRNA_WT' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045244/SRR2045244^mapped_S288c^KEYTQL.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045245/SRR2045245^mapped_S288c^AF9M8B.fwd.CPM.bw', as = 'Rle')\n    ) / 2, \n    'revRNA_WT' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045244/SRR2045244^mapped_S288c^KEYTQL.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045245/SRR2045245^mapped_S288c^AF9M8B.rev.CPM.bw', as = 'Rle')\n    ) / 2, \n    'GC_WT' = lengths(Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')),\n\n    # ----------- W303 + Mmmyco \n    'MNase_W303_Mmmyco' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/MNase/tracks/CH265/CH265^mapped_W303_Mmmyco^filtered^130-200^ZXAMER.130-200.CPM.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/MNase/tracks/CH266/CH266^mapped_W303_Mmmyco^filtered^130-200^ZG3T8W.130-200.CPM.bw', as = 'Rle') ) / 2,\n    'PolII_W303_Mmmyco' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH51/CH51^mapped_W303_Mmmyco^Y9CC89.vs-CH54.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH102/CH102^mapped_W303_Mmmyco^2FVQO3.vs-CH105.bw', as = 'Rle') ) / 2,\n    'Scc1_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH35/CH35^unmapped_CBS138^mapped_W303_Mmmyco^DTAKMF.vs-CH38.bw', as = 'Rle'), \n    'H3_W303_Mmmyco' = (\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH406/CH406^mapped_W303_Mmmyco^KDTEGO.vs-CH408.bw', as = 'Rle') + \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH407/CH407^mapped_W303_Mmmyco^8S1VTX.vs-CH409.bw', as = 'Rle')\n    ) / 2,\n    'H2A_W303_Mmmyco' = (\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH404/CH404^mapped_W303_Mmmyco^XOL0HV.vs-CH408.bw', as = 'Rle') + \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH405/CH405^mapped_W303_Mmmyco^CXNJIS.vs-CH409.bw', as = 'Rle')\n    ) / 2,\n    'Sir3_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH380/CH380^mapped_W303_Mmmyco^D51AZ0.CPM.bw', as = 'Rle'), \n    'RNA_W303_Mmmyco' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.unstranded.CPM.bw', as = 'Rle')\n    ) / 3, \n    'fwdRNA_W303_Mmmyco' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.fwd.CPM.bw', as = 'Rle')\n    ) / 3, \n    'revRNA_W303_Mmmyco' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.rev.CPM.bw', as = 'Rle')\n    ) / 3, \n    'GC_W303_Mmmyco' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')),\n\n    # ----------- S288c + Mmpneumo  \n    'MNase_S288c_Mpneumo' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/MNase/tracks/CH205/CH205^mapped_S288c_Mpneumo^filtered^130-200^X8C2LM.130-200.CPM.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/MNase/tracks/CH206/CH206^mapped_S288c_Mpneumo^filtered^130-200^HS5L1A.130-200.CPM.bw', as = 'Rle') ) / 2,\n    'PolII_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH154/CH154^mapped_S288c_Mpneumo^598366.vs-CH155.bw', as = 'Rle'),\n    'Scc1_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH219/CH219^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.vs-CH220.bw', as = 'Rle'), \n    'H3_S288c_Mpneumo' = (\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH157/CH157^mapped_S288c_Mpneumo^MGHI86.vs-CH159.bw', as = 'Rle') + \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH367/CH367^mapped_S288c_Mpneumo^PCPOLZ.vs-CH371.bw', as = 'Rle')\n    ) / 2,\n    'H2A_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH366/CH366^mapped_S288c_Mpneumo^S0ZHT4.vs-CH370.bw', as = 'Rle'), \n    'RNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.unstranded.CPM.bw', as = 'Rle')\n    ) / 3, \n    'fwdRNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.fwd.CPM.bw', as = 'Rle')\n    ) / 3, \n    'revRNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.rev.CPM.bw', as = 'Rle')\n    ) / 3, \n    'GC_S288c_Mpneumo' = lengths(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')), \n    \n    # ----------- W303_chrXVI-Mmmyco_inv870kb\n    'PolII_W303_chrXVI-Mmmyco_inv870kb' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/ChIP/tracks/LM80/LM80^mapped_W303_chrXVI-Mmmyco_inv870kb^5BSLFH.vs-LM81.bw', as = 'Rle'),\n    'Scc1_W303_chrXVI-Mmmyco_inv870kb' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/ChIP/tracks/LM65/LM65^unmapped_CBS138^mapped_W303_chrXVI-Mmmyco_inv870kb^WUXR6F.vs-LM64.bw', as = 'Rle'), \n    'GC_W303_chrXVI-Mmmyco_inv870kb' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')), \n\n    # ----------- W303_chrXVI-Mmmyco_dbl-inv\n    'PolII_W303_chrXVI-Mmmyco_dbl-inv' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/ChIP/tracks/LM82/LM82^mapped_W303_chrXVI-Mmmyco_dbl-inv^HBN3NY.vs-LM83.bw', as = 'Rle'),\n    'Scc1_W303_chrXVI-Mmmyco_dbl-inv' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/ChIP/tracks/LM67/LM67^unmapped_CBS138^mapped_W303_chrXVI-Mmmyco_dbl-inv^TXX0ZC.vs-LM66.bw', as = 'Rle'), \n    'GC_W303_chrXVI-Mmmyco_dbl-inv' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', ''))\n\n)\n## --- Peaks\npeaks &lt;- list(\n    'Scc1_S288c' = c(\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/peaks/CH224/CH224_vs-CH225_genome-S288c_YMT7BP_peaks.narrowPeak') %&gt;% mutate(rep = 'rep1'), \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/peaks/CH226/CH226_vs-CH227_genome-S288c_MTY44Z_peaks.narrowPeak') %&gt;% mutate(rep = 'rep2')\n    ) %&gt;% filter(qValue &gt; 10) %&gt;% reduce_ranges(), \n    'Scc1_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/peaks/CH35/CH35_vs-CH38_genome-W303_Mmmyco_DTAKMF_peaks.narrowPeak') %&gt;% filter(qValue &gt; 10) %&gt;% reduce_ranges(), \n    'Scc1_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_peaks.narrowPeak') %&gt;% filter(qValue &gt; 10) \n)\n## --- Summits\nsummits &lt;- list(\n    'Scc1_S288c' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/peaks/CH224/CH224_vs-CH225_genome-S288c_YMT7BP_summits.bed') %&gt;% subsetByOverlaps(peaks[['Scc1_S288c']]),\n    'Scc1_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/peaks/CH35/CH35_vs-CH38_genome-W303_Mmmyco_DTAKMF_summits.bed') %&gt;% subsetByOverlaps(peaks[['Scc1_W303_Mmmyco']]),\n    'Scc1_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_summits.bed') %&gt;% subsetByOverlaps(peaks[['Scc1_S288c_Mpneumo']])\n)\n\n\n\n\nset.seed(100)\ncentromere_window &lt;- 20000\nbin &lt;- 300\ncentros &lt;- list(\n    'centros_S288c' = read_tsv('~/genomes/S288c/S288c_centromeres.bed') %&gt;% makeGRangesFromDataFrame(keep.extra.columns = TRUE) %&gt;% resize(width = centromere_window, fix = 'center'),\n    'centros_W303_Mmmyco' = read_tsv('~/genomes/W303_Mmmyco/W303_Mmmyco_centromeres.bed') %&gt;% makeGRangesFromDataFrame(keep.extra.columns = TRUE) %&gt;% resize(width = centromere_window, fix = 'center'),\n    'centros_S288c_Mpneumo' = read_tsv('~/genomes/S288c_Mpneumo/S288c_Mpneumo_centromeres.bed') %&gt;% makeGRangesFromDataFrame(keep.extra.columns = TRUE) %&gt;% resize(width = centromere_window, fix = 'center')\n)\nbaseline &lt;- list(\n    'baseline_S288c' = lengths(Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = centromere_window) %&gt;% \n        unlist() %&gt;% \n        filter_by_non_overlaps(c(centros[['centros_S288c']], peaks[['Scc1_WT']])) %&gt;% \n        .[sample(length(.))],\n    'baseline_W303_Mmmyco' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = bin) %&gt;% \n        unlist() %&gt;% \n        filter_by_non_overlaps(c(centros[['centros_W303_Mmmyco']], peaks[['Scc1_W303_Mmmyco']])) %&gt;% \n        .[sample(length(.))],\n    'baseline_S288c_Mpneumo' = lengths(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = bin) %&gt;% \n        unlist() %&gt;% \n        filter_by_non_overlaps(c(centros[['centros_S288c_Mpneumo']], peaks[['Scc1_S288c_Mpneumo']])) %&gt;% \n        .[sample(length(.))]\n)\ncovs &lt;- list(\n    tracks[['Scc1_WT']][centros[['centros_S288c']]] %&gt;% as_tibble() %&gt;% group_by(group_name) %&gt;% summarize(value = median(value)) %&gt;% mutate(sample = 'S288c', type = 'centro'),\n    tracks[['Scc1_WT']][baseline[['baseline_S288c']]] %&gt;% as_tibble() %&gt;% group_by(group_name) %&gt;% summarize(value = median(value)) %&gt;% mutate(sample = 'S288c', type = 'random'),\n    tracks[['Scc1_W303_Mmmyco']][centros[['centros_W303_Mmmyco']]] %&gt;% as_tibble() %&gt;% group_by(group_name) %&gt;% summarize(value = median(value)) %&gt;% mutate(sample = 'W303_Mmmyco', type = 'centro'),\n    tracks[['Scc1_W303_Mmmyco']][baseline[['baseline_W303_Mmmyco']]] %&gt;% as_tibble() %&gt;% group_by(group_name) %&gt;% summarize(value = median(value)) %&gt;% mutate(sample = 'W303_Mmmyco', type = 'random'),\n    tracks[['Scc1_S288c_Mpneumo']][centros[['centros_S288c_Mpneumo']]] %&gt;% as_tibble() %&gt;% group_by(group_name) %&gt;% summarize(value = median(value)) %&gt;% mutate(sample = 'S288c_Mpneumo', type = 'centro'),\n    tracks[['Scc1_S288c_Mpneumo']][baseline[['baseline_S288c_Mpneumo']]] %&gt;% as_tibble() %&gt;% group_by(group_name) %&gt;% summarize(value = median(value)) %&gt;% mutate(sample = 'S288c_Mpneumo', type = 'random')\n) %&gt;% \n    bind_rows()\np &lt;- covs %&gt;% \n    ggplot(aes(x = sample, y = value, fill = type)) + \n    geom_boxplot(outlier.shape=NA) + \n    geom_point(position=position_jitterdodge(jitter.width = 0.2), shape = 21) + \n    theme_minimal() + \n    theme(panel.border = element_rect(fill = NA))\n\n\n\n3.4.7 Panel S2i\n\nm &lt;- summits[['Scc1_S288c']] %&gt;% \n    resize(4001, fix = 'center') %&gt;% \n    mutate(inCoh = {`%within%`(., tracks[['Scc1_WT']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inMnase = {`%within%`(., tracks[['MNase_WT']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inPolII = {`%within%`(., tracks[['PolII_WT']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    filter(inCoh, inMnase, inPolII) %&gt;% \n    mutate(name = as.character(.)) %&gt;% \n    {\n        g &lt;- .\n        tracks[['Scc1_WT']][g] %&gt;% \n        as.matrix() %&gt;% \n        as.data.frame() %&gt;%\n        mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n        pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n        mutate(idx = as.numeric(factor(idx, unique(idx))) - 2000, grange = factor(grange)) %&gt;% \n        mutate(grange = {\n            levs &lt;- group_by(., grange) %&gt;% filter(abs(idx) &lt; 1000) %&gt;% dplyr::summarize(m = mean(score)) %&gt;% arrange(m) %&gt;% pull(grange)\n            factor(grange, levs)\n        }) %&gt;%\n        mutate(score_squished = scales::oob_squish(score, c(0, 5)))\n    } \np_WT_scc1 &lt;- cowplot::plot_grid(\n    group_by(m, idx) %&gt;% \n        summarize(\n            mean = mean(score), \n            se = sd(score, na.rm=TRUE)/sqrt(dplyr::n()),\n            Q = stats::qt(0.950, dplyr::n()-1, lower.tail = FALSE),\n            ci_up = mean + Q*se, \n            ci_down = mean - Q*se\n        ) %&gt;% \n        mutate(\n            mean = slider::slide_dbl(mean, base::mean, .before = 100, .after = 100),\n            ci_up = slider::slide_dbl(ci_up, base::mean, .before = 100, .after = 100),\n            ci_down = slider::slide_dbl(ci_down, base::mean, .before = 100, .after = 100)\n        ) %&gt;%\n        ggplot() + \n        geom_line(mapping = aes(x = idx, y = mean)) +\n        geom_ribbon(mapping = aes(x = idx, ymin = ci_down, ymax = ci_up), col = NA, alpha = 0.4) + \n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major = element_blank(), \n            panel.grid.minor = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle('Scc1 ChIP @ Scc1 summits') + \n        labs(y = '') + \n        coord_cartesian(expand = FALSE, ylim = c(0, 6)),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = m, mapping = aes(x = idx, y = grange, fill = score_squished, alpha = score_squished), raster.dpi = 500) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major = element_blank(), \n            panel.grid.minor = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle(NULL) + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_fill_distiller(palette = 'YlOrRd', direction = 1),\n    nrow = 2, align = 'hv', axis = 'tblr', rel_heights = c(1, 2)\n)\nm &lt;- summits[['Scc1_W303_Mmmyco']] %&gt;% \n    filter(grepl('chr', seqnames)) %&gt;% \n    resize(4001, fix = 'center') %&gt;% \n    mutate(inCoh = {`%within%`(., tracks[['Scc1_W303_Mmmyco']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inMnase = {`%within%`(., tracks[['MNase_W303_Mmmyco']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inPolII = {`%within%`(., tracks[['PolII_W303_Mmmyco']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    filter(inCoh, inMnase, inPolII) %&gt;% \n    mutate(name = as.character(.)) %&gt;% \n    {\n        g &lt;- .\n        tracks[['Scc1_W303_Mmmyco']][g] %&gt;% \n        as.matrix() %&gt;% \n        as.data.frame() %&gt;%\n        mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n        pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n        mutate(idx = as.numeric(factor(idx, unique(idx))) - 2000, grange = factor(grange)) %&gt;% \n        mutate(grange = {\n            levs &lt;- group_by(., grange) %&gt;% filter(abs(idx) &lt; 1000) %&gt;% dplyr::summarize(m = mean(score)) %&gt;% arrange(m) %&gt;% pull(grange)\n            factor(grange, levs)\n        }) %&gt;%\n        mutate(score_squished = scales::oob_squish(score, c(0, 5)))\n    } \np_W303_Mmmyco_scc1 &lt;- cowplot::plot_grid(\n    group_by(m, idx) %&gt;% \n        summarize(\n            mean = mean(score), \n            se = sd(score, na.rm=TRUE)/sqrt(dplyr::n()),\n            Q = stats::qt(0.950, dplyr::n()-1, lower.tail = FALSE),\n            ci_up = mean + Q*se, \n            ci_down = mean - Q*se\n        ) %&gt;% \n        mutate(\n            mean = slider::slide_dbl(mean, base::mean, .before = 100, .after = 100),\n            ci_up = slider::slide_dbl(ci_up, base::mean, .before = 100, .after = 100),\n            ci_down = slider::slide_dbl(ci_down, base::mean, .before = 100, .after = 100)\n        ) %&gt;%\n        ggplot() + \n        geom_line(mapping = aes(x = idx, y = mean)) +\n        geom_ribbon(mapping = aes(x = idx, ymin = ci_down, ymax = ci_up), col = NA, alpha = 0.4) + \n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major = element_blank(), \n            panel.grid.minor = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle('Scc1 ChIP @ Scc1 summits') + \n        labs(y = '') + \n        coord_cartesian(expand = FALSE, ylim = c(0, 6)),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = m, mapping = aes(x = idx, y = grange, fill = score_squished, alpha = score_squished), raster.dpi = 500) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major = element_blank(), \n            panel.grid.minor = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle(NULL) + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_fill_distiller(palette = 'YlOrRd', direction = 1),\n    nrow = 2, align = 'hv', axis = 'tblr', rel_heights = c(1, 2)\n)\nm &lt;- summits[['Scc1_S288c_Mpneumo']] %&gt;% \n    filter(!grepl('Mpneumo', seqnames)) %&gt;% \n    resize(4001, fix = 'center') %&gt;% \n    mutate(inCoh = {`%within%`(., tracks[['Scc1_S288c_Mpneumo']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inMnase = {`%within%`(., tracks[['MNase_S288c_Mpneumo']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inPolII = {`%within%`(., tracks[['PolII_S288c_Mpneumo']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    filter(inCoh, inMnase, inPolII) %&gt;% \n    mutate(name = as.character(.)) %&gt;% \n    {\n        g &lt;- .\n        tracks[['Scc1_S288c_Mpneumo']][g] %&gt;% \n        as.matrix() %&gt;% \n        as.data.frame() %&gt;%\n        mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n        pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n        mutate(idx = as.numeric(factor(idx, unique(idx))) - 2000, grange = factor(grange)) %&gt;% \n        mutate(grange = {\n            levs &lt;- group_by(., grange) %&gt;% filter(abs(idx) &lt; 1000) %&gt;% dplyr::summarize(m = mean(score)) %&gt;% arrange(m) %&gt;% pull(grange)\n            factor(grange, levs)\n        }) %&gt;%\n        mutate(score_squished = scales::oob_squish(score, c(0, 5)))\n    } \np_S288c_Mpneumo_scc1 &lt;- cowplot::plot_grid(\n    group_by(m, idx) %&gt;% \n        summarize(\n            mean = mean(score), \n            se = sd(score, na.rm=TRUE)/sqrt(dplyr::n()),\n            Q = stats::qt(0.950, dplyr::n()-1, lower.tail = FALSE),\n            ci_up = mean + Q*se, \n            ci_down = mean - Q*se\n        ) %&gt;% \n        mutate(\n            mean = slider::slide_dbl(mean, base::mean, .before = 100, .after = 100),\n            ci_up = slider::slide_dbl(ci_up, base::mean, .before = 100, .after = 100),\n            ci_down = slider::slide_dbl(ci_down, base::mean, .before = 100, .after = 100)\n        ) %&gt;%\n        ggplot() + \n        geom_line(mapping = aes(x = idx, y = mean)) +\n        geom_ribbon(mapping = aes(x = idx, ymin = ci_down, ymax = ci_up), col = NA, alpha = 0.4) + \n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major = element_blank(), \n            panel.grid.minor = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle('Scc1 ChIP @ Scc1 summits') + \n        labs(y = '') + \n        coord_cartesian(expand = FALSE, ylim = c(0, 6)),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = m, mapping = aes(x = idx, y = grange, fill = score_squished, alpha = score_squished), raster.dpi = 500) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major = element_blank(), \n            panel.grid.minor = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle(NULL) + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_fill_distiller(palette = 'YlOrRd', direction = 1),\n    nrow = 2, align = 'hv', axis = 'tblr', rel_heights = c(1, 2)\n)\np_Scc1 &lt;- cowplot::plot_grid(p_WT_scc1, p_W303_Mmmyco_scc1, p_S288c_Mpneumo_scc1, nrow = 1, align = 'hv', axis = 'tblr')\n\n\n\n3.4.8 Panel S2j\n\ng &lt;- summits[['Scc1_S288c_Mpneumo']] %&gt;% \n    filter(seqnames %in% c('II', 'Mpneumo')) %&gt;%\n    # mutate(seqnames = ifelse(seqnames == 'Mpneumo', 'Mpneumo', 'Yeast')) %&gt;%\n    resize(4001, fix = 'center') %&gt;% \n    mutate(inCoh = {`%within%`(., tracks[['Scc1_S288c_Mpneumo']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inMnase = {`%within%`(., tracks[['MNase_S288c_Mpneumo']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    mutate(inPolII = {`%within%`(., tracks[['PolII_S288c_Mpneumo']] %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    filter(inCoh, inMnase, inPolII) %&gt;% \n    mutate(name = as.character(.))\nmat_coh &lt;- tracks[['Scc1_S288c_Mpneumo']][g] %&gt;% \n    as.matrix() %&gt;% \n    as.data.frame() %&gt;%\n    mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n    pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n    mutate(idx = as.numeric(factor(idx, unique(idx))) - 2000, grange = factor(grange)) %&gt;% \n    mutate(grange = {\n        levs &lt;- group_by(., grange) %&gt;% filter(abs(idx) &lt; 1000) %&gt;% dplyr::summarize(m = mean(score)) %&gt;% arrange(m) %&gt;% pull(grange)\n        factor(grange, levs)\n    }) %&gt;%\n    mutate(score = scales::oob_squish(score, quantile(score, c(.0, .90))))\nmat_mnase &lt;- tracks[['MNase_S288c_Mpneumo']][g] %&gt;% \n    as.matrix() %&gt;% \n    as.data.frame() %&gt;%\n    mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n    pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n    mutate(idx = as.numeric(factor(idx, unique(idx))) - 2000, grange = factor(grange, levels(mat_coh$grange))) %&gt;% \n    mutate(grange = {\n        levs &lt;- group_by(., grange) %&gt;% filter(abs(idx) &lt; 1000) %&gt;% dplyr::summarize(m = mean(score)) %&gt;% arrange(m) %&gt;% pull(grange)\n        factor(grange, levs)\n    }) %&gt;%\n    mutate(score = scales::oob_squish(score, quantile(score, c(.00, .90))))\nmat_polii &lt;- tracks[['PolII_S288c_Mpneumo']][g] %&gt;% \n    as.matrix() %&gt;% \n    as.data.frame() %&gt;%\n    mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n    pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n    mutate(idx = as.numeric(factor(idx, unique(idx))) - 2000, grange = factor(grange, levels(mat_coh$grange))) %&gt;% \n    mutate(grange = {\n        levs &lt;- group_by(., grange) %&gt;% filter(abs(idx) &lt; 1000) %&gt;% dplyr::summarize(m = mean(score)) %&gt;% arrange(m) %&gt;% pull(grange)\n        factor(grange, levs)\n    }) %&gt;%\n    mutate(score = scales::oob_squish(score, quantile(score, c(.00, .90))))\np &lt;- cowplot::plot_grid(\n    group_by(mat_mnase, seqnames, idx) %&gt;% \n        summarize(\n            mean = mean(score), \n            se = sd(score, na.rm=TRUE)/sqrt(dplyr::n()),\n            Q = stats::qt(0.950, dplyr::n()-1, lower.tail = FALSE),\n            ci_up = mean + Q*se, \n            ci_down = mean - Q*se\n        ) %&gt;% \n        mutate(\n            mean = slider::slide_dbl(mean, base::mean, .before = 100, .after = 100),\n            ci_up = slider::slide_dbl(ci_up, base::mean, .before = 100, .after = 100),\n            ci_down = slider::slide_dbl(ci_down, base::mean, .before = 100, .after = 100)\n        ) %&gt;%\n        ggplot() + \n        geom_line(mapping = aes(x = idx, y = mean, group = seqnames, col = seqnames)) +\n        geom_ribbon(mapping = aes(x = idx, ymin = ci_down, ymax = ci_up, group = seqnames, fill = seqnames), col = NA, alpha = 0.4) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            legend.position = 'none'\n        ) +\n        ggtitle('MNase-seq') + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        facet_grid(seqnames~., scales = 'free'),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = mat_mnase, mapping = aes(x = idx, y = grange, fill = score, alpha = score), raster.dpi = 500) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major.y = element_blank(), \n            panel.grid.minor.y = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle(NULL) + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_fill_gradientn(colours = c('white', '#bcdefd', '#5aa3e7', '#1d6cb6')) + \n        facet_grid(seqnames~., scales = 'free'),\n    group_by(mat_polii, seqnames, idx) %&gt;% \n        summarize(\n            mean = mean(score), \n            se = sd(score, na.rm=TRUE)/sqrt(dplyr::n()),\n            Q = stats::qt(0.950, dplyr::n()-1, lower.tail = FALSE),\n            ci_up = mean + Q*se, \n            ci_down = mean - Q*se\n        ) %&gt;% \n        mutate(\n            mean = slider::slide_dbl(mean, base::mean, .before = 100, .after = 100),\n            ci_up = slider::slide_dbl(ci_up, base::mean, .before = 100, .after = 100),\n            ci_down = slider::slide_dbl(ci_down, base::mean, .before = 100, .after = 100)\n        ) %&gt;%\n        ggplot() + \n        geom_line(mapping = aes(x = idx, y = mean, group = seqnames, col = seqnames)) +\n        geom_ribbon(mapping = aes(x = idx, ymin = ci_down, ymax = ci_up, group = seqnames, fill = seqnames), col = NA, alpha = 0.4) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            legend.position = 'none'\n        ) +\n        ggtitle('PolII ChIP-seq') + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        facet_grid(seqnames~., scales = 'free'),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = mat_polii, mapping = aes(x = idx, y = grange, fill = score, alpha = score), raster.dpi = 500) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major.y = element_blank(), \n            panel.grid.minor.y = element_blank(), \n            legend.position = 'none'\n        ) +\n        ggtitle(NULL) + \n        labs(y = '') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_fill_gradientn(colours = c('white', '#d9ffe1', '#47da67', '#067e2a')) + \n        facet_grid(seqnames~., scales = 'free'),\n    nrow = 2, align = 'hv', axis = 'tblr'\n)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Code for generating Figure 1 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "03.Analysis-Figure-02.html",
    "href": "03.Analysis-Figure-02.html",
    "title": "4  Code for generating Figure 2 & Extended Data figures",
    "section": "",
    "text": "4.1 Importing libraries\nlibrary(purrr)\nlibrary(GenomicRanges)\nlibrary(GenomeInfoDb)\nlibrary(Biostrings)\nlibrary(plyranges)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Code for generating Figure 2 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "03.Analysis-Figure-02.html#figure-2",
    "href": "03.Analysis-Figure-02.html#figure-2",
    "title": "4  Code for generating Figure 2 & Extended Data figures",
    "section": "4.2 Figure 2",
    "text": "4.2 Figure 2\n\n4.2.1 Panel 2a-c\n\ntracks &lt;- list(\n    pneumo_mnase_exp = import('data/Julien/_alex/preds_v1/labels_pneu_nuc.bw', as = 'Rle'), \n    pneumo_mnase_pred = import('data/Julien/_alex/preds_v1/preds_model_myco_nuc_2_on_S288c_Mpneumo.bw', as = 'Rle'), \n    pneumo_scc1_exp = import('data/Julien/_alex/preds_v2/labels_pneu_coh_ratio.bw', as = 'Rle'), \n    pneumo_scc1_pred = import('data/Julien/_alex/preds_v2/preds_model_myco_coh_14_on_S288c_Mpneumo.bw', as = 'Rle'), \n    pneumo_pol2_exp = import('data/Julien/_alex/preds_v2/labels_pneu_pol_ratio.bw', as = 'Rle'), \n    pneumo_pol2_pred = import('data/Julien/_alex/preds_v3/preds_mid_model_myco_pol_17_on_S288c_Mpneumo.bw', as = 'Rle'), \n\n    myco_mnase_exp = import('data/Julien/_alex/preds_v1/labels_myco_nuc.bw', as = 'Rle'), \n    myco_mnase_pred = import('data/Julien/_alex/preds_v1/preds_model_myco_nuc_2_on_W303_Mmmyco.bw', as = 'Rle'), \n    myco_scc1_exp = import('data/Julien/_alex/preds_v2/labels_myco_coh_ratio.bw', as = 'Rle'), \n    myco_scc1_pred = import('data/Julien/_alex/preds_v2/preds_model_myco_coh_14_on_W303_Mmmyco.bw', as = 'Rle'), \n    myco_pol2_exp = import('data/Julien/_alex/preds_v2/labels_myco_pol_ratio.bw', as = 'Rle'), \n    myco_pol2_pred = import('data/Julien/_alex/preds_v3/preds_mid_model_myco_pol_17_on_W303_Mmmyco.bw', as = 'Rle') \n)\n\ngrs &lt;- c(\n    pneumo_mnase_XVI = GRanges('XVI:709000-711000'),\n    pneumo_mnase_pneumo = GRanges('Mpneumo:53800-55800'),\n    pneumo_scc1_XVI = GRanges('XVI:469000-509000'),\n    pneumo_scc1_pneumo = GRanges('Mpneumo:330000-370000'),\n    pneumo_pol2_XVI = GRanges('XVI:395000-470000'),\n    pneumo_pol2_pneumo = GRanges('Mpneumo:730000-805000'),\n\n    myco_mnase_XVI = GRanges('chrXVI:709000-711000'),\n    myco_mnase_myco = GRanges('Mmmyco:574000-576000'),\n    myco_scc1_XVI = GRanges('chrXVI:469000-509000'),\n    myco_scc1_myco = GRanges('Mmmyco:475000-515000'),\n    myco_pol2_XVI = GRanges('chrXVI:395000-470000'),\n    myco_pol2_myco = GRanges('Mmmyco:50000-125000')\n)\n\np &lt;- cowplot::plot_grid(\n    \n    ## -- Pneumo\n    cowplot::plot_grid(\n\n        # - MNase, Yeast + pneumo\n        cowplot::plot_grid(\n            tibble(\n                coord = seq(start(grs[['pneumo_mnase_XVI']]), end(grs[['pneumo_mnase_XVI']]), 10), \n                score = mean(tracks[['pneumo_mnase_exp']][tile_ranges(grs[['pneumo_mnase_XVI']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#767A7B') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"pneumo_mnase_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_mnase_XVI']]), end(grs[['pneumo_mnase_XVI']]), 10), \n                score = mean(tracks[['pneumo_mnase_pred']][tile_ranges(grs[['pneumo_mnase_XVI']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"pneumo_mnase_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_mnase_pneumo']]), end(grs[['pneumo_mnase_pneumo']]), 10), \n                score = mean(tracks[['pneumo_mnase_exp']][tile_ranges(grs[['pneumo_mnase_pneumo']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#9F1D61') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"pneumo_mnase_pneumo\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_mnase_pneumo']]), end(grs[['pneumo_mnase_pneumo']]), 10), \n                score = mean(tracks[['pneumo_mnase_pred']][tile_ranges(grs[['pneumo_mnase_pneumo']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"pneumo_mnase_pneumo\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            nrow = 2, byrow = FALSE\n        ),\n\n        # - Scc1, Yeast + pneumo\n        cowplot::plot_grid(\n            tibble(\n                coord = seq(start(grs[['pneumo_scc1_XVI']]), end(grs[['pneumo_scc1_XVI']]), 500), \n                score = mean(tracks[['pneumo_scc1_exp']][tile_ranges(grs[['pneumo_scc1_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#767A7B') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"pneumo_scc1_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_scc1_XVI']]), end(grs[['pneumo_scc1_XVI']]), 500), \n                score = mean(tracks[['pneumo_scc1_pred']][tile_ranges(grs[['pneumo_scc1_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"pneumo_scc1_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_scc1_pneumo']]), end(grs[['pneumo_scc1_pneumo']]), 500), \n                score = mean(tracks[['pneumo_scc1_exp']][tile_ranges(grs[['pneumo_scc1_pneumo']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#9F1D61') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"pneumo_scc1_pneumo\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_scc1_pneumo']]), end(grs[['pneumo_scc1_pneumo']]), 500), \n                score = mean(tracks[['pneumo_scc1_pred']][tile_ranges(grs[['pneumo_scc1_pneumo']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"pneumo_scc1_pneumo\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n                nrow = 2, byrow = FALSE\n        ),\n\n        # - Pol2, Yeast + pneumo\n        cowplot::plot_grid(\n            tibble(\n                coord = seq(start(grs[['pneumo_pol2_XVI']]), end(grs[['pneumo_pol2_XVI']]), 500), \n                score = mean(tracks[['pneumo_pol2_exp']][tile_ranges(grs[['pneumo_pol2_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#767A7B') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"pneumo_pol2_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_pol2_XVI']]), end(grs[['pneumo_pol2_XVI']]), 500), \n                score = mean(tracks[['pneumo_pol2_pred']][tile_ranges(grs[['pneumo_pol2_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"pneumo_pol2_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_pol2_pneumo']]), end(grs[['pneumo_pol2_pneumo']]), 500), \n                score = mean(tracks[['pneumo_pol2_exp']][tile_ranges(grs[['pneumo_pol2_pneumo']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#9F1D61') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"pneumo_pol2_pneumo\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['pneumo_pol2_pneumo']]), end(grs[['pneumo_pol2_pneumo']]), 500), \n                score = mean(tracks[['pneumo_pol2_pred']][tile_ranges(grs[['pneumo_pol2_pneumo']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"pneumo_pol2_pneumo\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n                nrow = 2, byrow = FALSE\n        ),\n        ncol = 1\n    ), \n\n    ## -- Myco\n    cowplot::plot_grid(\n\n        # - MNase, Yeast + myco\n        cowplot::plot_grid(\n            tibble(\n                coord = seq(start(grs[['myco_mnase_XVI']]), end(grs[['myco_mnase_XVI']]), 10), \n                score = mean(tracks[['myco_mnase_exp']][tile_ranges(grs[['myco_mnase_XVI']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#767A7B') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"myco_mnase_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_mnase_XVI']]), end(grs[['myco_mnase_XVI']]), 10), \n                score = mean(tracks[['myco_mnase_pred']][tile_ranges(grs[['myco_mnase_XVI']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"myco_mnase_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_mnase_myco']]), end(grs[['myco_mnase_myco']]), 10), \n                score = mean(tracks[['myco_mnase_exp']][tile_ranges(grs[['myco_mnase_myco']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#9F1D61') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"myco_mnase_myco\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_mnase_myco']]), end(grs[['myco_mnase_myco']]), 10), \n                score = mean(tracks[['myco_mnase_pred']][tile_ranges(grs[['myco_mnase_myco']], 10)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('mnase @ {as.character(grs[[\"myco_mnase_myco\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            nrow = 2, byrow = FALSE\n        ),\n\n        # - Scc1, Yeast + myco\n        cowplot::plot_grid(\n            tibble(\n                coord = seq(start(grs[['myco_scc1_XVI']]), end(grs[['myco_scc1_XVI']]), 500), \n                score = mean(tracks[['myco_scc1_exp']][tile_ranges(grs[['myco_scc1_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#767A7B') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"myco_scc1_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_scc1_XVI']]), end(grs[['myco_scc1_XVI']]), 500), \n                score = mean(tracks[['myco_scc1_pred']][tile_ranges(grs[['myco_scc1_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"myco_scc1_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_scc1_myco']]), end(grs[['myco_scc1_myco']]), 500), \n                score = mean(tracks[['myco_scc1_exp']][tile_ranges(grs[['myco_scc1_myco']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#9F1D61') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"myco_scc1_myco\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_scc1_myco']]), end(grs[['myco_scc1_myco']]), 500), \n                score = mean(tracks[['myco_scc1_pred']][tile_ranges(grs[['myco_scc1_myco']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('scc1 @ {as.character(grs[[\"myco_scc1_myco\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n                nrow = 2, byrow = FALSE\n        ),\n\n        # - Pol2, Yeast + myco\n        cowplot::plot_grid(\n            tibble(\n                coord = seq(start(grs[['myco_pol2_XVI']]), end(grs[['myco_pol2_XVI']]), 500), \n                score = mean(tracks[['myco_pol2_exp']][tile_ranges(grs[['myco_pol2_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#767A7B') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"myco_pol2_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_pol2_XVI']]), end(grs[['myco_pol2_XVI']]), 500), \n                score = mean(tracks[['myco_pol2_pred']][tile_ranges(grs[['myco_pol2_XVI']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"myco_pol2_XVI\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_pol2_myco']]), end(grs[['myco_pol2_myco']]), 500), \n                score = mean(tracks[['myco_pol2_exp']][tile_ranges(grs[['myco_pol2_myco']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#9F1D61') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"myco_pol2_myco\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n            tibble(\n                coord = seq(start(grs[['myco_pol2_myco']]), end(grs[['myco_pol2_myco']]), 500), \n                score = mean(tracks[['myco_pol2_pred']][tile_ranges(grs[['myco_pol2_myco']], 500)])\n            ) |&gt;\n                ggplot(aes(x = coord, y = score)) + \n                geom_area(col = NA, fill = '#0e62ff') +\n                periodicDNA::theme_ggplot2(grid = FALSE) + \n                ggtitle(glue::glue('pol2 @ {as.character(grs[[\"myco_pol2_myco\"]])}')) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 1)) + \n                labs(x = NULL), \n                nrow = 2, byrow = FALSE\n        ),\n        ncol = 1\n    ), \n\n    ncol = 2\n)\n\n\n\n4.2.2 Panel 2e, Panel S3d\n\ndinuc_overrep &lt;- function(seqs) {\n    obs_nuc &lt;- Biostrings::oligonucleotideFrequency(seqs, width = 1) |&gt; colSums()\n    obs_dinuc &lt;- Biostrings::oligonucleotideFrequency(seqs, width = 2) |&gt; colSums()\n    F_obs_nuc &lt;- obs_nuc / sum(obs_nuc) \n    F_obs_dinuc &lt;- obs_dinuc / sum(obs_dinuc) \n    pstars &lt;- map_dfr(names(F_obs_dinuc), function(dinuc) {\n        dinuc_revcomp &lt;- as.character(reverseComplement(DNAString(dinuc)))\n        nuc1 &lt;- substr(dinuc, 1, 1)\n        nuc2 &lt;- substr(dinuc, 2, 2)\n        nuc1_revcomp &lt;- as.character(reverseComplement(DNAString(nuc1)))\n        nuc2_revcomp &lt;- as.character(reverseComplement(DNAString(nuc2)))\n        s = 2 * ( F_obs_dinuc[dinuc] + F_obs_dinuc[dinuc_revcomp] ) / ( (F_obs_nuc[nuc1] + F_obs_nuc[nuc1_revcomp]) * (F_obs_nuc[nuc2] + F_obs_nuc[nuc2_revcomp]) )\n        tibble(\n            dinuc = dinuc, \n            pstar = s\n        )\n    })\n    pstars\n}\nbg &lt;- rbind(pstars_myco, pstars_pneumo)\nseq &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\ngr &lt;- GRanges(names(rles_exp), IRanges(start = 1, width = lengths(rles_exp))) |&gt; tile_ranges(width = 100)\ngr$seq &lt;- c(myco_seq, pneumo_seq)[gr]\ngr$GC &lt;- c(myco_seq, pneumo_seq)[gr] |&gt; letterFrequency(letters = 'GC') |&gt; as_tibble() |&gt; pull('G|C')\ngr$mnase_exp &lt;- binnedAverage(gr, numvar = c(tracks[['myco_mnase_exp']], tracks[['pneumo_mnase_exp']])[c('Mmmyco', 'Mpneumo', 'chrXVI')], varname = 'score')$score\ngr$mnase_pred &lt;- binnedAverage(gr, numvar = c(tracks[['myco_mnase_pred']], tracks[['pneumo_mnase_pred']])[c('Mmmyco', 'Mpneumo', 'chrXVI')], varname = 'score')$score\ngr$scc1_exp &lt;- binnedAverage(gr, numvar = c(tracks[['myco_scc1_exp']], tracks[['pneumo_scc1_exp']])[c('Mmmyco', 'Mpneumo', 'chrXVI')], varname = 'score')$score\ngr$scc1_pred &lt;- binnedAverage(gr, numvar = c(tracks[['myco_scc1_pred']], tracks[['pneumo_scc1_pred']])[c('Mmmyco', 'Mpneumo', 'chrXVI')], varname = 'score')$score\ngr$pol2_exp &lt;- binnedAverage(gr, numvar = c(tracks[['myco_pol2_exp']], tracks[['pneumo_pol2_exp']])[c('Mmmyco', 'Mpneumo', 'chrXVI')], varname = 'score')$score\ngr$pol2_pred &lt;- binnedAverage(gr, numvar = c(tracks[['myco_pol2_pred']], tracks[['pneumo_pol2_pred']])[c('Mmmyco', 'Mpneumo', 'chrXVI')], varname = 'score')$score\ndf_pstars &lt;- map_dfr(c('mnase', 'scc1', 'pol2'), function(assay) {\n    map_dfr(c('exp', 'pred'), function(type) {\n        map_dfr(c('Mmmyco', 'Mpneumo', 'chrXVI'), function(chr) {\n            subgr &lt;- gr[seqnames(gr) == chr, ]\n            vals &lt;- mcols(subgr)[, paste(assay, type, sep = '_')]\n            q &lt;- quantile(vals, 0.90)\n            subgr &lt;- subgr[vals &gt;= q]\n            dinuc_overrep(subgr$seq) |&gt; mutate(\n                chr = chr, assay = assay, type = type\n            )\n        })\n    })\n}) |&gt; \n    separate(dinuc, into = c('x', 'y'), remove = FALSE, sep = c(1, 2)) |&gt; \n    left_join(bg, by = join_by(dinuc, chr)) |&gt; \n    mutate(ratio = pstar.x / pstar.y)\np &lt;- df_pstars |&gt; \n    ggplot(aes(x = x, y, fill = log2(ratio))) + \n    geom_tile() + \n    scale_fill_distiller(palette = 'RdBu', direction = -1, limits = c(log2(1 / 1.15), log2(1 * 1.15)), oob = scales::oob_squish) + \n    facet_grid(assay + chr ~ type) + \n    coord_fixed() + \n    theme(panel.background = element_blank(), panel.grid = element_blank() )",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Code for generating Figure 2 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "03.Analysis-Figure-02.html#figure-s3",
    "href": "03.Analysis-Figure-02.html#figure-s3",
    "title": "4  Code for generating Figure 2 & Extended Data figures",
    "section": "4.3 Figure S3",
    "text": "4.3 Figure S3\n\n4.3.1 Panel S3c\n\npneumo_mnase_pred &lt;- RleList(lapply(tracks[[\"pneumo_mnase_pred\"]], function(x) { Rle(slider::slide_dbl(as.vector(x), \\(.x) mean(.x, na.rm = TRUE), .before = 5, .after = 5)) }))\nmyco_mnase_pred &lt;- RleList(lapply(tracks[[\"myco_mnase_pred\"]], function(x) { Rle(slider::slide_dbl(as.vector(x), \\(.x) mean(.x, na.rm = TRUE), .before = 5, .after = 5)) }))\ndf &lt;- rbind(\n    imap_dfr(pneumo_mnase_pred, ~ {\n        .acf &lt;- acf(as.vector(.x), lag.max = 1000, plot = FALSE) \n        tibble(sample = 'pneumo', seqnames = .y, lag = .acf$lag[, , 1], acf = .acf$acf[, , 1])\n    }), \n    imap_dfr(myco_mnase_pred, ~ {\n        .acf &lt;- acf(as.vector(.x), lag.max = 1000, plot = FALSE) \n        tibble(sample = 'myco', seqnames = .y, lag = .acf$lag[, , 1], acf = .acf$acf[, , 1])\n    })\n)\ndf &lt;- group_by(df, sample, seqnames) |&gt; mutate(acf_smooth = slider::slide_dbl(acf, mean, .before = 5, .after = 5))\ndf &lt;- filter(df, !grepl(\"_rev\", seqnames), seqnames != 'Mito')\ndf &lt;- mutate(df, col = case_when(\n    seqnames %in% c('XV', 'chrXV') ~ \"XV\",\n    seqnames %in% c('XVI','chrXVI') ~ \"XVI\",\n    seqnames %in% c('Mmmyco') ~ \"Mmmyco\",\n    seqnames %in% c('Mpneumo') ~ \"Mpneumo\", \n    TRUE ~ 'training'\n)) |&gt; mutate(col = factor(col, c('training', \"XV\", \"XVI\", \"Mmmyco\", \"Mpneumo\")))\np &lt;- ggplot(df, aes(x = lag, y = acf, group = seqnames, col = col)) + \n    geom_line() + \n    labs(col = \"Bact. chr.\")+\n    xlim(c(0, 1000)) + \n    geom_vline(xintercept = c(169, 337), linetype = 'solid') + \n    geom_vline(xintercept = c(177, 345), linetype = 'dashed') + \n    facet_wrap(~ sample)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Code for generating Figure 2 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "04.Analysis-Figure-03.html",
    "href": "04.Analysis-Figure-03.html",
    "title": "5  Code for generating Figure 3 & Extended Data figures",
    "section": "",
    "text": "5.1 Importing libraries\nlibrary(purrr)\nlibrary(GenomicRanges)\nlibrary(GenomeInfoDb)\nlibrary(Biostrings)\nlibrary(plyranges)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Code for generating Figure 3 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "04.Analysis-Figure-03.html#figure-3",
    "href": "04.Analysis-Figure-03.html#figure-3",
    "title": "5  Code for generating Figure 3 & Extended Data figures",
    "section": "5.2 Figure 3",
    "text": "5.2 Figure 3\n\n5.2.1 Panel 3a\n\nseq_myco &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\ngenome_myco &lt;- GRanges(paste0(names(seq_myco), ':1-', lengths(seq_myco)))\nseqlengths(genome_myco) &lt;- lengths(seq_myco)\ngenes_myco &lt;- import('~/genomes/W303_Mmmyco/W303_Mmmyco.gff3') |&gt; filter(type == 'gene') |&gt; filter(!seqnames %in% c('Mmmyco', 'Mpneumo'))\nrna_fwd_myco &lt;- {\n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.fwd.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.fwd.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.fwd.CPM.bw', as = 'Rle')}\n} / 3\nrna_rev_myco &lt;- {\n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.rev.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.rev.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.rev.CPM.bw', as = 'Rle')}\n} / 3\nrna_fwd_pneumo &lt;- {\n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.fwd.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.fwd.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.fwd.CPM.bw', as = 'Rle')}\n} / 3\nrna_rev_pneumo &lt;- {\n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.rev.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.rev.CPM.bw', as = 'Rle')} + \n    {import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.rev.CPM.bw', as = 'Rle')}\n} / 3\nGC_skew_myco &lt;- import(\"results/W303_Mmmyco_GC-skew.bw\", as = 'Rle')\nAT_skew_myco &lt;- import(\"results/W303_Mmmyco_AT-skew.bw\", as = 'Rle')\nGC_skew_pneumo &lt;- import(\"results/S288c_Mpneumo_GC-skew.bw\", as = 'Rle')\nAT_skew_pneumo &lt;- import(\"results/S288c_Mpneumo_AT-skew.bw\", as = 'Rle')\nBINWIDTH = 500\n\n## --- Create plots\ngr_XVI &lt;- GRanges(\"chrXVI:1-700000\")\nseqlevels(gr_XVI) &lt;- seqlevels(rna_fwd_myco)\nseqinfo(gr_XVI) &lt;- seqinfo(rna_fwd_myco)\ngr_bact &lt;- GRanges(\"Mmmyco:1-700000\")\nseqlevels(gr_bact) &lt;- seqlevels(rna_fwd_myco)\nseqinfo(gr_bact) &lt;- seqinfo(rna_fwd_myco)\np_myco &lt;- cowplot::plot_grid(\n    # XVI\n    tile_ranges(gr_XVI, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_fwd_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#ee766f') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA fwd @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    tile_ranges(gr_XVI, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_rev_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2eb7be') |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA rev @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    slide_ranges(gr_XVI, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = GC_skew_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC skew @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') + \n        labs(x = NULL), \n    slide_ranges(gr_XVI, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = AT_skew_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('AT skew @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') + \n        labs(x = NULL), \n\n    # Myco\n    tile_ranges(gr_bact, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_fwd_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#ee766f') |&gt; ggrastr::rasterize(dpi = 1000)+\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA fwd @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    tile_ranges(gr_bact, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_rev_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2eb7be') |&gt; ggrastr::rasterize(dpi = 1000)+\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA rev @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    slide_ranges(gr_bact, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = GC_skew_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC skew @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') +\n        labs(x = NULL), \n    slide_ranges(gr_bact, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = AT_skew_myco, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('AT skew @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') +\n        labs(x = NULL), \n\n    ncol = 2, byrow = FALSE\n)\n\ngr_XVI &lt;- GRanges(\"XVI:1-700000\")\nseqlevels(gr_XVI) &lt;- seqlevels(rna_fwd_pneumo)\nseqinfo(gr_XVI) &lt;- seqinfo(rna_fwd_pneumo)\ngr_bact &lt;- GRanges(\"Mpneumo:1-700000\")\nseqlevels(gr_bact) &lt;- seqlevels(rna_fwd_pneumo)\nseqinfo(gr_bact) &lt;- seqinfo(rna_fwd_pneumo)\np_pneumo &lt;- cowplot::plot_grid(\n    # XVI\n    tile_ranges(gr_XVI, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_fwd_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#ee766f') |&gt; ggrastr::rasterize(dpi = 1000)+ \n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA fwd @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    tile_ranges(gr_XVI, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_rev_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2eb7be') |&gt; ggrastr::rasterize(dpi = 1000)+ \n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA rev @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    slide_ranges(gr_XVI, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = GC_skew_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC skew @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') + \n        labs(x = NULL), \n    slide_ranges(gr_XVI, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = AT_skew_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('AT skew @ {as.character(gr_XVI)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') + \n        labs(x = NULL), \n\n    # Myco\n    tile_ranges(gr_bact, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_fwd_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#ee766f') |&gt; ggrastr::rasterize(dpi = 1000)+ \n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA fwd @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    tile_ranges(gr_bact, width = BINWIDTH) |&gt; \n        binnedAverage(bins = _, numvar = rna_rev_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#2eb7be') |&gt; ggrastr::rasterize(dpi = 1000)+ \n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('RNA rev @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(0, 150)) + \n        labs(x = NULL), \n    slide_ranges(gr_bact, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = GC_skew_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('GC skew @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') +\n        labs(x = NULL), \n    slide_ranges(gr_bact, width = 3000, step = 50) |&gt; \n        binnedAverage(bins = _, numvar = AT_skew_pneumo, varname = 'score') |&gt; \n        as_tibble() |&gt;\n        mutate(coord = start + (end-start)/2, score = score) |&gt;\n        ggplot(aes(x = coord, y = score)) + \n        geom_line() |&gt; ggrastr::rasterize(dpi = 1000) +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(glue::glue('AT skew @ {as.character(gr_bact)}')) + \n        coord_cartesian(expand = FALSE, ylim = c(-3, 3)) + \n        geom_hline(yintercept = 0, colour = 'red', linetype = 'dashed') +\n        labs(x = NULL), \n\n    ncol = 2, byrow = FALSE\n)\n\n\n\n5.2.2 Panel 3b\n\n## --- Genes\ngenes &lt;- list(\n    'genes_S288c' = rtracklayer::import('~/genomes/S288c/S288c.gtf') %&gt;% filter(type == 'gene', gene_biotype == 'protein_coding') %&gt;% sort() %&gt;% mutate(class = 'genebody'),\n    'genes_W303_Mmmyco' = rtracklayer::import('~/genomes/W303_Mmmyco/W303_Mmmyco.gff3') %&gt;% filter(type == 'gene') %&gt;% sort() %&gt;% mutate(class = 'genebody'),\n    'genes_S288c_Mpneumo' = rtracklayer::import('~/genomes/S288c_Mpneumo/S288c_Mpneumo.gtf') %&gt;% filter(type == 'gene', gene_biotype == 'protein_coding') %&gt;% sort() %&gt;% mutate(class = 'genebody')\n)\n\n## --- Tracks\ntracks &lt;- list(\n    # ----------- WT \n    'MNase_WT' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/MNase/tracks/SRR3193263/SRR3193263^mapped_S288c^filtered^130-200^BADI46.130-200.CPM.bw', as = 'Rle'), \n    'PolII_WT' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH244/CH244^mapped_S288c^CIJXLY.vs-CH246.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH245/CH245^mapped_S288c^3RQ3EM.vs-CH247.bw', as = 'Rle') ) / 2,\n    'Scc1_WT' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH224/CH224^unmapped_CBS138^mapped_S288c^YMT7BP.vs-CH225.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/CH226/CH226^unmapped_CBS138^mapped_S288c^MTY44Z.vs-CH227.bw', as = 'Rle') ) / 2, \n    'H3_WT' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/SRR1517820/SRR1517820^mapped_S288c^VG9IL4.CPM.bw', as = 'Rle'),\n    'H2A_WT' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/tracks/SRR1517818/SRR1517818^mapped_S288c^FFF5YV.CPM.bw', as = 'Rle'),\n    'RNA_WT' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045244/SRR2045244^mapped_S288c^KEYTQL.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045245/SRR2045245^mapped_S288c^AF9M8B.unstranded.CPM.bw', as = 'Rle')\n    ) / 2, \n    'fwdRNA_WT' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045244/SRR2045244^mapped_S288c^KEYTQL.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045245/SRR2045245^mapped_S288c^AF9M8B.fwd.CPM.bw', as = 'Rle')\n    ) / 2, \n    'revRNA_WT' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045244/SRR2045244^mapped_S288c^KEYTQL.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/RNA/tracks/SRR2045245/SRR2045245^mapped_S288c^AF9M8B.rev.CPM.bw', as = 'Rle')\n    ) / 2, \n    'GC_WT' = lengths(Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/S288c/S288c.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')),\n\n    # ----------- W303 + Mmmyco \n    'MNase_W303_Mmmyco' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/MNase/tracks/CH265/CH265^mapped_W303_Mmmyco^filtered^130-200^ZXAMER.130-200.CPM.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/MNase/tracks/CH266/CH266^mapped_W303_Mmmyco^filtered^130-200^ZG3T8W.130-200.CPM.bw', as = 'Rle') ) / 2,\n    'PolII_W303_Mmmyco' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH51/CH51^mapped_W303_Mmmyco^Y9CC89.vs-CH54.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH102/CH102^mapped_W303_Mmmyco^2FVQO3.vs-CH105.bw', as = 'Rle') ) / 2,\n    'Scc1_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH35/CH35^unmapped_CBS138^mapped_W303_Mmmyco^DTAKMF.vs-CH38.bw', as = 'Rle'), \n    'H3_W303_Mmmyco' = (\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH406/CH406^mapped_W303_Mmmyco^KDTEGO.vs-CH408.bw', as = 'Rle') + \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH407/CH407^mapped_W303_Mmmyco^8S1VTX.vs-CH409.bw', as = 'Rle')\n    ) / 2,\n    'H2A_W303_Mmmyco' = (\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH404/CH404^mapped_W303_Mmmyco^XOL0HV.vs-CH408.bw', as = 'Rle') + \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH405/CH405^mapped_W303_Mmmyco^CXNJIS.vs-CH409.bw', as = 'Rle')\n    ) / 2,\n    'Sir3_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/tracks/CH380/CH380^mapped_W303_Mmmyco^D51AZ0.CPM.bw', as = 'Rle'), \n    'RNA_W303_Mmmyco' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.unstranded.CPM.bw', as = 'Rle')\n    ) / 3, \n    'fwdRNA_W303_Mmmyco' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.fwd.CPM.bw', as = 'Rle')\n    ) / 3, \n    'revRNA_W303_Mmmyco' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB4/AB4^mapped_W303_Mmmyco^LWYOI3.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB5/AB5^mapped_W303_Mmmyco^SB37WP.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/RNA/tracks/AB6/AB6^mapped_W303_Mmmyco^0L0CQ5.rev.CPM.bw', as = 'Rle')\n    ) / 3, \n    'GC_W303_Mmmyco' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')),\n\n    # ----------- S288c + Mmpneumo  \n    'MNase_S288c_Mpneumo' = ( rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/MNase/tracks/CH205/CH205^mapped_S288c_Mpneumo^filtered^130-200^X8C2LM.130-200.CPM.bw', as = 'Rle') + rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/MNase/tracks/CH206/CH206^mapped_S288c_Mpneumo^filtered^130-200^HS5L1A.130-200.CPM.bw', as = 'Rle') ) / 2,\n    'PolII_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH154/CH154^mapped_S288c_Mpneumo^598366.vs-CH155.bw', as = 'Rle'),\n    'Scc1_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH219/CH219^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.vs-CH220.bw', as = 'Rle'), \n    'H3_S288c_Mpneumo' = (\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH157/CH157^mapped_S288c_Mpneumo^MGHI86.vs-CH159.bw', as = 'Rle') + \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH367/CH367^mapped_S288c_Mpneumo^PCPOLZ.vs-CH371.bw', as = 'Rle')\n    ) / 2,\n    'H2A_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH366/CH366^mapped_S288c_Mpneumo^S0ZHT4.vs-CH370.bw', as = 'Rle'), \n    'RNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.unstranded.CPM.bw', as = 'Rle')\n    ) / 3, \n    'fwdRNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.fwd.CPM.bw', as = 'Rle')\n    ) / 3, \n    'revRNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.rev.CPM.bw', as = 'Rle')\n    ) / 3, \n    'GC_S288c_Mpneumo' = lengths(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')), \n    \n    # ----------- W303_chrXVI-Mmmyco_inv870kb\n    'PolII_W303_chrXVI-Mmmyco_inv870kb' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/ChIP/tracks/LM80/LM80^mapped_W303_chrXVI-Mmmyco_inv870kb^5BSLFH.vs-LM81.bw', as = 'Rle'),\n    'Scc1_W303_chrXVI-Mmmyco_inv870kb' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/ChIP/tracks/LM65/LM65^unmapped_CBS138^mapped_W303_chrXVI-Mmmyco_inv870kb^WUXR6F.vs-LM64.bw', as = 'Rle'), \n    'GC_W303_chrXVI-Mmmyco_inv870kb' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', '')), \n\n    # ----------- W303_chrXVI-Mmmyco_dbl-inv\n    'PolII_W303_chrXVI-Mmmyco_dbl-inv' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/ChIP/tracks/LM82/LM82^mapped_W303_chrXVI-Mmmyco_dbl-inv^HBN3NY.vs-LM83.bw', as = 'Rle'),\n    'Scc1_W303_chrXVI-Mmmyco_dbl-inv' = rtracklayer::import('~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/ChIP/tracks/LM67/LM67^unmapped_CBS138^mapped_W303_chrXVI-Mmmyco_dbl-inv^TXX0ZC.vs-LM66.bw', as = 'Rle'), \n    'GC_W303_chrXVI-Mmmyco_dbl-inv' = lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa'))) %&gt;% \n        tileGenome(tilewidth = 1) %&gt;% \n        unlist() %&gt;% \n        mutate(seq = Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')[.]) %&gt;% \n        mutate(GC = Biostrings::letterFrequency(seq, \"GC\", as.prob = TRUE)) %&gt;% \n        group_by(seqnames) %&gt;% \n        mutate(GC_ave = slider::slide_mean(GC.G.C, before = 50/2, after = 50/2)) %&gt;% \n        coverage(weight = 'GC_ave') %&gt;% \n        setNames(str_replace(names(.), ' .*', ''))\n\n)\n## --- Peaks\npeaks &lt;- list(\n    'Scc1_S288c' = c(\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/peaks/CH224/CH224_vs-CH225_genome-S288c_YMT7BP_peaks.narrowPeak') %&gt;% mutate(rep = 'rep1'), \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/peaks/CH226/CH226_vs-CH227_genome-S288c_MTY44Z_peaks.narrowPeak') %&gt;% mutate(rep = 'rep2')\n    ) %&gt;% filter(qValue &gt; 10) %&gt;% reduce_ranges(), \n    'Scc1_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/peaks/CH35/CH35_vs-CH38_genome-W303_Mmmyco_DTAKMF_peaks.narrowPeak') %&gt;% filter(qValue &gt; 10) %&gt;% reduce_ranges(), \n    'Scc1_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_peaks.narrowPeak') %&gt;% filter(qValue &gt; 10) \n)\n## --- Summits\nsummits &lt;- list(\n    'Scc1_S288c' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/WT/ChIP/peaks/CH224/CH224_vs-CH225_genome-S288c_YMT7BP_summits.bed') %&gt;% subsetByOverlaps(peaks[['Scc1_S288c']]),\n    'Scc1_W303_Mmmyco' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/ChIP/peaks/CH35/CH35_vs-CH38_genome-W303_Mmmyco_DTAKMF_summits.bed') %&gt;% subsetByOverlaps(peaks[['Scc1_W303_Mmmyco']]),\n    'Scc1_S288c_Mpneumo' = rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_summits.bed') %&gt;% subsetByOverlaps(peaks[['Scc1_S288c_Mpneumo']])\n)\n\n\n\n\nbin = 100\nwidth = 60000\np &lt;- cowplot::plot_grid(\n    tibble(\n        coord = 35000:(35000 + width - 1), \n        score_pos = as.vector(tracks[['fwdRNA_WT']][['VI']][35000:(35000 + width - 1)]),\n        score_neg = -as.vector(tracks[['revRNA_WT']][['VI']][35000:(35000 + width - 1)])\n    ) %&gt;% \n        group_by(coord = rep(seq(35000, (35000 + width - 1), by = bin), each = bin)) %&gt;% \n        summarize(score_pos = mean(score_pos), score_neg = mean(score_neg)) %&gt;% \n        ggplot() + \n        geom_area(aes(x = coord, y = score_pos), col = NA, fill = '#ee766f') +\n        geom_area(aes(x = coord, y = score_neg), col = NA, fill = '#2eb7be') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle('RNA-seq @ chrVI (S288c)') + \n        coord_cartesian(expand = FALSE, ylim = c(-45, 45)) + \n        labs(x = NULL), \n    genes[['genes_S288c']][genes[['genes_S288c']] %over% GRanges(glue::glue('VI:35000-{(35000 + width - 1)}'))] %&gt;% \n        as_tibble() %&gt;% \n        mutate(\n            xstart = start, xend = end, \n            start = ifelse(strand == '+', xstart, xend), \n            end = ifelse(strand == '+', xend, xstart), \n        ) %&gt;%\n        ggplot(aes(x = start, xend = end, y = 1, yend = 1, col = strand, fill = strand)) + \n        geom_segment() +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(NA) + \n        coord_cartesian(expand = FALSE) + \n        labs(x = NULL), \n   tibble(\n        coord = 35000:(35000 + width - 1), \n        score = as.vector(tracks[['Scc1_WT']][['VI']][35000:(35000 + width - 1)])\n    ) %&gt;% \n        group_by(coord = rep(seq(35000, (35000 + width - 1), by = bin), each = bin)) %&gt;% \n        summarize(score = mean(score)) %&gt;% \n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#c40e0e') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle('Scc1 @ chrVI (S288c)') + \n        coord_cartesian(expand = FALSE, ylim = c(0, 6)) + \n        labs(x = NULL),\n    tibble(\n        coord = 680000:(680000 + width - 1), \n        score_pos = as.vector(tracks[['fwdRNA_W303_Mmmyco']][['Mmmyco']][680000:(680000 + width - 1)]),\n        score_neg = -as.vector(tracks[['revRNA_W303_Mmmyco']][['Mmmyco']][680000:(680000 + width - 1)])\n    ) %&gt;% \n        group_by(coord = rep(seq(680000, (680000 + width - 1), by = bin), each = bin)) %&gt;% \n        summarize(score_pos = mean(score_pos), score_neg = mean(score_neg)) %&gt;% \n        ggplot() + \n        geom_area(aes(x = coord, y = score_pos), col = NA, fill = '#ee766f') +\n        geom_area(aes(x = coord, y = score_neg), col = NA, fill = '#2eb7be') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle('RNA-seq @ chrVI (S288c)') + \n        coord_cartesian(expand = FALSE, ylim = c(-45, 45)) + \n        labs(x = NULL), \n    genes[['genes_W303_Mmmyco']][genes[['genes_W303_Mmmyco']] %over% GRanges(glue::glue('Mmmyco:680000-{(680000 + width - 1)}'))] %&gt;% \n        as_tibble() %&gt;% \n        mutate(\n            xstart = start, xend = end, \n            start = ifelse(strand == '+', xstart, xend), \n            end = ifelse(strand == '+', xend, xstart), \n        ) %&gt;%\n        ggplot(aes(x = start, xend = end, y = 1, yend = 1, col = strand, fill = strand)) + \n        geom_segment() +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(NA) + \n        coord_cartesian(expand = FALSE) + \n        labs(x = NULL), \n    tibble(\n        coord = 680000:(680000 + width - 1), \n        score = as.vector(tracks[['Scc1_W303_Mmmyco']][['Mmmyco']][680000:(680000 + width - 1)])\n    ) %&gt;% \n        group_by(coord = rep(seq(680000, (680000 + width - 1), by = bin), each = bin)) %&gt;% \n        summarize(score = mean(score)) %&gt;% \n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#c40e0e') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle('Scc1 @ chrVI (S288c)') + \n        coord_cartesian(expand = FALSE, ylim = c(0, 6)) + \n        labs(x = NULL),\n    tibble(\n        coord = 150000:(150000 + width - 1), \n        score_pos = as.vector(tracks[['fwdRNA_S288c_Mpneumo']][['Mpneumo']][150000:(150000 + width - 1)]),\n        score_neg = -as.vector(tracks[['revRNA_S288c_Mpneumo']][['Mpneumo']][150000:(150000 + width - 1)])\n    ) %&gt;% \n        group_by(coord = rep(seq(150000, (150000 + width - 1), by = bin), each = bin)) %&gt;% \n        summarize(score_pos = mean(score_pos), score_neg = mean(score_neg)) %&gt;% \n        ggplot() + \n        geom_area(aes(x = coord, y = score_pos), col = NA, fill = '#ee766f') +\n        geom_area(aes(x = coord, y = score_neg), col = NA, fill = '#2eb7be') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle('RNA-seq @ chrVI (S288c)') + \n        coord_cartesian(expand = FALSE, ylim = c(-45, 45)) + \n        labs(x = NULL), \n    genes[['genes_S288c_Mpneumo']][genes[['genes_S288c_Mpneumo']] %over% GRanges(glue::glue('Mpneumo:150000-{(150000 + width - 1)}'))] %&gt;% \n        as_tibble() %&gt;% \n        mutate(\n            xstart = start, xend = end, \n            start = ifelse(strand == '+', xstart, xend), \n            end = ifelse(strand == '+', xend, xstart), \n        ) %&gt;%\n        ggplot(aes(x = start, xend = end, y = 1, yend = 1, col = strand, fill = strand)) + \n        geom_segment() +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle(NA) + \n        coord_cartesian(expand = FALSE) + \n        labs(x = NULL), \n    tibble(\n        coord = 150000:(150000 + width - 1), \n        score = as.vector(tracks[['Scc1_S288c_Mpneumo']][['Mpneumo']][150000:(150000 + width - 1)])\n    ) %&gt;% \n        group_by(coord = rep(seq(150000, (150000 + width - 1), by = bin), each = bin)) %&gt;% \n        summarize(score = mean(score)) %&gt;% \n        ggplot(aes(x = coord, y = score)) + \n        geom_area(col = NA, fill = '#c40e0e') +\n        periodicDNA::theme_ggplot2(grid = FALSE) + \n        ggtitle('Scc1 @ chrVI (S288c)') + \n        coord_cartesian(expand = FALSE, ylim = c(0, 6)) + \n        labs(x = NULL),\n    byrow = FALSE, \n    nrow = 3,\n    align = 'hv', axis = 'tblr'\n)\n\n\n\n5.2.3 Panel 3c\n\ndf &lt;- rbind(\n    tibble(\n        group = 'yeast',\n        gene = genes[['genes_S288c']]$gene_id,\n        strand = as.vector(strand(genes[['genes_S288c']])),\n        width = width(genes[['genes_S288c']]), \n        fwd_score = as.data.frame(tracks[['fwdRNA_WT']][genes[['genes_S288c']]]) |&gt; as_tibble() |&gt; group_by(group, group_name) |&gt; summarize(cov = mean(value)) |&gt; pull(cov),\n        rev_score = as.data.frame(tracks[['revRNA_WT']][genes[['genes_S288c']]]) |&gt; as_tibble() |&gt; group_by(group, group_name) |&gt; summarize(cov = mean(value)) |&gt; pull(cov)\n    ), \n    tibble(\n        group = 'pneumo',\n        gene = genes[['genes_S288c_Mpneumo']][seqnames(genes[['genes_S288c_Mpneumo']]) == 'Mpneumo']$gene_id,\n        strand = as.vector(strand(genes[['genes_S288c_Mpneumo']][seqnames(genes[['genes_S288c_Mpneumo']]) == 'Mpneumo'])),\n        width = width(genes[['genes_S288c_Mpneumo']][seqnames(genes[['genes_S288c_Mpneumo']]) == 'Mpneumo']), \n        fwd_score = as.data.frame(tracks[['fwdRNA_S288c_Mpneumo']][genes[['genes_S288c_Mpneumo']][seqnames(genes[['genes_S288c_Mpneumo']]) == 'Mpneumo']]) |&gt; as_tibble() |&gt; group_by(group, group_name) |&gt; summarize(cov = mean(value)) |&gt; pull(cov),\n        rev_score = as.data.frame(tracks[['revRNA_S288c_Mpneumo']][genes[['genes_S288c_Mpneumo']][seqnames(genes[['genes_S288c_Mpneumo']]) == 'Mpneumo']]) |&gt; as_tibble() |&gt; group_by(group, group_name) |&gt; summarize(cov = mean(value)) |&gt; pull(cov)\n    ), \n    tibble(\n        group = 'myco',\n        gene = genes[['genes_W303_Mmmyco']][seqnames(genes[['genes_W303_Mmmyco']]) == 'Mmmyco']$gene_id,\n        strand = as.vector(strand(genes[['genes_W303_Mmmyco']][seqnames(genes[['genes_W303_Mmmyco']]) == 'Mmmyco'])),\n        width = width(genes[['genes_W303_Mmmyco']][seqnames(genes[['genes_W303_Mmmyco']]) == 'Mmmyco']), \n        fwd_score = as.data.frame(tracks[['fwdRNA_W303_Mmmyco']][genes[['genes_W303_Mmmyco']][seqnames(genes[['genes_W303_Mmmyco']]) == 'Mmmyco']]) |&gt; as_tibble() |&gt; group_by(group, group_name) |&gt; summarize(cov = mean(value)) |&gt; pull(cov),\n        rev_score = as.data.frame(tracks[['revRNA_W303_Mmmyco']][genes[['genes_W303_Mmmyco']][seqnames(genes[['genes_W303_Mmmyco']]) == 'Mmmyco']]) |&gt; as_tibble() |&gt; group_by(group, group_name) |&gt; summarize(cov = mean(value)) |&gt; pull(cov)\n    )\n) |&gt; mutate(sense = ifelse(strand == '+', fwd_score, rev_score)) |&gt; \n    mutate(strand = factor(strand, c('+', '-'))) |&gt;\n    mutate(antisense = ifelse(strand == '+', rev_score, fwd_score)) |&gt; \n    # pivot_longer(c(sense, antisense), names_to = 'orientation', values_to = 'score') |&gt; \n    # mutate(orientation = factor(orientation, c('sense', 'antisense')))\n    pivot_longer(c(fwd_score, rev_score), names_to = 'orientation', values_to = 'score') |&gt; \n    mutate(orientation = factor(orientation, c('fwd_score', 'rev_score'))) |&gt; \n    mutate(group = factor(group, c('yeast', 'pneumo', 'myco'))) \np &lt;- ggplot(df, aes(x = strand, y = score/width*1000, fill = orientation)) + \n    geom_violin(position = position_dodge(0.9), ) + \n    geom_boxplot(position = position_dodge(0.9), width = 0.1, outlier.shape = NA) + \n    facet_grid(~ group) + \n    scale_y_log10() +\n    labs(y = 'Stranded RNA-seq cov. / 1000nt') +\n    annotation_logticks(sides = 'l') + \n    theme_bw()",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Code for generating Figure 3 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "04.Analysis-Figure-03.html#figure-s4",
    "href": "04.Analysis-Figure-03.html#figure-s4",
    "title": "5  Code for generating Figure 3 & Extended Data figures",
    "section": "5.3 Figure S4",
    "text": "5.3 Figure S4\n\n5.3.1 Panel S4a\n\nintergenes &lt;- sapply(genes, function(x) {\n    xx &lt;- sort(x)\n    strand(xx) &lt;- '*'\n    seqlengths(xx) &lt;- group_by(xx, seqnames) %&gt;% mutate(m = max(start)) %&gt;% '$'('m') %&gt;% unique()\n    x2 &lt;- plyranges::complement_ranges(xx)\n    seqlengths(x2) &lt;- NA\n    x2$class &lt;- 'intergenic'\n    x2\n}, simplify = FALSE)\ndf &lt;- rbind(\n    tracks[['RNA_W303_Mmmyco']][c(genes[['genes_W303_Mmmyco']], intergenes[['genes_W303_Mmmyco']])] %&gt;% \n        as.data.frame() %&gt;% \n        mutate(class = factor(as.data.frame(c(genes[['genes_W303_Mmmyco']], intergenes[['genes_W303_Mmmyco']]))$class[.$group], c('genebody', 'intergenic'))) %&gt;%\n        group_by(group_name, class, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        mutate(type = ifelse(group_name == 'Mmmyco', 'Mmmyco', 'Yeast')) %&gt;%\n        mutate(bg = 'W303_Mmmyco') %&gt;%\n        ungroup(),\n    tracks[['RNA_S288c_Mpneumo']][c(genes[['genes_S288c_Mpneumo']], intergenes[['genes_S288c_Mpneumo']])] %&gt;% \n        as.data.frame() %&gt;% \n        mutate(class = factor(c(genes[['genes_S288c_Mpneumo']], intergenes[['genes_S288c_Mpneumo']])$class[.$group], c('genebody', 'intergenic'))) %&gt;%\n        group_by(group_name, class, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        mutate(type = ifelse(group_name == 'Mpneumo', 'Mpneumo', 'Yeast')) %&gt;%\n        mutate(bg = 'S288c_Mpneumo') %&gt;%\n        ungroup() \n) %&gt;% mutate(type = factor(type, c('Yeast', 'S288c_Mpneumo', 'W303_Mmmyco')))\np &lt;- ggplot(df, aes(x = type, y = coverage, fill = class)) + \n    geom_violin(scale = 'width') + \n    geom_boxplot(outlier.shape = NA, col = 'black', width = 0.1) + \n    scale_y_log10() + \n    facet_wrap(~bg)\n\n\n\n5.3.2 Panel S4b\n\np &lt;- cowplot::plot_grid(\n    periodicDNA::plotAggregateCoverage(\n        list('Fwd' = tracks[['fwdRNA_S288c_Mpneumo']], 'Rev' = tracks[['revRNA_S288c_Mpneumo']]), \n        list(\n            'Yeast +' = genes[['genes_S288c_Mpneumo']] %&gt;% filter(strand == '+', seqnames != 'Mpneumo') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\"),\n            'Yeast -' = genes[['genes_S288c_Mpneumo']] %&gt;% filter(strand == '-', seqnames != 'Mpneumo') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n        ),\n        bin = 10, \n        free_scales = TRUE, \n        split_by_track = FALSE\n    ) + labs(x = 'TSS', y = 'RNA-seq cov.') + scale_colour_manual(values = c('#ee766f', '#2eb7be')) + scale_fill_manual(values = c('#ee766f', '#2eb7be')) + coord_cartesian(ylim = c(0, 50)), \n    periodicDNA::plotAggregateCoverage(\n        list('Fwd' = tracks[['fwdRNA_S288c_Mpneumo']], 'Rev' = tracks[['revRNA_S288c_Mpneumo']]), \n        list(\n            'Mpneumo +' = {\n                # genes[['genes_S288c_Mpneumo']] %&gt;% filter(strand == '+', seqnames == 'Mpneumo') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n                gr &lt;- genes[['genes_S288c_Mpneumo']] %&gt;% filter(seqnames == 'Mpneumo') %&gt;% sort(ignore.strand = TRUE)\n                x &lt;- gr %&gt;% mutate(id = 1:n()) %&gt;% as_tibble() %&gt;% select(strand, id) %&gt;% mutate(strand_gene_left = lag(strand), strand_gene_right = lead(strand))\n                xx &lt;- rle(as.vector(x$strand))\n                gr2 &lt;- gr[x %&gt;% mutate(is_first = case_when({strand == '+' & strand_gene_left == '-'} | {strand == '-' & strand_gene_right == '+'} ~ TRUE, TRUE ~ FALSE)) %&gt;% pull(is_first) %&gt;% which(),]\n                gr2[strand(gr2) == '+'] %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n                # gr2\n            },\n            'Mpneumo -' = {\n                # genes[['genes_S288c_Mpneumo']] %&gt;% filter(strand == '-', seqnames == 'Mpneumo') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n                gr &lt;- genes[['genes_S288c_Mpneumo']] %&gt;% filter(seqnames == 'Mpneumo') %&gt;% sort(ignore.strand = TRUE)\n                x &lt;- gr %&gt;% mutate(id = 1:n()) %&gt;% as_tibble() %&gt;% select(strand, id) %&gt;% mutate(strand_gene_left = lag(strand), strand_gene_right = lead(strand))\n                xx &lt;- rle(as.vector(x$strand))\n                gr2 &lt;- gr[x %&gt;% mutate(is_first = case_when({strand == '+' & strand_gene_left == '-'} | {strand == '-' & strand_gene_right == '+'} ~ TRUE, TRUE ~ FALSE)) %&gt;% pull(is_first) %&gt;% which(),]\n                gr2[strand(gr2) == '-'] %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n                # gr2\n            }\n        ),\n        bin = 10, \n        free_scales = TRUE, \n        split_by_track = FALSE\n    ) + labs(x = 'TSS', y = 'RNA-seq cov.') + scale_colour_manual(values = c('#ee766f', '#2eb7be')) + scale_fill_manual(values = c('#ee766f', '#2eb7be')) + coord_cartesian(ylim = c(0, 50)), \n    periodicDNA::plotAggregateCoverage(\n        list('Fwd' = tracks[['fwdRNA_W303_Mmmyco']], 'Rev' = tracks[['revRNA_W303_Mmmyco']]), \n        list(\n            'Mmmyco +' = {\n                # genes[['genes_W303_Mmmyco']] %&gt;% filter(strand == '+', seqnames == 'Mmmyco') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n                gr &lt;- genes[['genes_W303_Mmmyco']] %&gt;% filter(seqnames == 'Mmmyco') %&gt;% sort(ignore.strand = TRUE)\n                x &lt;- gr %&gt;% mutate(id = 1:n()) %&gt;% as_tibble() %&gt;% select(strand, id) %&gt;% mutate(strand_gene_left = lag(strand), strand_gene_right = lead(strand))\n                xx &lt;- rle(as.vector(x$strand))\n                gr2 &lt;- gr[x %&gt;% mutate(is_first = case_when({strand == '+' & strand_gene_left == '-'} | {strand == '-' & strand_gene_right == '+'} ~ TRUE, TRUE ~ FALSE)) %&gt;% pull(is_first) %&gt;% which(),]\n                gr2[strand(gr2) == '+'] %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n            },\n            'Mmmyco -' = {\n                # genes[['genes_W303_Mmmyco']] %&gt;% filter(strand == '-', seqnames == 'Mmmyco') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n                gr &lt;- genes[['genes_W303_Mmmyco']] %&gt;% filter(seqnames == 'Mmmyco') %&gt;% sort(ignore.strand = TRUE)\n                x &lt;- gr %&gt;% mutate(id = 1:n()) %&gt;% as_tibble() %&gt;% select(strand, id) %&gt;% mutate(strand_gene_left = lag(strand), strand_gene_right = lead(strand))\n                xx &lt;- rle(as.vector(x$strand))\n                gr2 &lt;- gr[x %&gt;% mutate(is_first = case_when({strand == '+' & strand_gene_left == '-'} | {strand == '-' & strand_gene_right == '+'} ~ TRUE, TRUE ~ FALSE)) %&gt;% pull(is_first) %&gt;% which(),]\n                gr2[strand(gr2) == '-'] %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(1000) %&gt;% as(\"GRanges\")\n            }\n        ),\n        bin = 10, \n        free_scales = TRUE, \n        split_by_track = FALSE\n    ) + labs(x = 'TSS', y = 'RNA-seq cov.') + scale_colour_manual(values = c('#ee766f', '#2eb7be')) + scale_fill_manual(values = c('#ee766f', '#2eb7be')) + coord_cartesian(ylim = c(0, 50)), \n    ncol = 1\n)\n\n\n\n5.3.3 Panel S4c\n\ngr2 &lt;- {\n    gr &lt;- genes[['genes_S288c_Mpneumo']] %&gt;% filter(seqnames == 'Mpneumo') %&gt;% sort(ignore.strand = TRUE)\n    x &lt;- gr %&gt;% mutate(id = 1:n()) %&gt;% as_tibble() %&gt;% select(strand, id) %&gt;% mutate(strand_gene_left = lag(strand), strand_gene_right = lead(strand))\n    xx &lt;- rle(as.vector(x$strand))\n    gr2 &lt;- gr[x %&gt;% mutate(is_first = case_when({strand == '+' & strand_gene_left == '-'} | {strand == '-' & strand_gene_right == '+'} ~ TRUE, TRUE ~ FALSE)) %&gt;% pull(is_first) %&gt;% which(),]\n    gr2 %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(2000) %&gt;% as(\"GRanges\")\n}\np &lt;- periodicDNA::plotAggregateCoverage(\n    tracks[['PolII_S288c_Mpneumo']], \n    list(\n        'Yeast' = genes[['genes_S288c_Mpneumo']] %&gt;% filter(seqnames != 'Mpneumo') %&gt;% anchor_5p() %&gt;% resize(1) %&gt;% anchor_center() %&gt;% stretch(2000) %&gt;% as(\"GRanges\"),\n        'Mpneumo' = gr2\n    ),\n    bin = 50, \n    free_scales = TRUE, \n    split_by_track = FALSE\n) + labs(x = 'TSS', y = 'PolII cov.', title = 'Yeast') + scale_colour_manual(values = c('#696969', '#a3195b')) + scale_fill_manual(values = c('#696969', '#a3195b'))\n\n\n\n5.3.4 Panel S4d\n\nBINSIZE = 100\nTELO_LENGTH = 3000\ng &lt;- lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() \ng$max_length &lt;- seqlengths(g)[as.vector(seqnames(g))]\ng$type &lt;- ifelse(start(g) &lt; TELO_LENGTH, 'telomere', ifelse(\n    start(g) &gt; g$max_length - TELO_LENGTH, 'telomere', 'arm'\n))\ng$group &lt;- factor(ifelse(seqnames(g) == 'Mmmyco', 'Mmyco', 'Yeast'), c('Yeast', 'Mmyco'))\ndf &lt;- tibble(\n    as.data.frame(g), \n    coverage = mean(tracks[['Sir3_W303_Mmmyco']][g])\n)\np &lt;- ggplot(df, aes(x = group, y = coverage, fill = type)) + \n    geom_violin(position = position_dodge(0.9), scale = 'width') + \n    geom_boxplot(position = position_dodge(0.9), width = 0.1, outlier.shape = NA) + \n    labs(y = 'Sir3 coverage / 100 bp') +\n    scale_y_log10() +\n    annotation_logticks(sides = 'l') + \n    theme_bw() + \n    theme(legend.position = 'bottom')\n\n\n\n5.3.5 Panel S4e\n\nmyco_seq &lt;- Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')\nmyco_genome &lt;- GRanges(paste0(names(myco_seq), ':1-', lengths(myco_seq)))\nseqlengths(myco_genome) &lt;- lengths(myco_seq)\npneumo_seq &lt;- Biostrings::readDNAStringSet('~/genomes/S288c_Mpneumo/S288c_Mpneumo.fa')\nnames(pneumo_seq) &lt;- str_replace(names(pneumo_seq), ' .*', '')\npneumo_genome &lt;- GRanges(paste0(names(pneumo_seq), ':1-', lengths(pneumo_seq)))\nseqlengths(pneumo_genome) &lt;- lengths(pneumo_seq)\ngenes &lt;- list(\n    'genes_W303_Mmmyco' = rtracklayer::import('~/genomes/W303_Mmmyco/W303_Mmmyco.gff3') %&gt;% filter(type == 'gene') %&gt;% sort() %&gt;% mutate(class = 'genebody'),\n    'genes_S288c_Mpneumo' = rtracklayer::import('~/genomes/S288c_Mpneumo/S288c_Mpneumo.gtf') %&gt;% filter(type == 'gene', gene_biotype == 'protein_coding') %&gt;% sort() %&gt;% mutate(class = 'genebody')\n)\n\nBINWIDTH = 200\nSTEP = 10\n## Myco\ngr &lt;- tile_ranges(myco_genome, width = STEP)\ngr$seq &lt;- getSeq(myco_seq, names = gr)\ngr$nG &lt;- letterFrequency(gr$seq, letters = 'G')\ngr$nC &lt;- letterFrequency(gr$seq, letters = 'C')\ngr$nA &lt;- letterFrequency(gr$seq, letters = 'A')\ngr$nT &lt;- letterFrequency(gr$seq, letters = 'T')\ngr$GC &lt;- (gr$nG + gr$nC) / STEP\ngr$GC_skew &lt;- (gr$nG - gr$nC) / (gr$nG + gr$nC)\ngr$AT_skew &lt;- (gr$nA - gr$nT) / (gr$nA + gr$nT)\n\ng &lt;- genes[['genes_W303_Mmmyco']]\ng$GC &lt;- mean(coverage(gr, weight = gr$GC)[g])\ng$AT_skew &lt;- mean(coverage(gr, weight = gr$AT_skew)[g])\ng$GC_skew &lt;- mean(coverage(gr, weight = gr$GC_skew)[g])\ndf &lt;- as_tibble(g) |&gt; \n    select(seqnames, strand, GC, AT_skew, GC_skew) |&gt; \n    pivot_longer(any_of(c('GC', 'AT_skew', 'GC_skew')), names_to = 'base', values_to = 'skew') |&gt; \n    filter(seqnames != 'Mito') |&gt; \n    filter(seqnames %in% c('chrXVI', 'Mmmyco'))\np &lt;- ggplot(df, aes(x = seqnames, y = skew, fill = strand)) + \n    geom_boxplot()+ \n    facet_wrap(~ base, scales = 'free') + \n    labs(fill = 'gene orientation') + \n    ylim(c(-0.6, 0.6))\n\n## Pneumo\ngr &lt;- tile_ranges(pneumo_genome, width = STEP)\ngr$seq &lt;- getSeq(pneumo_seq, names = gr)\ngr$nG &lt;- letterFrequency(gr$seq, letters = 'G')\ngr$nC &lt;- letterFrequency(gr$seq, letters = 'C')\ngr$nA &lt;- letterFrequency(gr$seq, letters = 'A')\ngr$nT &lt;- letterFrequency(gr$seq, letters = 'T')\ngr$GC &lt;- (gr$nG + gr$nC) / STEP\ngr$GC_skew &lt;- (gr$nG - gr$nC) / (gr$nG + gr$nC)\ngr$AT_skew &lt;- (gr$nA - gr$nT) / (gr$nA + gr$nT)\n\ng &lt;- genes[['genes_S288c_Mpneumo']] \ng$GC &lt;- mean(coverage(gr, weight = gr$GC)[g])\ng$AT_skew &lt;- mean(coverage(gr, weight = gr$AT_skew)[g])\ng$GC_skew &lt;- mean(coverage(gr, weight = gr$GC_skew)[g])\ndf &lt;- as_tibble(g) |&gt; \n    select(seqnames, strand, GC, AT_skew, GC_skew) |&gt; \n    pivot_longer(any_of(c('GC', 'AT_skew', 'GC_skew')), names_to = 'base', values_to = 'skew') |&gt; \n    filter(seqnames != 'Mito') |&gt; \n    filter(seqnames %in% c('XVI', 'Mpneumo'))\np &lt;- ggplot(df, aes(x = seqnames, y = skew, fill = strand)) + \n    geom_boxplot()+ \n    facet_wrap(~ base) + \n    labs(fill = 'gene orientation') + \n    ylim(c(-0.6, 0.6))",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Code for generating Figure 3 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "05.Analysis-Figure-04.html",
    "href": "05.Analysis-Figure-04.html",
    "title": "6  Code for generating Figure 4 & Extended Data figures",
    "section": "",
    "text": "6.1 Importing libraries\nlibrary(purrr)\nlibrary(GenomicRanges)\nlibrary(GenomeInfoDb)\nlibrary(Biostrings)\nlibrary(plyranges)\nlibrary(HiContacts)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Code for generating Figure 4 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "05.Analysis-Figure-04.html#figure-4",
    "href": "05.Analysis-Figure-04.html#figure-4",
    "title": "6  Code for generating Figure 4 & Extended Data figures",
    "section": "6.2 Figure 4",
    "text": "6.2 Figure 4\n\n6.2.1 Panel 4a-b\n\nimport('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', resolution = 4000)\nhic &lt;- hic[!as.vector(seqnames(anchors(hic)[[1]])) %in% c(\"Mito\", \"chrM\") & !as.vector(seqnames(anchors(hic)[[2]])) %in% c(\"Mito\", \"chrM\")]\nplotMatrix(hic, dpi = 1000, limits = c(-4, -2))\nimport('data/S288c_Mpneumo/HiC/matrices/CH210/CH210^mapped_S288c_Mpneumo^3OO7AT.mcool', resolution = 4000)\nhic &lt;- hic[!as.vector(seqnames(anchors(hic)[[1]])) %in% c(\"Mito\", \"chrM\") & !as.vector(seqnames(anchors(hic)[[2]])) %in% c(\"Mito\", \"chrM\")]\nplotMatrix(hic, dpi = 1000, limits = c(-4, -2))\nimport('data/W303_Mmmyco/HiC/matrices/CH196/CH196^mapped_W303_Mmmyco^PSEL7M.mcool', resolution = 4000)\nhic &lt;- hic[!as.vector(seqnames(anchors(hic)[[1]])) %in% c(\"Mito\", \"chrM\") & !as.vector(seqnames(anchors(hic)[[2]])) %in% c(\"Mito\", \"chrM\")]\nplotMatrix(hic, dpi = 1000, limits = c(-4, -2))\nimport('data/W303_Mmmyco/HiC/matrices/CH02/CH02^mapped_W303_Mmmyco^7E45DD.mcool', resolution = 4000)\nhic &lt;- hic[!as.vector(seqnames(anchors(hic)[[1]])) %in% c(\"Mito\", \"chrM\") & !as.vector(seqnames(anchors(hic)[[2]])) %in% c(\"Mito\", \"chrM\")]\nplotMatrix(hic, dpi = 1000, limits = c(-4, -2))\n\n\n\n6.2.2 Panel 4c-d\n\ndevtools::load_all('~/repos/HiContacts')\n## G1\npairs_G1_S288C_Mpneumo &lt;- HiContacts::pairs2gi('data/S288c_Mpneumo/HiC/pairs/CH210/CH210^mapped_S288c_Mpneumo^3OO7AT.valid_idx_pcrfree.pairs')\npairs_G1_W303_Mmmyco &lt;- HiContacts::pairs2gi('data/W303_Mmmyco/HiC/pairs/CH02/CH02^mapped_W303_Mmmyco^7E45DD.valid_idx_pcrfree.pairs')\n\n## G2\npairs_G2_S288C_Mpneumo &lt;- HiContacts::pairs2gi('data/S288c_Mpneumo/HiC/pairs/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.valid_idx_pcrfree.pairs')\npairs_G2_W303_Mmmyco &lt;- HiContacts::pairs2gi('data/W303_Mmmyco/HiC/pairs/CH196/CH196^mapped_W303_Mmmyco^PSEL7M.valid_idx_pcrfree.pairs')\n\n## P(s)\npairs &lt;- list(\n    'S288C_Mpneumo_G1' = pairs_G1_S288C_Mpneumo, \n    'S288C_Mpneumo_G2' = pairs_G2_S288C_Mpneumo, \n    'W303_Mmmyco_G1' = pairs_G1_W303_Mmmyco, \n    'W303_Mmmyco_G2' = pairs_G2_W303_Mmmyco\n)\nPs &lt;- lapply(names(pairs), function(x) {\n    prs &lt;- pairs[[x]]\n    df &lt;- tibble::tibble(\n        chr = as.vector(GenomeInfoDb::seqnames(InteractionSet::anchors(prs)[[1]])),\n        distance = prs$distance\n    ) %&gt;%\n        tidyr::drop_na() %&gt;%\n        dplyr::filter(!chr %in% 'Mito') %&gt;%\n        dplyr::mutate(binned_distance = PsBreaks()$break_pos[findInterval(distance, vec = PsBreaks()$break_pos, all.inside = TRUE)])\n    df &lt;- dplyr::group_by(df, chr, binned_distance)\n    d &lt;- dplyr::tally(df, name = 'ninter') %&gt;%\n        dplyr::mutate(p = ninter/sum(ninter)) %&gt;%\n        dplyr::left_join(PsBreaks(), by = c('binned_distance' = 'break_pos')) %&gt;%\n        dplyr::mutate(norm_p = p / binwidth)\n    d &lt;- dplyr::group_by(d, chr)\n    ps &lt;- dplyr::group_split(d) %&gt;%\n        purrr::map(function(x) {\n            dplyr::mutate(x, norm_p_unity = norm_p / {dplyr::slice(x, which.min(abs(x$binned_distance - 100000))) %&gt;% dplyr::pull(norm_p)}) %&gt;%\n            dplyr::mutate(slope = (log10(dplyr::lead(norm_p)) - log10(norm_p)) / (log10(dplyr::lead(binned_distance)) - log10(binned_distance))) %&gt;%\n            dplyr::mutate(slope = c(0, predict(loess(slope ~ binned_distance, span = 0.5, data = .))))\n        }) %&gt;%\n        dplyr::bind_rows()\n    ps &lt;- dplyr::select(ps, chr, binned_distance, p, norm_p, norm_p_unity, slope) %&gt;%\n        dplyr::arrange(binned_distance) %&gt;% mutate(sample = x)\n    ps\n}) %&gt;% \n    bind_rows() %&gt;% \n    mutate(type = case_when(chr %in% c('Mpneumo', 'Mmmyco') ~ 'bact', TRUE ~ 'yeast')) %&gt;% \n    mutate(type = factor(type, c('yeast', 'bact'))) %&gt;% \n    mutate(phase = str_replace(sample, '.*_', '')) %&gt;% \n    group_by(type, chr, phase) %&gt;%\n    filter(!is.na(slope), !is.infinite(slope)) %&gt;% \n    filter(binned_distance &gt;= 3000, binned_distance &lt; 1.e8)\np1 &lt;- plotPs(Ps, aes(x = binned_distance, y = norm_p, group = chr, col = type)) +\n    facet_wrap(~sample)\n\n\n\n6.2.3 Panel 4f-g\n\nhic &lt;- import('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', resolution = 1000, focus = 'IV:100000-250000')\nplotMatrix(hic, dpi = 1000, limits = c(-4, -1), chrom_lines = FALSE, cmap = afmhotrColors())\nhic &lt;- import('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', resolution = 1000, focus = 'Mpneumo:450000-600000')\nplotMatrix(hic, dpi = 1000, limits = c(-4, -1), chrom_lines = FALSE, cmap = afmhotrColors())\nhic &lt;- import('data/W303_Mmmyco/HiC/matrices/CH196_nvq/CH196_nvq^mapped_W303_Mmmyco^PRWGZZ.mcool', resolution = 1000, focus = 'chrIV:100000-250000')\nplotMatrix(hic, dpi = 1000, limits = c(-4, -1), chrom_lines = FALSE, cmap = afmhotrColors())\nhic &lt;- import('data/W303_Mmmyco/HiC/matrices/CH196_nvq/CH196_nvq^mapped_W303_Mmmyco^PRWGZZ.mcool', resolution = 1000, focus = 'Mmmyco:925000-1050000')\nplotMatrix(hic, dpi = 1000, limits = c(-4, -1), chrom_lines = FALSE, cmap = afmhotrColors())\n\n\n\n6.2.4 Panel 4h\n\ncohesin &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_summits.bed')\ng &lt;- vroom::vroom('results/CH195_2kb_loops.tsv')\nloops &lt;- S4Vectors::Pairs(GRanges(g$chrom1, IRanges(g$start1, g$end1)), GRanges(g$chrom2, IRanges(g$start2, g$end2)))\nanchors &lt;- reduce(unique(unlist(zipup(loops)))) %&gt;% \n    plyranges::add_nearest_distance(cohesin) %&gt;% \n    filter(seqnames == 'Mpneumo') %&gt;% \n    mutate(group = 'observed')\nset.seed(2021)\nrandom_anchors &lt;- lapply(1:100, function(x) {\n    GRanges(\n        seqnames = 'Mpneumo', \n        IRanges(start = sample(1:817946, length(anchors)), width = 1)\n    ) %&gt;% \n        plyranges::add_nearest_distance(cohesin) %&gt;% \n        mutate(group = 'random', iter = x)\n}) %&gt;% do.call(c, .)\np &lt;- rbind(as_tibble(anchors) %&gt;% select(distance, group), as_tibble(random_anchors) %&gt;% select(distance, group)) %&gt;% \n    ggplot(mapping = aes(x = group, y = distance, fill = group), col = 'black') +\n    geom_boxplot(outlier.shape = NA) + \n    theme_minimal() + \n    labs(y = 'Distance from domain border to nearest cohesin peak')\n\nrbind(as_tibble(anchors) %&gt;% select(distance, group), as_tibble(random_anchors) %&gt;% select(distance, group)) %&gt;% \n    t.test(distance ~ group, data = .)\n\n\ncohesin &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_peaks.narrowPeak')\ng &lt;- vroom::vroom('results/CH195_2kb_loops.tsv')\nloops &lt;- S4Vectors::Pairs(GRanges(g$chrom1, IRanges(g$start1, g$end1)), GRanges(g$chrom2, IRanges(g$start2, g$end2)))\nanchors &lt;- reduce(unique(unlist(zipup(loops)))) %&gt;% \n    plyranges::add_nearest_distance(cohesin) %&gt;% \n    filter(seqnames == 'Mpneumo') %&gt;% \n    mutate(group = 'observed')\ncohesin_peaks &lt;- cohesin %&gt;%\n    filter(seqnames %in% c('II', 'Mpneumo')) %&gt;% \n    plyranges::add_nearest_distance(anchors) %&gt;% \n    mutate(atAnchor = distance &lt;= 1000)\ndf &lt;- cohesin_peaks %&gt;% \n    mutate(class = ifelse(atAnchor & !is.na(atAnchor), '@Anchors', ifelse(seqnames == 'Mpneumo', 'not@Anchors', 'Yeast')) %&gt;% factor(c('@Anchors', 'not@Anchors', 'Yeast'))) %&gt;% \n    as_tibble()\np &lt;- ggplot(df, aes(x = class, y = signalValue, fill = class)) + \n    geom_boxplot(outlier.shape = NA) + \n    theme_minimal() + \n    labs(x = 'Cohesin peaks', y = 'Peak strength') + \n    ylim(c(0, 12))\nt.test(df[df$class %in% c('@Anchors', 'not@Anchors'), ]$signalValue ~ df[df$class %in% c('@Anchors', 'not@Anchors'), ]$class)\nt.test(df[df$class %in% c('@Anchors', 'Yeast'), ]$signalValue ~ df[df$class %in% c('@Anchors', 'Yeast'), ]$class)\n\n\n\n6.2.5 Panel 4i\n\npairs_G2_S288C_Mpneumo &lt;- HiContacts::pairs2gi('data/S288c_Mpneumo/HiC/pairs/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.valid_idx_pcrfree.pairs')\npairs_G2_W303_Mmmyco &lt;- HiContacts::pairs2gi('data/W303_Mmmyco/HiC/pairs/CH196/CH196^mapped_W303_Mmmyco^PSEL7M.valid_idx_pcrfree.pairs')\npairs_G2_S288C_Mpneumo_wapl &lt;- HiContacts::pairs2gi('data/S288c_Mpneumo/HiC/pairs/CH197/CH197^mapped_S288c_Mpneumo^74O2MH.valid_idx_pcrfree.pairs')\npairs_G2_W303_Mmmyco_wapl &lt;- HiContacts::pairs2gi('data/W303_Mmmyco/HiC/pairs/CH198/CH198^mapped_W303_Mmmyco^4QODUC.valid_idx_pcrfree.pairs')\n\npairs &lt;- list(\n    'S288C_Mpneumo_G2' = pairs_G2_S288C_Mpneumo, \n    'W303_Mmmyco_G2' = pairs_G2_W303_Mmmyco, \n    'S288C_Mpneumo_G2_wapl' = pairs_G2_S288C_Mpneumo_wapl, \n    'W303_Mmmyco_G2_wapl' = pairs_G2_W303_Mmmyco_wapl\n)\nPs &lt;- lapply(names(pairs), function(x) {\n    getPs(pairs[[x]], by_chr = TRUE) %&gt;% mutate(sample = x)\n}) %&gt;% \n    bind_rows() %&gt;% \n    mutate(type = case_when(chr %in% c('Mpneumo', 'Mmmyco') ~ 'bact', TRUE ~ 'yeast')) %&gt;% \n    mutate(type = factor(type, c('yeast', 'bact'))) %&gt;% \n    mutate(phase = str_replace(sample, '.*_', '')) %&gt;% \n    mutate(genotype = str_replace(sample, '_G.*', '')) %&gt;% \n    group_by(genotype, phase, binned_distance, type) %&gt;% \n    summarize(norm_p = mean(norm_p))\n\np &lt;- ggPs(Ps, aes(x = binned_distance, y = norm_p, group = phase, col = phase)) +\n    facet_grid(type~genotype)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Code for generating Figure 4 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "05.Analysis-Figure-04.html#figure-s5",
    "href": "05.Analysis-Figure-04.html#figure-s5",
    "title": "6  Code for generating Figure 4 & Extended Data figures",
    "section": "6.3 Figure S5",
    "text": "6.3 Figure S5\n\n6.3.1 Panel S5a\n\npairs &lt;- list(\n    'S288C_Mpneumo_G1' = pairs_G1_S288C_Mpneumo, \n    'S288C_Mpneumo_G2' = pairs_G2_S288C_Mpneumo, \n    'W303_Mmmyco_G1' = pairs_G1_W303_Mmmyco, \n    'W303_Mmmyco_G2' = pairs_G2_W303_Mmmyco\n)\ncis_trans_ratios &lt;- lapply(names(pairs), function(name) {\n    p &lt;- pairs[[name]]\n    tibble(\n        sample = name, \n        count = 1, \n        distance = p$distance, \n        chr1 = as.vector(seqnames(anchors(p)[[1]])), \n        chr2 = as.vector(seqnames(anchors(p)[[2]]))\n    ) %&gt;%\n        pivot_longer(cols = c(chr1, chr2), names_to = 'anchor', values_to = 'chr') %&gt;% \n        group_by(chr) %&gt;% \n        mutate(is_cis = !is.na(distance), n = n()) %&gt;% \n        group_by(chr, n) %&gt;% \n        dplyr::count(is_cis, name = 'n_cis') %&gt;% \n        filter(is_cis) %&gt;% \n        mutate(pct_cis = round(n_cis/n*100, 2), pct_trans = 100-pct_cis, sample = name) %&gt;% \n        relocate(sample) %&gt;% \n        ungroup() %&gt;%\n        dplyr::select(-n, -is_cis, -n_cis)\n}) %&gt;% \n    bind_rows() %&gt;% \n    group_by(sample) %&gt;% \n    filter(chr != 'Mito') %&gt;% \n    mutate(type = case_when(chr %in% c('Mpneumo', 'Mmmyco') ~ 'bact', TRUE ~ 'yeast')) %&gt;% \n    mutate(type = factor(type, c('yeast', 'bact'))) %&gt;% \n    group_by(sample, type) %&gt;% \n    mutate(ymin = min(pct_trans), ymax = max(pct_trans))\np &lt;- ggplot(arrange(cis_trans_ratios, chr), aes(x = chr, y = pct_trans, fill = type)) + \n    geom_col() + \n    facet_wrap(~sample, scales = 'free_x') + \n    theme_minimal() + theme(panel.border = element_rect(fill = NA))\n\n\n\n6.3.2 Panel S5b\n\ncool &lt;- \"data/W303_Mmmyco/HiC/matrices/CH02/CH02^mapped_W303_Mmmyco^7E45DD.mcool\"\nres &lt;- 4000\nsi &lt;- availableChromosomes(cool)\ngis &lt;- import(cool,resolution = res) %&gt;% as(\"GInteractions\")\nmat &lt;- gi2cm(gis, fill = 'score')\ndf &lt;- lapply(names(si)[1:15], function(chr) {\n    rbind(\n        tibble(\n            chr1 = 'chrXVI', \n            chr2 = chr, \n            me = MatrixGenerics::colMedians(as.matrix(mat[as.vector(regions(mat)$chr) == 'chrXVI', as.vector(regions(mat)$chr) == chr]), na.rm = TRUE),\n            mean = mean(me, na.rm = TRUE),\n            mean_centered_score = log2(me / mean),\n            dist = 1:length(me)*res\n        ), \n        tibble(\n            chr1 = 'Mmmyco', \n            chr2 = chr, \n            me = MatrixGenerics::colMedians(as.matrix(mat[as.vector(regions(mat)$chr) == 'Mmmyco', as.vector(regions(mat)$chr) == chr]), na.rm = TRUE),\n            mean = mean(me, na.rm = TRUE),\n            mean_centered_score = log2(me / mean),\n            dist = 1:length(me)*res\n        )\n    )\n}) %&gt;% \n    bind_rows() %&gt;% \n    mutate(chr1 = factor(chr1, c('chrXVI', 'Mmmyco')), chr2 = factor(chr2, names(si)[1:15]))\n\np &lt;- ggplot(df, aes(x = dist, y = mean_centered_score, col = chr1, fill = chr1)) + \n    geom_smooth() + \n    scale_colour_manual(values = c('#7a7a7a', 'purple')) +\n    scale_fill_manual(values = c('#7a7a7a', 'purple')) +\n    facet_wrap(~chr2, scales = 'free') + \n    theme_minimal() + theme(panel.border = element_rect(fill = NA)) + \n    theme(axis.text.x = element_blank()) + \n    scale_x_continuous(expand = c(0, 0))\n\np &lt;- plotMatrix(import('data/W303_Mmmyco/HiC/matrices/CH02/CH02^mapped_W303_Mmmyco^7E45DD.mcool', resolution = 4000), dpi = 1000, limits = c(-4, -2), chrom_lines = TRUE)\n\n\n\n6.3.3 Panel S5e-f\n\npairs &lt;- list(\n    'S288C_Mpneumo_G1' = pairs_G1_S288C_Mpneumo, \n    'S288C_Mpneumo_G2' = pairs_G2_S288C_Mpneumo, \n    'W303_Mmmyco_G1' = pairs_G1_W303_Mmmyco, \n    'W303_Mmmyco_G2' = pairs_G2_W303_Mmmyco\n)\nPs &lt;- lapply(names(pairs), function(x) {\n    prs &lt;- pairs[[x]]\n    df &lt;- tibble::tibble(\n        chr = as.vector(GenomeInfoDb::seqnames(InteractionSet::anchors(prs)[[1]])),\n        distance = prs$distance\n    ) %&gt;%\n        tidyr::drop_na() %&gt;%\n        dplyr::filter(!chr %in% 'Mito') %&gt;%\n        dplyr::mutate(binned_distance = PsBreaks()$break_pos[findInterval(distance, vec = PsBreaks()$break_pos, all.inside = TRUE)])\n    df &lt;- dplyr::group_by(df, chr, binned_distance)\n    d &lt;- dplyr::tally(df, name = 'ninter') %&gt;%\n        dplyr::mutate(p = ninter/sum(ninter)) %&gt;%\n        dplyr::left_join(PsBreaks(), by = c('binned_distance' = 'break_pos')) %&gt;%\n        dplyr::mutate(norm_p = p / binwidth)\n    d &lt;- dplyr::group_by(d, chr)\n    ps &lt;- dplyr::group_split(d) %&gt;%\n        purrr::map(function(x) {\n            dplyr::mutate(x, norm_p_unity = norm_p / {dplyr::slice(x, which.min(abs(x$binned_distance - 100000))) %&gt;% dplyr::pull(norm_p)}) %&gt;%\n            dplyr::mutate(slope = (log10(dplyr::lead(norm_p)) - log10(norm_p)) / (log10(dplyr::lead(binned_distance)) - log10(binned_distance))) %&gt;%\n            dplyr::mutate(slope = c(0, predict(loess(slope ~ binned_distance, span = 0.5, data = .))))\n        }) %&gt;%\n        dplyr::bind_rows()\n    ps &lt;- dplyr::select(ps, chr, binned_distance, p, norm_p, norm_p_unity, slope) %&gt;%\n        dplyr::arrange(binned_distance) %&gt;% mutate(sample = x)\n    ps\n}) %&gt;% \n    bind_rows() %&gt;% \n    mutate(type = case_when(chr %in% c('Mpneumo', 'Mmmyco') ~ 'bact', TRUE ~ 'yeast')) %&gt;% \n    mutate(type = factor(type, c('yeast', 'bact'))) %&gt;% \n    mutate(phase = str_replace(sample, '.*_', '')) %&gt;% \n    group_by(type, chr, phase) %&gt;%\n    filter(!is.na(slope), !is.infinite(slope)) %&gt;% \n    filter(binned_distance &gt;= 3000, binned_distance &lt; 1.e8)\ndplyr::group_by(Ps, sample, chr) %&gt;% \n        filter(chr != 'XII') %&gt;%\n        group_split() %&gt;% \n        purrr::map(function(x) {\n            dplyr::mutate(x, slope = (log10(lead(norm_p)) - log10(norm_p)) / (log10(lead(binned_distance)) - log10(binned_distance))) %&gt;% \n            dplyr::mutate(slope = c(0, predict(loess(slope ~ binned_distance, span = 0.5, data = .))))\n        }) %&gt;% \n        dplyr::bind_rows() %&gt;% \n        filter(slope != 0) %&gt;% \n        group_by(type, chr, phase) %&gt;%\n        ggplot(aes(x = binned_distance, y = slope, group = chr, col = type)) +\n        geom_path() +\n        theme_minimal() +\n        theme(panel.border = element_rect(fill = NA)) +\n        theme(panel.grid.minor = element_blank()) +\n        labs(x = \"Genomic distance\", y = \"Slope\") +\n        coord_cartesian(ylim = c(-2.5, 0)) + \n        scale_x_log10(\n            limits = c(5000, 4.99e5),\n            expand = c(0, 0),\n            breaks = c(1, 10, 100, 1000, 10000, 1e+05, 1e+06, 1e+07, 1e+08, 1e+09, 1e+10),\n            labels = c('1', '10', '100', '1kb', '10kb', '100kb', '1Mb', '10Mb', '100Mb', '1Gb', '10Gb')\n        ) +\n        annotation_logticks(sides = 'b') + \n        facet_wrap(~sample)\n\n\n\n6.3.4 Panel S5g\n\ntracks &lt;- list(\n    'RNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.unstranded.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.unstranded.CPM.bw', as = 'Rle')\n    ) / 3, \n    'fwdRNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.fwd.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.fwd.CPM.bw', as = 'Rle')\n    ) / 3, \n    'revRNA_S288c_Mpneumo' = ( \n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo1_nvq/CHR_Pneumo1_nvq^mapped_S288c_Mpneumo^3FV1UY.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo2_nvq/CHR_Pneumo2_nvq^mapped_S288c_Mpneumo^INOTQD.rev.CPM.bw', as = 'Rle') +\n        rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/RNA/tracks/CHR_Pneumo3_nvq/CHR_Pneumo3_nvq^mapped_S288c_Mpneumo^5JD4NC.rev.CPM.bw', as = 'Rle')\n    ) / 3\n)\n\nbinwidth &lt;- 500\nbin &lt;- 400\nstep &lt;- 10\nRNA &lt;- lapply(tracks[['fwdRNA_S288c_Mpneumo']] - tracks[['revRNA_S288c_Mpneumo']], function(vec) {zoo::rollmean(as.vector(vec), k = binwidth, fill = NA, na.pad = TRUE, align = 'center')}) %&gt;% RleList()\ngenome &lt;- reduce(GRanges(RNA))\ntiled_genome &lt;- slide_ranges(genome, width = bin, step = step) %&gt;% mutate(bin = 1:n())\ntiled_genome_mid &lt;- resize(tiled_genome, width = step, fix ='center')\ntiled_genome_left &lt;- resize(tiled_genome, width = bin/2, fix ='end')\ntiled_genome_right &lt;- resize(tiled_genome, width = bin/2, fix ='start')\ntiled_genome_mid$left &lt;- rowSums(as.matrix(RNA[tiled_genome_left]))\ntiled_genome_mid$right &lt;- rowSums(as.matrix(RNA[tiled_genome_right]))\ntiled_genome_mid$score &lt;- tiled_genome_mid$right / tiled_genome_mid$left\ntiled_genome_mid$score[is.infinite(tiled_genome_mid$score)] &lt;- NA\ntiled_genome_mid$score[is.na(tiled_genome_mid$score)] &lt;- 0\nswitches &lt;- tiled_genome_mid %&gt;% \n    mutate(isneg = score &lt; 0) %&gt;% \n    filter(isneg, lag(!isneg)) %&gt;% \n    makeGRangesFromDataFrame() %&gt;% \n    shift(bin/4) %&gt;%\n    resize(1, fix = 'center') \nswitches &lt;- switches[resize(switches, width = bin*2, fix = 'center') %within% {tracks[['fwdRNA_S288c_Mpneumo']] %&gt;% lengths() %&gt;% IRanges(1, width = .) %&gt;% GRanges(seqnames = names(tracks[['fwdRNA_S288c_Mpneumo']]), .)}]\nswitches &lt;- switches[resize(switches, width = bin*2, fix = 'center') %within% {tracks[['revRNA_S288c_Mpneumo']] %&gt;% lengths() %&gt;% IRanges(1, width = .) %&gt;% GRanges(seqnames = names(tracks[['revRNA_S288c_Mpneumo']]), .)}]\nswitches_left &lt;- resize(switches, width = bin, fix ='end')\nswitches_right &lt;- resize(switches, width = bin, fix ='start')\nswitches$fwd_left &lt;- rowMeans(as.matrix(tracks[['fwdRNA_S288c_Mpneumo']][switches_left]))\nswitches$fwd_right &lt;- rowMeans(as.matrix(tracks[['fwdRNA_S288c_Mpneumo']][switches_right]))\nswitches$rev_left &lt;- rowMeans(as.matrix(tracks[['revRNA_S288c_Mpneumo']][switches_left]))\nswitches$rev_right &lt;- rowMeans(as.matrix(tracks[['revRNA_S288c_Mpneumo']][switches_right]))\nswitches$fwd_score &lt;- abs(switches$fwd_left - switches$fwd_right)\nswitches$rev_score &lt;- abs(switches$rev_right - switches$rev_left)\nswitches$from &lt;- rowMeans(as.matrix(RNA[resize(switches, width = bin/2, fix = 'end')]))\nswitches$to &lt;- rowMeans(as.matrix(RNA[resize(switches, width = bin/2, fix = 'start')])) %&gt;% replace_na(0)\nswitches$directionality_score &lt;- switches$fwd_score + switches$rev_score\nswitches$directionality_score &lt;- ifelse(\n    {switches$from &gt; 0 & switches$to &lt; 0}, \n    switches$directionality_score, \n    -switches$directionality_score\n)\nswitches$ambiguous &lt;- ifelse(\n    {switches$from &gt; 0 & switches$to &lt; 0} | {switches$from &lt; 0 & switches$to &gt; 0}, \n    FALSE, \n    TRUE\n)\nswitches$color &lt;- ifelse(switches$directionality_score &gt; 0, '#35be40', '#3880ec')\nswitches$transparency &lt;- gsub('.......', '', rgb(1, 1, 1, abs(scales::rescale(switches$directionality_score, c(-1, 1)))))\nswitches$itemRgb &lt;- paste0(switches$color, switches$transparency)\nswitches &lt;- switches[!switches$ambiguous]\nfiltered_switches &lt;- switches[{{switches$directionality_score &gt; 0 & lag(switches$directionality_score) &lt;= 0} | {switches$directionality_score &lt; 0 & lag(switches$directionality_score) &gt;= 0}} %&gt;% replace_na(FALSE)]\ntranscriptional_stretches &lt;- filtered_switches %&gt;% \n    as_tibble() %&gt;% \n    group_by(seqnames) %&gt;% \n    mutate(start2 = lead(start), end2 = end) %&gt;% \n    dplyr::select(-start, -end) %&gt;% \n    dplyr::rename(start = end2, end = start2) %&gt;% \n    drop_na() %&gt;% \n    makeGRangesFromDataFrame(keep.extra.columns = TRUE) \n\nset.seed(2021)\nbin &lt;- 400\nstep &lt;- 10\ncohesin &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_peaks.narrowPeak') %&gt;%\n    plyranges::add_nearest_distance(switches) %&gt;% \n    filter(seqnames %in% c('II', 'Mpneumo')) %&gt;% \n    mutate(group = 'observed') \nrandom_cohesin &lt;- lapply(1:100, function(x) {\n    GRanges(\n        seqnames = sample(seqnames(cohesin)), \n        IRanges(start = sample(1:800000, length(cohesin)), width = 1)\n    ) %&gt;% \n        plyranges::add_nearest_distance(switches) %&gt;% \n        mutate(group = 'random', iter = x) \n}) %&gt;% do.call(c, .)\ndf &lt;- rbind(as_tibble(cohesin) %&gt;% select(distance, group, seqnames), as_tibble(random_cohesin) %&gt;% select(distance, group, seqnames))\np &lt;- ggplot(df, aes(x = seqnames, y = distance, fill = seqnames, alpha = group)) +\n    geom_violin(position = position_dodge(width = 0.6), scale = 'width') + \n    geom_boxplot(position = position_dodge(width = 0.6), fill = 'white', width = 0.1, outlier.shape = NA) + \n    theme_minimal() + theme(panel.background = element_rect(fill = NA)) +\n    labs(y = 'Distance from cohesin peak to nearest CTS', x= '')\nt.test(distance ~ group, data = subset(df, seqnames == 'II'))\nt.test(distance ~ group, data = subset(df, seqnames == 'Mpneumo'))\n\n\n\n6.3.5 Panel S5h\n\nbin &lt;- 400\nRNA1_fwd &lt;- tracks[['fwdRNA_S288c_Mpneumo']]\nRNA1_rev &lt;- tracks[['revRNA_S288c_Mpneumo']]\npeaks &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_peaks.narrowPeak') %&gt;% filter(qValue &gt; 10) \ncohesin_signal &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH219/CH219^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.CPM.calibrated.bw', as = 'Rle')\n{\n    cohesin &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_summits.bed') %&gt;% \n        subsetByOverlaps(peaks) %&gt;% \n        arrange(dplyr::desc(score)) %&gt;% \n        filter(seqnames %in% c('II', 'Mpneumo')) %&gt;% \n        filter_by_non_overlaps(GRanges('Mpneumo:741329-742385'))\n    g &lt;- cohesin %&gt;% \n        mutate(name0 = as.character(.)) %&gt;% \n        resize(8001, fix = 'center') %&gt;% \n        mutate(RNA1_fwd = {`%within%`(., {RNA1_fwd %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame()})}) %&gt;% \n        mutate(RNA1_rev = {`%within%`(., {RNA1_rev %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame()})}) %&gt;% \n        filter(RNA1_fwd, RNA1_rev) %&gt;% \n        mutate(name = as.character(.)) %&gt;% \n        '['(order(sapply(cohesin_signal[.], \\(x) {mean(x[3000:5000])}))) %&gt;%\n        mutate(bin = as.numeric(cut(score, breaks = quantile(score, probs = seq(0, 1, length.out = 5)), include.lowest = TRUE)))\n    mat_coh &lt;- cohesin_signal[g] %&gt;% \n        as.matrix() %&gt;% \n        as.data.frame() %&gt;%\n        mutate(seqnames = as.vector(seqnames(g)), grange = g$name, bin = g$bin) %&gt;%\n        pivot_longer(cols = -c(grange, seqnames, bin), names_to = 'idx', values_to = 'score') %&gt;% \n        mutate(idx = as.numeric(factor(idx, unique(idx))) - 4000, grange = factor(grange)) %&gt;% \n        mutate(grange = {factor(grange, g$name)}) %&gt;%\n        mutate(group = 'cohesin') %&gt;%\n        mutate(score = scales::oob_squish(score, quantile(score, c(.05, .95), na.rm = TRUE)))\n    mat_fwd &lt;- RNA1_fwd[g] %&gt;% \n        as.matrix() %&gt;% \n        as.data.frame() %&gt;%\n        mutate(seqnames = as.vector(seqnames(g)), grange = g$name, bin = g$bin) %&gt;%\n        pivot_longer(cols = -c(grange, seqnames, bin), names_to = 'idx', values_to = 'score') %&gt;% \n        mutate(idx = as.numeric(factor(idx, unique(idx))) - 4000, grange = factor(grange, g$name)) %&gt;% \n        mutate(group = 'fwd') %&gt;%\n        mutate(score = scales::oob_squish(score, quantile(score, c(.05, .95), na.rm = TRUE)))\n    mat_rev &lt;- RNA1_rev[g] %&gt;% \n        as.matrix() %&gt;% \n        as.data.frame() %&gt;%\n        mutate(seqnames = as.vector(seqnames(g)), grange = g$name, bin = g$bin) %&gt;%\n        pivot_longer(cols = -c(grange, seqnames, bin), names_to = 'idx', values_to = 'score') %&gt;% \n        mutate(idx = as.numeric(factor(idx, unique(idx))) - 4000, grange = factor(grange, g$name)) %&gt;% \n        mutate(group = 'rev') %&gt;%\n        mutate(score = scales::oob_squish(score, quantile(score, c(.05, .95), na.rm = TRUE)))\n}\ndf &lt;- rbind(mat_coh, mat_fwd, mat_rev)\np &lt;- cowplot::plot_grid(\n    ggplot() + \n        geom_line(data = df[df$group == 'cohesin',] %&gt;% group_by(seqnames, idx) %&gt;% dplyr::summarize(score = mean(score)), mapping = aes(x = idx, y = score, group = seqnames, col = seqnames, fill = seqnames)) +\n        theme_minimal() + \n        theme(text = element_text(size=8), panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), legend.position = 'bottom') +\n        ggtitle('Cohesin') + \n        labs(x = '', y = 'Cohesin signal') + \n        scale_x_continuous(expand = c(0, 0)),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = df[df$group == 'cohesin',], mapping = aes(x = idx, y = grange, fill = score), raster.dpi = 1000) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major.y = element_blank(), \n            panel.grid.minor.y = element_blank(), \n            legend.position = 'none'\n        ) +\n        labs(x = 'Distance to CTS position') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_fill_distiller(palette = 'YlOrBr', direction = 1) + \n        facet_grid(seqnames~., scales = 'free'),\n    ggplot(\n        df[df$group != 'cohesin',] %&gt;% \n            group_by(group, seqnames, grange) %&gt;% \n            mutate(score = zoo::rollmean(score, k = 500, fill = NA, align = 'center')) %&gt;% \n            group_by(group, seqnames, idx) %&gt;% \n            dplyr::summarize(\n                sd = sd(score, na.rm = TRUE), \n                score = mean(score, na.rm = TRUE),\n                count = dplyr::n()\n            ) %&gt;% \n            mutate(\n                se = sd/sqrt(count),\n                ci_low = score - qt(1 - (0.05 / 2), count - 1) * se,\n                ci_high = score + qt(1 - (0.05 / 2), count - 1) * se\n            ) \n    ) + \n        geom_ribbon(aes(x = idx, ymin = ci_low, ymax = ci_high, fill = group), col = NA, alpha = 0.3) +\n        geom_line(mapping = aes(x = idx, y = score, col = group, alpha = seqnames)) +\n        theme_minimal() + \n        theme(text = element_text(size=8), panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), legend.position = 'bottom') +\n        ggtitle('RNAseq') + \n        labs(x = '', y = 'RNAseq') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_y_continuous(limits = c(-8, 60), expand = c(0, 0)) + \n        scale_alpha_manual(values = c(0.4, 1)) +\n        facet_grid(seqnames~.),\n    ggplot(col = NA) + \n        ggrastr::geom_tile_rast(data = df[df$group != 'cohesin',], mapping = aes(x = idx, y = grange, fill = group, alpha = score), raster.dpi = 1000) +\n        theme_minimal() + \n        theme(\n            text = element_text(size=8), \n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(), \n            panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), \n            panel.grid.major.y = element_blank(), \n            panel.grid.minor.y = element_blank(), \n            legend.position = 'none'\n        ) +\n        labs(x = 'Distance to CTS position') + \n        scale_x_continuous(expand = c(0, 0)) + \n        scale_alpha_continuous(range = c(0, 0.4)) + \n        facet_grid(seqnames~., scales = 'free'),\n    rel_heights = c(1.5, 1), nrow = 2, byrow = FALSE, align = 'hv', axis = 'tblr'\n)\n\np2 &lt;- ggplot(\n    df[df$group != 'cohesin' & df$bin == max(df$bin),] %&gt;% \n        group_by(group, seqnames, grange) %&gt;% \n        mutate(score = zoo::rollmean(score, k = 500, fill = NA, align = 'center')) %&gt;% \n        group_by(group, seqnames, idx) %&gt;% \n        dplyr::summarize(\n            sd = sd(score, na.rm = TRUE), \n            score = mean(score, na.rm = TRUE),\n            count = dplyr::n()\n        ) %&gt;% \n        mutate(\n            se = sd/sqrt(count),\n            ci_low = score - qt(1 - (0.05 / 2), count - 1) * se,\n            ci_high = score + qt(1 - (0.05 / 2), count - 1) * se\n        ) \n) + \n    geom_ribbon(aes(x = idx, ymin = ci_low, ymax = ci_high, fill = group), col = NA, alpha = 0.3) +\n    geom_line(mapping = aes(x = idx, y = score, col = group, alpha = seqnames)) +\n    theme_minimal() + \n    theme(text = element_text(size=8), panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), legend.position = 'bottom') +\n    ggtitle('RNAseq') + \n    labs(x = '', y = 'RNAseq') + \n    scale_x_continuous(expand = c(0, 0)) + \n    scale_y_continuous(limits = c(-8, 60), expand = c(0, 0)) + \n    scale_alpha_manual(values = c(0.4, 1)) +\n    facet_grid(seqnames~.),\n\np3 &lt;- ggplot(\n    df[df$group != 'cohesin' & df$bin == min(df$bin),] %&gt;% \n        group_by(group, seqnames, grange) %&gt;% \n        mutate(score = zoo::rollmean(score, k = 500, fill = NA, align = 'center')) %&gt;% \n        group_by(group, seqnames, idx) %&gt;% \n        dplyr::summarize(\n            sd = sd(score, na.rm = TRUE), \n            score = mean(score, na.rm = TRUE),\n            count = dplyr::n()\n        ) %&gt;% \n        mutate(\n            se = sd/sqrt(count),\n            ci_low = score - qt(1 - (0.05 / 2), count - 1) * se,\n            ci_high = score + qt(1 - (0.05 / 2), count - 1) * se\n        ) \n) + \n    geom_ribbon(aes(x = idx, ymin = ci_low, ymax = ci_high, fill = group), col = NA, alpha = 0.3) +\n    geom_line(mapping = aes(x = idx, y = score, col = group, alpha = seqnames)) +\n    # geom_line(\n    #     data = df[df$group != 'cohesin' & df$bin == min(df$bin),] %&gt;% group_by(group, seqnames, idx) %&gt;% dplyr::summarize(score = mean(score)) %&gt;% mutate(score = zoo::rollmean(score, k = 500, fill = NA, align = 'center')), \n    #     mapping = aes(x = idx, y = score, col = group, alpha = seqnames)\n    # ) +\n    theme_minimal() + \n    theme(text = element_text(size=8), panel.border = element_rect(size = 0.3, fill = NA, colour = 'black'), legend.position = 'bottom') +\n    ggtitle('RNAseq') + \n    labs(x = '', y = 'RNAseq') + \n    scale_x_continuous(expand = c(0, 0)) + \n    scale_y_continuous(limits = c(-8, 60), expand = c(0, 0)) + \n    scale_alpha_manual(values = c(0.4, 1)) +\n    facet_grid(seqnames~.),\n\n\n\n6.3.6 Panel S5i\n\nswitches$directionality_score &lt;- as.numeric(switches$directionality_score)\ncohesin_summits &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_summits.bed')\ncohesin_peaks &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/peaks/CH219/CH219_vs-CH220_genome-S288c_Mpneumo_EHEJFT_peaks.narrowPeak') %&gt;% filter(qValue &gt; 10) \ncohesin_signal &lt;- rtracklayer::import('~/Projects/20220309_Christophe_GC-paper/data/S288c_Mpneumo/ChIP/tracks/CH219/CH219^unmapped_CBS138^mapped_S288c_Mpneumo^EHEJFT.vs-CH220.bw', as = 'Rle')\ng &lt;- cohesin_summits %&gt;% \n    mutate(peak = cohesin_peaks) %&gt;% mutate(peak_width = width(peak.X)) %&gt;%\n    filter(seqnames %in% c('II', 'Mpneumo')) %&gt;%\n    mutate(name = as.character(.)) %&gt;%\n    resize(2001, fix = 'center') %&gt;% \n    mutate(inCoh = {`%within%`(., cohesin_signal %&gt;% lengths() %&gt;% tibble(seqnames = names(.), start = 1, end = .) %&gt;% makeGRangesFromDataFrame())}) %&gt;% \n    filter(inCoh)  \ns &lt;- cohesin_signal[g] %&gt;% \n    as.matrix() %&gt;% \n    as.data.frame() %&gt;%\n    mutate(seqnames = as.vector(seqnames(g)), grange = g$name) %&gt;%\n    pivot_longer(cols = -c(grange, seqnames), names_to = 'idx', values_to = 'score') %&gt;% \n    mutate(idx = as.numeric(factor(idx, unique(idx))) - 1001, grange = factor(grange)) %&gt;% \n    group_by(., grange) %&gt;% \n    filter(abs(idx) &lt; 1000) %&gt;% \n    dplyr::summarize(score_1000 = mean(score, na.rm = TRUE))\np &lt;- cohesin_summits %&gt;% \n    mutate(peak = cohesin_peaks) %&gt;% mutate(peak_width = width(peak.X)) %&gt;%\n    filter(seqnames %in% c('II', 'Mpneumo')) %&gt;% \n    mutate(grange = as.character(.)) %&gt;% \n    join_nearest(switches) %&gt;% \n    as_tibble() %&gt;% \n    # left_join(s) %&gt;%\n    # filter(!ambiguous) %&gt;%\n    # ggplot(aes(x = log2(peak.X.signalValue), y = directionality_score)) + \n    ggplot(aes(x = score.x, y = directionality_score)) + \n    geom_point() + \n    geom_smooth(method = 'loess') + \n    theme_minimal() + \n    facet_grid(~seqnames)\n\n\n\n6.3.7 Panel S5k\n\n## WT\np &lt;- HiContacts::plotMatrix(HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', focus = 'IV:700000-1400000', res = 2000), use.scores = 'balanced', dpi = 1000, limits = c(-4, -1), scale = 'log10')\np &lt;- HiContacts::plotMatrix(HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH197/CH197^mapped_S288c_Mpneumo^74O2MH.mcool', focus = 'IV:700000-1400000', res = 2000), use.scores = 'balanced', dpi = 1000, limits = c(-4, -1), scale = 'log10')\nby = HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', focus = 'IV:700000-1400000', res = 2000)\nx = HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH197/CH197^mapped_S288c_Mpneumo^74O2MH.mcool', focus = 'IV:700000-1400000', res = 2000)\nreplaceRegions(x@interactions) &lt;- unique(c(regions(by), regions(x)))\nreplaceRegions(by@interactions) &lt;- unique(c(regions(by), regions(x)))\nx &lt;- HiContacts::divide(\n    by = by,\n    x = x\n)\np &lt;- plotMatrix(x, use.scores = 'ratio', limits = c(-2, 2), scale = 'log2', cmap = HiContacts::bwrColors())\n\n## Mpneumo\np &lt;- HiContacts::plotMatrix(HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', focus = 'Mpneumo:100000-700000', res = 2000), use.scores = 'balanced', dpi = 1000, limits = c(-4, -1), scale = 'log10')\np &lt;- HiContacts::plotMatrix(HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH197/CH197^mapped_S288c_Mpneumo^74O2MH.mcool', focus = 'Mpneumo:100000-700000', res = 2000), use.scores = 'balanced', dpi = 1000, limits = c(-4, -1), scale = 'log10')\nx &lt;- HiContacts::divide(\n    by = HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH195/CH195^mapped_S288c_Mpneumo^1T28M6.mcool', focus = 'Mpneumo:100000-700000', res = 2000),\n    x = HiContacts::Contacts('data/S288c_Mpneumo/HiC/matrices/CH197/CH197^mapped_S288c_Mpneumo^74O2MH.mcool', focus = 'Mpneumo:100000-700000', res = 2000)\n)\np &lt;- plotMatrix(x, use.scores = 'ratio', limits = c(-1, 1), scale = 'log2', cmap = HiContacts::bwrColors())\n\n## Mmyco\np &lt;- HiContacts::plotMatrix(HiContacts::Contacts('data/W303_Mmmyco/HiC/matrices/CH196/CH196^mapped_W303_Mmmyco^PSEL7M.mcool', focus = 'Mmmyco:500000-1200000', res = 2000), use.scores = 'balanced', dpi = 1000, limits = c(-4, -1), scale = 'log10')\np &lt;- HiContacts::plotMatrix(HiContacts::Contacts('data/W303_Mmmyco/HiC/matrices/CH198/CH198^mapped_W303_Mmmyco^4QODUC.mcool', focus = 'Mmmyco:500000-1200000', res = 2000), use.scores = 'balanced', dpi = 1000, limits = c(-4, -1), scale = 'log10')\nx &lt;- HiContacts::divide(\n    by = HiContacts::Contacts('data/W303_Mmmyco/HiC/matrices/CH196/CH196^mapped_W303_Mmmyco^PSEL7M.mcool', focus = 'Mmmyco:500000-1200000', res = 2000),\n    x = HiContacts::Contacts('data/W303_Mmmyco/HiC/matrices/CH198/CH198^mapped_W303_Mmmyco^4QODUC.mcool', focus = 'Mmmyco:500000-1200000', res = 2000)\n)\np &lt;- plotMatrix(x, use.scores = 'ratio', limits = c(-1, 1), scale = 'log2', cmap = HiContacts::bwrColors())",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Code for generating Figure 4 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "06.Analysis-Figure-05.html",
    "href": "06.Analysis-Figure-05.html",
    "title": "7  Code for generating Figure 5 & Extended Data figures",
    "section": "",
    "text": "7.1 Importing libraries\nlibrary(purrr)\nlibrary(GenomicRanges)\nlibrary(GenomeInfoDb)\nlibrary(Biostrings)\nlibrary(plyranges)\nlibrary(HiContacts)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Code for generating Figure 5 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "06.Analysis-Figure-05.html#figure-5",
    "href": "06.Analysis-Figure-05.html#figure-5",
    "title": "7  Code for generating Figure 5 & Extended Data figures",
    "section": "7.2 Figure 5",
    "text": "7.2 Figure 5\n\n7.2.1 Panel 5b\n\ncontacts_maps &lt;- list(\n    'Mmmyco_G1' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/HiC/matrices/CH02/CH02^mapped_W303_Mmmyco^7E45DD.mcool', \n        resolution = 4000\n    ), \n    'chrXVI-Mmmyco_G1' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco/HiC/matrices/LM33/LM33^mapped_W303_chrXVI-Mmmyco^CTGJED.mcool', \n        resolution = 4000\n    ),\n    'chrXVI-Mmmyco_single-transloc_G1' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/HiC/matrices/LM62/LM62^mapped_W303_chrXVI-Mmmyco_inv870kb^CR0A8F.mcool', \n        resolution = 4000\n    ),\n    'chrXVI-Mmmyco_double-transloc_G1' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/HiC/matrices/LM63/LM63^mapped_W303_chrXVI-Mmmyco_dbl-inv^4KJ91Y.mcool', \n        resolution = 4000\n    )\n)\n\ncmap &lt;- HiCExperiment::afmhotrColors()\n\nlapply(names(contacts_maps), function(n) {\n    m &lt;- contacts_maps[[n]]\n    plotMatrix(m, limits = c(-4, -1), cmap = cmap)\n})\n\nlapply(names(contacts_maps), function(n) {\n    m &lt;- contacts_maps[[n]] |&gt; \n        zoom(resolution = 8000)\n    m &lt;- autocorrelate(m, use.scores = 'balanced', detrend = FALSE, ignore_ndiags = 4)\n    plotMatrix(m, use.scores = 'autocorrelated', limits = c(-0.8, 0.8), scale = 'linear', cmap = bwrColors())\n})\n\n\n\n7.2.2 Panel 5c\n\nx &lt;- contacts_maps[['chrXVI-Mmmyco_G1']][c('chrXV', 'chrXVI-Mmmyco')]\nv4C_chrXVI_Mmmyco &lt;- bind_rows(\n    virtual4C(x, GRanges(\"chrXV:600000-620000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco', group = 'chrXV') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco:300000-320000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco', group = 'chrXVI-Mmmyco_yeast-seg') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco:1500000-1520000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco', group = 'chrXVI-Mmmyco_myco-seg') |&gt; as_tibble()\n)\n\nx &lt;- contacts_maps[['chrXVI-Mmmyco_single-transloc_G1']][c('chrXV', 'chrXVI-Mmmyco_inv870kb')]\nv4C_chrXVI_Mmmyco_inv870kb &lt;- bind_rows(\n    virtual4C(x, GRanges(\"chrXV:600000-620000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_inv870kb', group = 'chrXV') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_inv870kb:200000-220000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_inv870kb', group = 'chrXVI-Mmmyco_inv870kb_yeast-seg1') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_inv870kb:720000-750000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_inv870kb', group = 'chrXVI-Mmmyco_inv870kb_myco-seg1') |&gt; as_tibble(),\n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_inv870kb:1200000-1220000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_inv870kb', group = 'chrXVI-Mmmyco_inv870kb_yeast-seg2') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_inv870kb:1620000-1650000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_inv870kb', group = 'chrXVI-Mmmyco_inv870kb_myco-seg2') |&gt; as_tibble()\n)\n\nx &lt;- contacts_maps[['chrXVI-Mmmyco_double-transloc_G1']][c('chrXV', 'chrXVI-Mmmyco_dbl-inv')]\nv4C_chrXVI_Mmmyco_dbl_inv &lt;- bind_rows(\n    virtual4C(x, GRanges(\"chrXV:600000-650000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXV') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_dbl-inv:200000-250000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXVI-Mmmyco_dbl-inv_yeast-seg1') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_dbl-inv:470000-490000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXVI-Mmmyco_dbl-inv_myco-seg1') |&gt; as_tibble(),\n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_dbl-inv:700000-720000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXVI-Mmmyco_dbl-inv_yeast-seg2') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_dbl-inv:1100000-1120000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXVI-Mmmyco_dbl-inv_myco-seg2') |&gt; as_tibble(),\n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_dbl-inv:1380000-1400000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXVI-Mmmyco_dbl-inv_yeast-seg3') |&gt; as_tibble(), \n    virtual4C(x, GRanges(\"chrXVI-Mmmyco_dbl-inv:1800000-1820000\")) |&gt; mutate(sample = 'chrXVI-Mmmyco_dbl-inv', group = 'chrXVI-Mmmyco_dbl-inv_myco-seg3') |&gt; as_tibble()\n)\n\ndf &lt;- bind_rows(v4C_chrXVI_Mmmyco, v4C_chrXVI_Mmmyco_inv870kb, v4C_chrXVI_Mmmyco_dbl_inv) |&gt;\n    group_by(sample, group) |&gt;\n    filter(score &gt; 0) |&gt;\n    mutate(score = zoo::rollmean(score, k = 20, na.pad = TRUE, align = 'center'))\n\nplot4C(\n    df, \n    aes(x = center, y = score, group = group, col = group)\n) + \n    facet_grid(seqnames~sample, scales = 'free') + \n    coord_cartesian(ylim = c(0, 0.01)) + \n    theme(legend.position = 'bottom')\n\n\n\n7.2.3 Panel 5d\n\nimport('data/LM122/matrices/LM122/LM122^mapped_W303_chrXVI-Mmmyco-XIII_flipped^TZ174P.mcool', resolution = 2000) %&gt;%\n    `[`(c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt;\n    plotMatrix(limits = c(-4.5, -1.5), chrom_lines = TRUE, dpi = 500) + \n    ggtitle(\"Transloc chr. XIII, G1\")\n\nimport('data/LM122/matrices/LM122/LM122^mapped_W303_chrXVI-Mmmyco-XIII_flipped^TZ174P.mcool', resolution = 4000) %&gt;%\n    `[`(c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt;\n    detrend() |&gt; \n    despeckle(use.scores = 'detrended') |&gt;\n    plotMatrix(limits = c(-1, 1), chrom_lines = TRUE, dpi = 500, use.scores = 'detrended.despeckled', scale = 'linear', cmap = bwrColors()) + \n    ggtitle(\"Transloc chr. XIII, G1\")\n\ntriple_G1 &lt;- import('data/LM122/matrices/LM122/LM122^mapped_W303_chrXVI-Mmmyco-XIII_flipped^TZ174P.mcool', resolution = 4000) \ndf &lt;- rbind(\n    virtual4C(triple_G1, viewpoint = GRanges('chrXIII-Mmmyco:120000-140000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr13-130kb'), \n    virtual4C(triple_G1, viewpoint = GRanges('chrXIII-Mmmyco:400000-420000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr13-400kb'), \n    virtual4C(triple_G1, viewpoint = GRanges('chrXIII-Mmmyco:900000-920000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr13-900kb'), \n\n    virtual4C(triple_G1, viewpoint = GRanges('chrXVI-Mmmyco-chrXIII:190000-210000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr16-200kb'),\n    virtual4C(triple_G1, viewpoint = GRanges('chrXVI-Mmmyco-chrXIII:490000-510000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr16-500kb'),\n    virtual4C(triple_G1, viewpoint = GRanges('chrXVI-Mmmyco-chrXIII:910000-930000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr16-920kb'),\n    virtual4C(triple_G1, viewpoint = GRanges('chrXVI-Mmmyco-chrXIII:1340000-1360000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr16-1350kb'),\n    virtual4C(triple_G1, viewpoint = GRanges('chrXVI-Mmmyco-chrXIII:1840000-1860000')) |&gt; \n        as_tibble() |&gt;\n        filter(seqnames %in% c('chrXIII-Mmmyco', 'chrXVI-Mmmyco-chrXIII')) |&gt; \n        mutate(viewpoint = 'chr16-1850kb')\n) |&gt; \n    group_by(viewpoint, seqnames) |&gt;\n    filter(score &gt; 0) |&gt;\n    mutate(score = zoo::rollmean(score, k = 15, na.pad = TRUE, align = 'center'))\n\np &lt;- plot4C(df, aes(x = center, y = score, group = viewpoint, col = viewpoint)) + \n    facet_grid(viewpoint~seqnames) + \n    coord_cartesian(ylim = c(0, 0.02)) + \n    theme(legend.position = 'bottom')",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Code for generating Figure 5 & Extended Data figures</span>"
    ]
  },
  {
    "objectID": "06.Analysis-Figure-05.html#figure-s6",
    "href": "06.Analysis-Figure-05.html#figure-s6",
    "title": "7  Code for generating Figure 5 & Extended Data figures",
    "section": "7.3 Figure S6",
    "text": "7.3 Figure S6\n\n7.3.1 Panel S6d\n\nBINSIZE &lt;- 10000\np_W303_Mmmyco &lt;- cowplot::plot_grid(\n    lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() %&gt;%\n        filter(seqnames %in% c('V', 'VI', 'VII', 'chrV', 'chrVI', 'chrVII', 'Mmmyco', 'Mpneumo')) %&gt;%\n        tracks[['PolII_W303_Mmmyco']][.] %&gt;% \n        as.data.frame() %&gt;% \n        group_by(group_name, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        arrange(group) %&gt;% \n        mutate(\n            chr = group_name, \n            group_name = ifelse(!group_name %in% c('Mmmyco', 'Mpneumo'), 'S. cerevisiae', 'chr. bact.'), \n            group_name = factor(group_name, c('S. cerevisiae', 'chr. bact.')), \n            l2cov = coverage\n        ) %&gt;% \n        group_by(chr) %&gt;%\n        filter(l2cov &gt; 0, !chr %in% c('Mito')) %&gt;%\n        (function(d) {\n            ggplot(d, aes(x = group, y = l2cov, col = group_name, fill = group_name)) + \n                geom_col() +\n                geom_vline(xintercept = c(1, d %&gt;% group_by(chr) %&gt;% slice_tail(n=1) %&gt;% pull(group))) +\n                VplotR::theme_ggplot2() + \n                labs(x = '', y = 'PolII') + \n                scale_x_continuous(label = dplyr::slice(d, ceiling(dplyr::n()/2))$chr, breaks = dplyr::slice(d, ceiling(dplyr::n()/2))$group, expand = c(0, 0)) + \n                scale_colour_manual(values = c('#808080', '#a3195b')) + scale_fill_manual(values = c('#808080', '#a3195b')) +\n                theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + \n                theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 3))\n        }),\n    lengths(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_Mmmyco/W303_Mmmyco.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() %&gt;%\n        filter(seqnames %in% c('V', 'VI', 'VII', 'chrV', 'chrVI', 'chrVII', 'Mmmyco', 'Mpneumo')) %&gt;%\n        tracks[['Scc1_W303_Mmmyco']][.] %&gt;% \n        as.data.frame() %&gt;% \n        group_by(group_name, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        arrange(group) %&gt;% \n        mutate(\n            chr = group_name, \n            group_name = ifelse(!group_name %in% c('Mmmyco', 'Mpneumo'), 'S. cerevisiae', 'chr. bact.'), \n            group_name = factor(group_name, c('S. cerevisiae', 'chr. bact.')), \n            l2cov = coverage\n        ) %&gt;% \n        group_by(chr) %&gt;%\n        filter(l2cov &gt; 0, !chr %in% c('Mito')) %&gt;%\n        (function(d) {\n            ggplot(d, aes(x = group, y = l2cov, col = group_name, fill = group_name)) + \n                geom_col() +\n                geom_vline(xintercept = c(1, d %&gt;% group_by(chr) %&gt;% slice_tail(n=1) %&gt;% pull(group))) +\n                VplotR::theme_ggplot2() + \n                labs(x = '', y = 'Scc1') + \n                scale_x_continuous(label = dplyr::slice(d, ceiling(dplyr::n()/2))$chr, breaks = dplyr::slice(d, ceiling(dplyr::n()/2))$group, expand = c(0, 0)) + \n                scale_colour_manual(values = c('#808080', '#a3195b')) + scale_fill_manual(values = c('#808080', '#a3195b')) +\n                theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + \n                theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 3))\n        }),\n    byrow = TRUE, \n    nrow = 2,\n    align = 'hv', axis = 'tblr'\n)\np_PolII_W303_chrXVI_Mmmyco_inv870kb &lt;- cowplot::plot_grid(\n    lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() %&gt;%\n        filter(seqnames %in% c('V', 'VI', 'VII', 'chrV', 'chrVI', 'chrVII', 'chrXVI-Mmmyco_inv870kb', 'chrXVI-Mmmyco_dbl-inv')) %&gt;%\n        tracks[['PolII_W303_chrXVI-Mmmyco_inv870kb']][.] %&gt;% \n        as.data.frame() %&gt;% \n        group_by(group_name, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        arrange(group) %&gt;% \n        mutate(\n            chr = group_name, \n            group_name = ifelse(!group_name %in% c('Mmmyco', 'Mpneumo'), 'S. cerevisiae', 'chr. bact.'), \n            group_name = factor(group_name, c('S. cerevisiae', 'chr. bact.')), \n            l2cov = coverage\n        ) %&gt;% \n        group_by(chr) %&gt;%\n        filter(l2cov &gt; 0, !chr %in% c('Mito')) %&gt;%\n        (function(d) {\n            ggplot(d, aes(x = group, y = l2cov, col = group_name, fill = group_name)) + \n                geom_col() +\n                geom_vline(xintercept = c(1, d %&gt;% group_by(chr) %&gt;% slice_tail(n=1) %&gt;% pull(group))) +\n                VplotR::theme_ggplot2() + \n                labs(x = '', y = 'PolII') + \n                scale_x_continuous(label = dplyr::slice(d, ceiling(dplyr::n()/2))$chr, breaks = dplyr::slice(d, ceiling(dplyr::n()/2))$group, expand = c(0, 0)) + \n                scale_colour_manual(values = c('#808080', '#a3195b')) + scale_fill_manual(values = c('#808080', '#a3195b')) +\n                theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + \n                theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 3)) + \n                geom_hline(yintercept = 1)\n        }),\n    lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_inv870kb/W303_chrXVI-Mmmyco_inv870kb.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() %&gt;%\n        filter(seqnames %in% c('V', 'VI', 'VII', 'chrV', 'chrVI', 'chrVII', 'chrXVI-Mmmyco_inv870kb', 'chrXVI-Mmmyco_dbl-inv')) %&gt;%\n        tracks[['Scc1_W303_chrXVI-Mmmyco_inv870kb']][.] %&gt;% \n        as.data.frame() %&gt;% \n        group_by(group_name, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        arrange(group) %&gt;% \n        mutate(\n            chr = group_name, \n            group_name = ifelse(!group_name %in% c('Mmmyco', 'Mpneumo'), 'S. cerevisiae', 'chr. bact.'), \n            group_name = factor(group_name, c('S. cerevisiae', 'chr. bact.')), \n            l2cov = coverage\n        ) %&gt;% \n        group_by(chr) %&gt;%\n        filter(l2cov &gt; 0, !chr %in% c('Mito')) %&gt;%\n        (function(d) {\n            ggplot(d, aes(x = group, y = l2cov, col = group_name, fill = group_name)) + \n                geom_col() +\n                geom_vline(xintercept = c(1, d %&gt;% group_by(chr) %&gt;% slice_tail(n=1) %&gt;% pull(group))) +\n                VplotR::theme_ggplot2() + \n                labs(x = '', y = 'Scc1') + \n                scale_x_continuous(label = dplyr::slice(d, ceiling(dplyr::n()/2))$chr, breaks = dplyr::slice(d, ceiling(dplyr::n()/2))$group, expand = c(0, 0)) + \n                scale_colour_manual(values = c('#808080', '#a3195b')) + scale_fill_manual(values = c('#808080', '#a3195b')) +\n                theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + \n                theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 3)) + \n                geom_hline(yintercept = 1)\n        }),\n    byrow = TRUE, \n    nrow = 2,\n    align = 'hv', axis = 'tblr'\n)\np_PolII_W303_chrXVI_Mmmyco_dbl_inv &lt;- cowplot::plot_grid(\n    lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() %&gt;%\n        filter(seqnames %in% c('V', 'VI', 'VII', 'chrV', 'chrVI', 'chrVII', 'chrXVI-Mmmyco_inv870kb', 'chrXVI-Mmmyco_dbl-inv')) %&gt;%\n        tracks[['PolII_W303_chrXVI-Mmmyco_dbl-inv']][.] %&gt;% \n        as.data.frame() %&gt;% \n        group_by(group_name, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        arrange(group) %&gt;% \n        mutate(\n            chr = group_name, \n            group_name = ifelse(!group_name %in% c('Mmmyco', 'Mpneumo'), 'S. cerevisiae', 'chr. bact.'), \n            group_name = factor(group_name, c('S. cerevisiae', 'chr. bact.')), \n            l2cov = coverage\n        ) %&gt;% \n        group_by(chr) %&gt;%\n        filter(l2cov &gt; 0, !chr %in% c('Mito')) %&gt;%\n        (function(d) {\n            ggplot(d, aes(x = group, y = l2cov, col = group_name, fill = group_name)) + \n                geom_col() +\n                geom_vline(xintercept = c(1, d %&gt;% group_by(chr) %&gt;% slice_tail(n=1) %&gt;% pull(group))) +\n                VplotR::theme_ggplot2() + \n                labs(x = '', y = 'PolII') + \n                scale_x_continuous(label = dplyr::slice(d, ceiling(dplyr::n()/2))$chr, breaks = dplyr::slice(d, ceiling(dplyr::n()/2))$group, expand = c(0, 0)) + \n                scale_colour_manual(values = c('#808080', '#a3195b')) + scale_fill_manual(values = c('#808080', '#a3195b')) +\n                theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + \n                theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 3))\n        }),\n    lengths(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')) %&gt;%   \n        purrr::set_names(names(Biostrings::readDNAStringSet('~/genomes/W303_chrXVI-Mmmyco_dbl-inv/W303_chrXVI-Mmmyco_dbl-inv.fa')) %&gt;% str_replace(' .*', '')) %&gt;% \n        tileGenome(tilewidth = BINSIZE) %&gt;% \n        unlist() %&gt;%\n        filter(seqnames %in% c('V', 'VI', 'VII', 'chrV', 'chrVI', 'chrVII', 'chrXVI-Mmmyco_inv870kb', 'chrXVI-Mmmyco_dbl-inv')) %&gt;%\n        tracks[['Scc1_W303_chrXVI-Mmmyco_dbl-inv']][.] %&gt;% \n        as.data.frame() %&gt;% \n        group_by(group_name, group) %&gt;% \n        summarize(coverage = mean(value)) %&gt;% \n        arrange(group) %&gt;% \n        mutate(\n            chr = group_name, \n            group_name = ifelse(!group_name %in% c('Mmmyco', 'Mpneumo'), 'S. cerevisiae', 'chr. bact.'), \n            group_name = factor(group_name, c('S. cerevisiae', 'chr. bact.')), \n            l2cov = coverage\n        ) %&gt;% \n        group_by(chr) %&gt;%\n        filter(l2cov &gt; 0, !chr %in% c('Mito')) %&gt;%\n        (function(d) {\n            ggplot(d, aes(x = group, y = l2cov, col = group_name, fill = group_name)) + \n                geom_col() +\n                geom_vline(xintercept = c(1, d %&gt;% group_by(chr) %&gt;% slice_tail(n=1) %&gt;% pull(group))) +\n                VplotR::theme_ggplot2() + \n                labs(x = '', y = 'Scc1') + \n                scale_x_continuous(label = dplyr::slice(d, ceiling(dplyr::n()/2))$chr, breaks = dplyr::slice(d, ceiling(dplyr::n()/2))$group, expand = c(0, 0)) + \n                scale_colour_manual(values = c('#808080', '#a3195b')) + scale_fill_manual(values = c('#808080', '#a3195b')) +\n                theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) + \n                theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n                coord_cartesian(expand = FALSE, ylim = c(0, 3))\n        }),\n    byrow = TRUE, \n    nrow = 2,\n    align = 'hv', axis = 'tblr'\n)\np &lt;- cowplot::plot_grid(p_W303_Mmmyco, p_PolII_W303_chrXVI_Mmmyco_inv870kb, p_PolII_W303_chrXVI_Mmmyco_dbl_inv, ncol = 3, align = 'hv', axis = 'tblr')\n\n\n\n7.3.2 Panel S6e\n\nx_chrXVI_Mmmyco_G1 &lt;- contacts_maps[['chrXVI-Mmmyco_G1']]\npairsFile(x_chrXVI_Mmmyco_G1) &lt;- '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco/HiC/pairs/LM33/LM33^mapped_W303_chrXVI-Mmmyco^CTGJED.valid_idx_pcrfree.pairs'\nx_chrXVI_Mmmyco_G2 &lt;- contacts_maps[['chrXVI-Mmmyco_G2']]\npairsFile(x_chrXVI_Mmmyco_G2) &lt;- '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco/HiC/pairs/LM34/LM34^mapped_W303_chrXVI-Mmmyco^Q1B8XV.valid_idx_pcrfree.pairs'\nx_chrXVI_Mmmyco_single_transloc_G1 &lt;- contacts_maps[['chrXVI-Mmmyco_single-transloc_G1']]\npairsFile(x_chrXVI_Mmmyco_single_transloc_G1) &lt;- '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/HiC/pairs/LM62/LM62^mapped_W303_chrXVI-Mmmyco_inv870kb^CR0A8F.valid_idx_pcrfree.pairs'\nx_chrXVI_Mmmyco_single_transloc_G2 &lt;- contacts_maps[['chrXVI-Mmmyco_single-transloc_G2']]\npairsFile(x_chrXVI_Mmmyco_single_transloc_G2) &lt;- '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/HiC/pairs/LM58/LM58^mapped_W303_chrXVI-Mmmyco_inv870kb^DNJEQF.valid_idx_pcrfree.pairs'\nx_chrXVI_Mmmyco_double_transloc_G1 &lt;- contacts_maps[['chrXVI-Mmmyco_double-transloc_G1']]\npairsFile(x_chrXVI_Mmmyco_double_transloc_G1) &lt;- '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/HiC/pairs/LM63/LM63^mapped_W303_chrXVI-Mmmyco_dbl-inv^4KJ91Y.valid_idx_pcrfree.pairs'\nx_chrXVI_Mmmyco_double_transloc_G2 &lt;- contacts_maps[['chrXVI-Mmmyco_double-transloc_G2']]\npairsFile(x_chrXVI_Mmmyco_double_transloc_G2) &lt;- '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/HiC/pairs/LM59/LM59^mapped_W303_chrXVI-Mmmyco_dbl-inv^A3S9E5.valid_idx_pcrfree.pairs'\n\nscalo &lt;- bind_rows(\n    getScalogram(x_chrXVI_Mmmyco_G1, nbins = 100, probs = c(0, 0.25, 0.5, 0.75, 1)) |&gt; mutate(group = 'chrXVI-Mmmyco_G1'), \n    getScalogram(x_chrXVI_Mmmyco_G2, nbins = 100, probs = c(0, 0.25, 0.5, 0.75, 1)) |&gt; mutate(group = 'chrXVI-Mmmyco_G2'),\n    getScalogram(x_chrXVI_Mmmyco_single_transloc_G1, nbins = 100, probs = c(0, 0.25, 0.5, 0.75, 1)) |&gt; mutate(group = 'chrXVI_Mmmyco_single_transloc_G1'), \n    getScalogram(x_chrXVI_Mmmyco_single_transloc_G2, nbins = 100, probs = c(0, 0.25, 0.5, 0.75, 1)) |&gt; mutate(group = 'chrXVI_Mmmyco_single_transloc_G2'), \n    getScalogram(x_chrXVI_Mmmyco_double_transloc_G1, nbins = 100, probs = c(0, 0.25, 0.5, 0.75, 1)) |&gt; mutate(group = 'chrXVI_Mmmyco_double_transloc_G1'), \n    getScalogram(x_chrXVI_Mmmyco_double_transloc_G2, nbins = 100, probs = c(0, 0.25, 0.5, 0.75, 1)) |&gt; mutate(group = 'chrXVI_Mmmyco_double_transloc_G2')\n)\nggScalogram(\n    filter(scalo, chr %in% c('chrIV', 'chrXVI-Mmmyco', 'chrXVI-Mmmyco_inv870kb', 'chrXVI-Mmmyco_dbl-inv')), \n    ylim = c(2000, 1e5)\n) + facet_grid(chr~group, scales = 'free')\n\n\n\n7.3.3 Panel S6f\ncontacts_maps &lt;- list(\n    'Mmmyco_G2' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220309_Christophe_GC-paper/data/W303_Mmmyco/HiC/matrices/CH196_nvq/CH196_nvq^mapped_W303_Mmmyco^PRWGZZ.mcool', \n        resolution = 4000\n    ), \n    'chrXVI-Mmmyco_G2' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco/HiC/matrices/LM34/LM34^mapped_W303_chrXVI-Mmmyco^Q1B8XV.mcool', \n        resolution = 4000\n    ),\n    'chrXVI-Mmmyco_single-transloc_G2' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_inv870kb/HiC/matrices/LM58/LM58^mapped_W303_chrXVI-Mmmyco_inv870kb^DNJEQF.mcool', \n        resolution = 4000\n    ),\n    'chrXVI-Mmmyco_double-transloc_G2' = HiCExperiment::HiCExperiment(\n        '~/Projects/20220510_Lea_mapping-HiC-Scc1/data/W303_chrXVI-Mmmyco_dbl-inv/HiC/matrices/LM59/LM59^mapped_W303_chrXVI-Mmmyco_dbl-inv^A3S9E5.mcool', \n        resolution = 4000\n    )\n)\n\ncmap &lt;- HiCExperiment::afmhotrColors()\n\nlapply(names(contacts_maps), function(n) {\n    m &lt;- contacts_maps[[n]]\n    # Full genome maps\n    p &lt;- plotMatrix(m, limits = c(-4, -1), cmap = cmap)\n    ggsave(glue::glue('figures/fig6/{n}_whole-genome___4.pdf'))\n    # last chromosomes\n    chr &lt;- tail(GenomeInfoDb::seqlevels(seqinfo(m)), 1)\n    sub &lt;- if(grepl('chr', chr)) c('chrXV', chr) else c('chrXV', 'chrXVI', chr)\n    p &lt;- plotMatrix(m[sub], limits = c(-4, -2), cmap = cmap) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())\n    ggsave(glue::glue('figures/fig6/{n}_chrXV-{chr}___4.pdf'))\n    # autocorrelation of last chromosomes\n    chr &lt;- tail(GenomeInfoDb::seqlevels(seqinfo(m)), 1)\n    sub &lt;- if(grepl('chr', chr)) c(chr) else c('chrXVI', chr)\n    plotMatrix(autocorrelate(m[sub]), limits = c(-1, 1), scale = 'linear', cmap = bwrColors()) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())\n})\n\nlapply(names(contacts_maps), function(n) {\n    m &lt;- contacts_maps[[n]] |&gt; \n        zoom(resolution = 8000)\n    m &lt;- autocorrelate(m, use.scores = 'balanced', detrend = FALSE, ignore_ndiags = 4)\n    plotMatrix(m, use.scores = 'autocorrelated', limits = c(-0.8, 0.8), scale = 'linear', cmap = bwrColors())\n})\n\n\n7.3.4 Panel S6g\n\ncowplot::plot_grid(\n    plotMatrix(contacts_maps[['chrXVI-Mmmyco_G2']]['chrXVI-Mmmyco:456000-556000'] |&gt; zoom(2000) |&gt; detrend(), use.scores = 'balanced', limits = c(-3.5, -1.2), scale = 'log10', cmap = coolerColors()), \n    plotMatrix(contacts_maps[['chrXVI-Mmmyco_G2']]['chrXVI-Mmmyco:1328000-1428000'] |&gt; zoom(2000) |&gt; detrend(), use.scores = 'balanced', limits = c(-3.5, -1.2), scale = 'log10', cmap = coolerColors()), \n    plotMatrix(contacts_maps[['chrXVI-Mmmyco_single-transloc_G2']]['chrXVI-Mmmyco_inv870kb:456000-556000'] |&gt; zoom(2000) |&gt; detrend(), use.scores = 'balanced', limits = c(-3.5, -1.2), scale = 'log10', cmap = coolerColors()), \n    nrow = 1\n)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Code for generating Figure 5 & Extended Data figures</span>"
    ]
  }
]